{
  "version": "1.0",
  "lastUpdated": "2025-07-03T13:50:22.514Z",
  "templates": [
    {
      "description": "一个专业的暗色主题报告模板，采用现代Bento Grid布局和流畅动画效果。包含渐变标题、数据卡片、对比表格等组件，适用于技术分析、产品对比、研究报告等场景。支持响应式设计，易于定制主题色和内容。",
      "category": "design",
      "tags": [
        "幻灯片",
        "科技",
        "产品展示",
        "动画效果"
      ],
      "difficulty": "intermediate",
      "title": "产品调研报告",
      "id": "aiagentdeck",
      "code": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Beautiful Report Template</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\">\n    <style>\n        /* 核心样式变量 */\n        :root {\n            --primary-color: #d85522;\n            --primary-light: #ff9d78;\n            --bg-dark: #000000;\n            --bg-card: #111827;\n            --border-color: #374151;\n            --text-primary: #e5e7eb;\n            --text-secondary: #9ca3af;\n        }\n\n        body {\n            background-color: var(--bg-dark);\n            color: var(--text-primary);\n            overflow-x: hidden;\n        }\n\n        /* 主题色相关 */\n        .highlight { color: var(--primary-color); }\n        .bg-highlight { background-color: var(--primary-color); }\n        .border-highlight { border-color: var(--primary-color); }\n\n        /* 渐变背景 */\n        .highlight-gradient-bg {\n            background: linear-gradient(145deg, rgba(216, 85, 34, 0.1), rgba(216, 85, 34, 0.02) 70%);\n        }\n\n        /* 渐变文字动画 */\n        .highlight-gradient-text {\n            background: linear-gradient(90deg, var(--primary-color), var(--primary-light), var(--primary-color));\n            background-size: 200% auto;\n            -webkit-background-clip: text;\n            background-clip: text;\n            color: transparent;\n            animation: gradient-shine 5s linear infinite;\n        }\n\n        @keyframes gradient-shine {\n            0% { background-position: 200% center; }\n            100% { background-position: 0% center; }\n        }\n\n        /* Bento卡片样式 */\n        .bento-card {\n            background-color: var(--bg-card);\n            border: 1px solid var(--border-color);\n            border-radius: 0.75rem;\n            padding: 1.5rem;\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\n            overflow: hidden;\n            position: relative;\n        }\n\n        .bento-card:hover {\n            transform: translateY(-5px) scale(1.02);\n            box-shadow: 0 10px 25px -5px rgba(216, 85, 34, 0.2), 0 8px 10px -6px rgba(216, 85, 34, 0.2);\n        }\n\n        /* 字体大小定义 */\n        .font-zh-large {\n            font-size: clamp(2.5rem, 6vw, 4.5rem);\n            font-weight: 800;\n            line-height: 1.2;\n            display: inline-block;\n        }\n\n        .font-en-small {\n            font-size: 0.875rem;\n            color: var(--text-secondary);\n            display: block;\n            margin-top: 0.1rem;\n            font-weight: 400;\n            letter-spacing: 0.05em;\n        }\n\n        .font-ultra-large {\n            font-size: clamp(4rem, 12vw, 7rem);\n            font-weight: 800;\n            line-height: 1;\n            color: var(--primary-color);\n        }\n\n        /* 标题下划线效果 */\n        .enhanced-title-container {\n            position: relative;\n            display: inline-block;\n        }\n\n        .enhanced-title-container::after {\n            content: '';\n            position: absolute;\n            bottom: -10px;\n            left: 10%;\n            width: 80%;\n            height: 3px;\n            background: linear-gradient(90deg, rgba(216, 85, 34, 0), var(--primary-color), rgba(216, 85, 34, 0));\n            opacity: 0.7;\n            filter: blur(2px);\n            transition: opacity 0.3s ease;\n        }\n\n        /* 表格样式 */\n        table {\n            width: 100%;\n            border-collapse: collapse;\n            margin-top: 1.5rem;\n        }\n\n        th, td {\n            border: 1px solid var(--border-color);\n            padding: 0.75rem 1rem;\n            text-align: left;\n            vertical-align: middle;\n            font-size: 0.875rem;\n        }\n\n        th {\n            background-color: #1f2937;\n            font-weight: 600;\n            white-space: nowrap;\n        }\n\n        tbody tr:nth-child(odd) {\n            background-color: var(--bg-card);\n        }\n\n        tbody tr:nth-child(even) {\n            background-color: rgba(31, 41, 55, 0.5);\n        }\n\n        /* 图标样式 */\n        .fa-check { color: #22c55e; }\n        .fa-xmark { color: #ef4444; }\n        .fa-triangle-exclamation { color: #eab308; }\n\n        /* 动画相关 */\n        .motion-div { display: block; }\n\n        /* 链接样式 */\n        .framework-links a {\n            color: var(--primary-color);\n            transition: color 0.2s ease;\n            margin-right: 0.75rem;\n            font-size: 0.8rem;\n            text-decoration: none;\n        }\n\n        .framework-links a:hover {\n            color: var(--primary-light);\n        }\n\n        .framework-links i {\n            margin-right: 0.2rem;\n        }\n\n        /* 响应式调整 */\n        @media (max-width: 768px) {\n            .font-zh-large {\n                font-size: clamp(2rem, 8vw, 3rem);\n            }\n            \n            .bento-card {\n                padding: 1rem;\n            }\n        }\n    </style>\n</head>\n<body class=\"font-sans antialiased\">\n    <!-- 主容器 -->\n    <div class=\"container mx-auto px-4 py-12 max-w-7xl\">\n\n        <!-- 头部区域 -->\n        <header class=\"text-center mb-20 motion-div\">\n            <div class=\"enhanced-title-container mb-4\">\n                <h1 class=\"font-zh-large mb-2 highlight-gradient-text\">\n                    您的报告标题\n                </h1>\n            </div>\n            <span class=\"font-en-small block -mt-2 mb-4\">Your Report Subtitle</span>\n            <p class=\"text-lg text-gray-400 max-w-3xl mx-auto\">\n                这里是您的报告描述，简洁明了地说明报告的主要内容和价值。\n            </p>\n        </header>\n\n        <!-- 引言部分 -->\n        <section class=\"mb-16 motion-div\">\n            <div class=\"bento-card highlight-gradient-bg\">\n                <h2 class=\"text-2xl font-bold mb-4\">\n                    <span class=\"highlight\">1.</span> 引言 \n                    <span class=\"font-en-small -mt-1\">Introduction</span>\n                </h2>\n                <p class=\"text-gray-300 leading-relaxed\">\n                    这里是您的引言内容。可以介绍报告的背景、目的和主要发现。\n                    文字应该清晰、专业，符合您的报告主题。\n                </p>\n            </div>\n        </section>\n\n        <!-- 关键指标展示 - Bento Grid布局 -->\n        <section class=\"mb-16 motion-div\">\n            <h2 class=\"text-3xl font-bold mb-8 text-center\">\n                <span class=\"highlight\">2.</span> 关键数据\n                <span class=\"font-en-small\">Key Metrics</span>\n            </h2>\n            <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                \n                <!-- 大数据卡片 -->\n                <div class=\"bento-card flex flex-col items-center justify-center text-center motion-div\">\n                    <div class=\"font-ultra-large leading-none\">85<span class=\"text-4xl align-top\">%</span></div>\n                    <h3 class=\"text-xl font-semibold mt-2\">\n                        主要指标\n                        <span class=\"font-en-small -mt-1\">Primary Metric</span>\n                    </h3>\n                    <p class=\"text-lg font-bold text-gray-100 mt-1\">关键发现</p>\n                    <p class=\"text-xs text-gray-400 mt-2\">详细说明或数据来源</p>\n                    <div class=\"w-full h-1 bg-gradient-to-r from-transparent via-[#d85522]/[0.7] to-transparent mt-4 opacity-50\"></div>\n                </div>\n\n                <!-- 信息卡片 -->\n                <div class=\"bento-card motion-div\">\n                    <h3 class=\"text-xl font-semibold mb-4 border-b border-gray-700 pb-2\">\n                        <i class=\"fas fa-chart-line mr-2 highlight\"></i> 分析维度\n                        <span class=\"font-en-small -mt-1\">Analysis Dimensions</span>\n                    </h3>\n                    <ul class=\"space-y-3 text-gray-300 text-sm\">\n                        <li><strong class=\"text-gray-100 block\">维度一</strong> \n                            详细说明这个维度的重要性和分析方法。</li>\n                        <li><strong class=\"text-gray-100 block\">维度二</strong> \n                            解释第二个分析维度及其价值。</li>\n                        <li><strong class=\"text-gray-100 block\">维度三</strong> \n                            描述第三个关键分析角度。</li>\n                    </ul>\n                </div>\n\n                <!-- 统计卡片 -->\n                <div class=\"bento-card flex flex-col items-center justify-center text-center motion-div\">\n                    <div class=\"font-ultra-large\">12+</div>\n                    <div class=\"text-xl font-semibold mt-1\">\n                        样本数量\n                        <span class=\"font-en-small -mt-1\">Sample Size</span>\n                    </div>\n                    <div class=\"w-full h-1 bg-gradient-to-r from-transparent via-[#d85522]/[0.7] to-transparent mt-4 opacity-50\"></div>\n                </div>\n            </div>\n        </section>\n\n        <!-- 数据表格部分 -->\n        <section class=\"mb-16 motion-div\">\n            <h2 class=\"text-3xl font-bold mb-6 text-center\">\n                <span class=\"highlight\">3.</span> 详细数据\n                <span class=\"font-en-small\">Detailed Data</span>\n            </h2>\n            <div class=\"overflow-x-auto bento-card\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>项目</th>\n                            <th>指标A</th>\n                            <th>指标B</th>\n                            <th>指标C</th>\n                            <th>评级</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>项目1</td>\n                            <td class=\"text-center\"><i class=\"fas fa-check\"></i></td>\n                            <td class=\"text-center\"><i class=\"fas fa-xmark\"></i></td>\n                            <td class=\"text-center\"><i class=\"fas fa-triangle-exclamation\"></i></td>\n                            <td><span class=\"highlight font-semibold\">A+</span></td>\n                        </tr>\n                        <tr>\n                            <td>项目2</td>\n                            <td class=\"text-center\"><i class=\"fas fa-check\"></i></td>\n                            <td class=\"text-center\"><i class=\"fas fa-check\"></i></td>\n                            <td class=\"text-center\"><i class=\"fas fa-xmark\"></i></td>\n                            <td><span class=\"highlight font-semibold\">A</span></td>\n                        </tr>\n                        <tr>\n                            <td>项目3</td>\n                            <td class=\"text-center\"><i class=\"fas fa-triangle-exclamation\"></i></td>\n                            <td class=\"text-center\"><i class=\"fas fa-check\"></i></td>\n                            <td class=\"text-center\"><i class=\"fas fa-check\"></i></td>\n                            <td><span class=\"highlight font-semibold\">B+</span></td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div class=\"mt-4 text-sm text-gray-400 space-y-1\">\n                    <p><i class=\"fas fa-check mr-1\"></i>: 完全支持</p>\n                    <p><i class=\"fas fa-triangle-exclamation mr-1\"></i>: 部分支持</p>\n                    <p><i class=\"fas fa-xmark mr-1\"></i>: 不支持</p>\n                </div>\n            </div>\n        </section>\n\n        <!-- 详细分析 - Bento Grid -->\n        <section class=\"mb-16\">\n            <h2 class=\"text-3xl font-bold mb-8 text-center\">\n                <span class=\"highlight\">4.</span> 详细分析\n                <span class=\"font-en-small\">Detailed Analysis</span>\n            </h2>\n            <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                \n                <!-- 分析卡片模板 -->\n                <div class=\"bento-card motion-div\">\n                    <h3 class=\"text-2xl font-bold mb-1 pb-2 border-b border-gray-600\">\n                        分析对象A\n                        <span class=\"font-en-small -mt-1\">Analysis Subject A</span>\n                    </h3>\n                    <div class=\"framework-links mb-3 mt-1\">\n                        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <i class=\"fas fa-home\"></i>官网\n                        </a>\n                        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <i class=\"fas fa-book\"></i>文档\n                        </a>\n                    </div>\n                    <ul class=\"space-y-2 text-sm\">\n                        <li><strong class=\"text-gray-400 block\">核心特性</strong>\n                            <span class=\"ml-2\"><i class=\"fas fa-check mr-1\"></i> 特性1: <span class=\"text-gray-300\">详细说明</span></span><br>\n                            <span class=\"ml-2\"><i class=\"fas fa-xmark mr-1\"></i> 特性2: <span class=\"text-gray-300\">不支持的原因</span></span><br>\n                            <span class=\"ml-2\"><i class=\"fas fa-triangle-exclamation mr-1\"></i> 特性3: <span class=\"text-gray-300\">部分支持说明</span></span>\n                        </li>\n                        <li><strong class=\"text-gray-400 block\">应用场景</strong>\n                            <span class=\"text-gray-300\">适用于什么样的项目和需求</span>\n                        </li>\n                    </ul>\n                </div>\n\n                <!-- 可以复制更多卡片 -->\n                <div class=\"bento-card motion-div\">\n                    <h3 class=\"text-2xl font-bold mb-1 pb-2 border-b border-gray-600\">\n                        分析对象B\n                        <span class=\"font-en-small -mt-1\">Analysis Subject B</span>\n                    </h3>\n                    <div class=\"framework-links mb-3 mt-1\">\n                        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <i class=\"fab fa-github\"></i>项目页\n                        </a>\n                        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <i class=\"fas fa-book\"></i>文档\n                        </a>\n                    </div>\n                    <ul class=\"space-y-2 text-sm\">\n                        <li><strong class=\"text-gray-400 block\">优势</strong>\n                            <span class=\"text-gray-300\">列出主要优势和特点</span>\n                        </li>\n                        <li><strong class=\"text-gray-400 block\">局限性</strong>\n                            <span class=\"text-gray-300\">说明存在的限制和不足</span>\n                        </li>\n                    </ul>\n                </div>\n\n                <div class=\"bento-card motion-div\">\n                    <h3 class=\"text-2xl font-bold mb-1 pb-2 border-b border-gray-600\">\n                        分析对象C\n                        <span class=\"font-en-small -mt-1\">Analysis Subject C</span>\n                    </h3>\n                    <div class=\"framework-links mb-3 mt-1\">\n                        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <i class=\"fas fa-home\"></i>主页\n                        </a>\n                    </div>\n                    <ul class=\"space-y-2 text-sm\">\n                        <li><strong class=\"text-gray-400 block\">核心价值</strong>\n                            <span class=\"text-gray-300\">解释为什么这个选项值得关注</span>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </section>\n\n        <!-- 结论部分 -->\n        <section class=\"mb-16 motion-div\">\n            <div class=\"bento-card highlight-gradient-bg\">\n                <h2 class=\"text-2xl font-bold mb-4\">\n                    <span class=\"highlight\">5.</span> 结论 \n                    <span class=\"font-en-small -mt-1\">Conclusion</span>\n                </h2>\n                <div class=\"text-gray-300 leading-relaxed space-y-3\">\n                    <p>本次分析的主要发现和建议：</p>\n                    <ul class=\"space-y-2\">\n                        <li><strong class=\"highlight\">关键发现1</strong>: 详细说明第一个重要发现及其影响。</li>\n                        <li><strong class=\"highlight\">关键发现2</strong>: 阐述第二个主要结论和推荐行动。</li>\n                        <li><strong class=\"highlight\">关键发现3</strong>: 总结第三个重要洞察和未来展望。</li>\n                    </ul>\n                    <p>基于以上分析，我们建议在选择时重点考虑项目需求、团队技能和长期维护等因素。</p>\n                </div>\n            </div>\n        </section>\n\n        <!-- 页脚 -->\n        <footer class=\"text-center text-gray-500 text-sm mt-12 pb-8\">\n            Beautiful Report Template | 可定制化报告模板\n        </footer>\n    </div>\n\n    <!-- Framer Motion 动画脚本 -->\n    <script type=\"module\">\n        import { animate, inView } from \"https://unpkg.com/framer-motion@11.1.9/dist/framer-motion.mjs\";\n\n        // 简化的动画设置\n        const elements = document.querySelectorAll('.motion-div');\n\n        elements.forEach((element, index) => {\n            // 设置初始状态\n            Object.assign(element.style, {\n                opacity: 0,\n                transform: 'translateY(30px)'\n            });\n\n            // 进入视口时的动画\n            inView(element, () => {\n                animate(\n                    element,\n                    { opacity: 1, transform: 'translateY(0px)' },\n                    { duration: 0.6, delay: index * 0.1 }\n                );\n            }, { amount: 0.2 });\n        });\n    </script>\n</body>\n</html>",
      "codeLang": "html"
    },
    {
      "description": "这是一个多语言支持的商业分析报告网页模板，专为展示2025年迪拜住宅市场的第一季度数据而设计。该模板采用现代化的设计风格，结合了响应式布局和交互式图表，确保在各种设备上均有出色的用户体验。页面顶部设有语言切换器，允许用户在简体中文、繁体中文和英文之间自由切换，以满足不同语言用户的需求。主要内容区域包括市场概览、价格趋势、销售数据和未来预测等关键部分，每个部分都配有清晰的标题和简洁的文字说明。此外，模板集成了ApexCharts库，用于呈现动态的折线图和柱状图，使数据可视化更加直观易懂。整体配色方案以Meaven Group的品牌色为主，辅以柔和的背景色，营造出专业且可信赖的氛围。无论是房地产专业人士、投资者还是市场分析师，这个模板都能帮助他们快速获取并理解迪拜住宅市场的最新动态。",
      "category": "business",
      "tags": [
        "报告",
        "分析",
        "市场",
        "数据",
        "商业"
      ],
      "difficulty": "advanced",
      "id": "report-businessanalysis",
      "title": "商业分析报告",
      "code": "<!DOCTYPE html>\n<html lang=\"zh-TW\" data-lang=\"zh-TW\"> <!-- Default to Traditional Chinese -->\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>\n        <span data-lang-content=\"zh-CN\">2025迪拜住宅市场报告Q1 | Meaven Group</span>\n        <span data-lang-content=\"zh-TW\">2025杜拜住宅市場報告Q1 | Meaven Group</span>\n        <span data-lang-content=\"en\">2025 Dubai Residential Market Report Q1 | Meaven Group</span>\n    </title>\n    <!-- TailwindCSS CDN -->\n    <script src=\"https://lib.youware.com/youware-lib-consumer.1751867514.js\" id=\"yourware-lib\"></script><script src=\"https://cdn.tailwindcss.com\"></script>\n    <!-- Framer Motion CDN -->\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/framer-motion/10.16.4/framer-motion.umd.js\"></script>\n    <!-- Font Awesome CDN -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\">\n    <!-- ApexCharts CDN -->\n    <script src=\"https://cdn.jsdelivr.net/npm/apexcharts\"></script>\n    <style>\n        :root {\n            --meaven-green: #009144;\n            --meaven-green-rgb: 0, 145, 68;\n            --accent-gray: #f0f2f5; \n            --text-primary: #1f2937; \n            --text-secondary: #374151; \n            --text-muted: #6b7280; \n        }\n        body {\n            background-color: #ffffff;\n            font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"PingFang SC\", \"Lantinghei SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", sans-serif;\n            color: var(--text-primary);\n            overflow-x: hidden; \n        }\n        .highlight-green {\n            color: var(--meaven-green);\n        }\n        .bg-highlight-green {\n            background-color: var(--meaven-green);\n        }\n        .bg-accent {\n            background-color: var(--accent-gray);\n        }\n        .border-accent {\n            border-color: var(--accent-gray);\n        }\n\n        /* Language Switcher */\n        #lang-switcher-container { \n            position: fixed;\n            top: 1rem;\n            right: 1rem;\n            z-index: 1000;\n        }\n        .lang-switcher {\n            background-color: white;\n            padding: 0.5rem;\n            border-radius: 0.375rem;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n            display: flex;\n            gap: 0.5rem;\n        }\n        .lang-switcher button {\n            padding: 0.25rem 0.5rem;\n            border: 1px solid var(--meaven-green);\n            color: var(--meaven-green);\n            background-color: white;\n            border-radius: 0.25rem;\n            cursor: pointer;\n            font-size: 0.875rem;\n        }\n        .lang-switcher button.active {\n            background-color: var(--meaven-green);\n            color: white;\n        }\n\n        /* Bento Grid Styles */\n        .bento-grid {\n            display: grid;\n            gap: 1rem;\n        }\n        @media (min-width: 768px) {\n            .bento-grid {\n                gap: 1.5rem;\n            }\n        }\n\n        .bento-item {\n            background-color: #f9fafb; \n            border-radius: 0.75rem;\n            padding: 1.25rem;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\n            overflow: hidden;\n        }\n        @media (min-width: 768px) {\n            .bento-item {\n                padding: 1.5rem;\n            }\n        }\n        .bento-item.recap-block {\n            background-color: white; \n            box-shadow: 0 4px 15px rgba(0,0,0,0.07); \n        }\n\n        /* Typography */\n        .title-cn-main {\n            font-size: 2.25rem; \n            font-weight: 700;\n            line-height: 1.2;\n            margin-bottom: 0.75rem; \n        }\n        @media (min-width: 768px) {\n            .title-cn-main {\n                font-size: 3rem;\n                margin-bottom: 1rem; \n            }\n        }\n         @media (min-width: 1024px) {\n            .title-cn-main {\n                font-size: 3.75rem;\n            }\n        }\n        .title-cn-item {\n            font-size: 1.5rem; \n            font-weight: 700;\n            color: var(--text-primary); \n        }\n         @media (min-width: 768px) {\n            .title-cn-item {\n                font-size: 1.875rem;\n            }\n        }\n        .title-cn-recap {\n            font-size: 1.75rem; \n            font-weight: 700;\n            color: var(--meaven-green);\n            margin-bottom: 0.75rem;\n        }\n         @media (min-width: 768px) {\n            .title-cn-recap {\n                font-size: 2rem; \n            }\n        }\n        .subtitle-en { \n            font-size: 0.875rem; \n            color: var(--text-muted); \n            display: block;\n            font-weight: 400;\n        }\n        .main-subtitle-en { \n             font-size: 1rem;\n             color: var(--text-muted);\n        }\n         @media (min-width: 768px) {\n            .main-subtitle-en {\n                font-size: 1.125rem;\n            }\n        }\n        .highlight-number-xl, .highlight-number-lg {\n            color: var(--meaven-green);\n            line-height: 1;\n            font-weight: 800; \n        }\n        .highlight-number-xl {\n            font-size: 4.5rem;\n        }\n        .highlight-number-lg {\n            font-size: 3rem; \n        }\n        @media (min-width: 768px) {\n            .highlight-number-xl {\n                font-size: 6rem;\n            }\n            .highlight-number-lg {\n                font-size: 3.75rem;\n            }\n        }\n        \n        .content-text, .recap-text p, .recap-conclusion p { \n            color: var(--text-secondary);\n            font-size: 0.95rem; \n            line-height: 1.6;\n        }\n         @media (min-width: 768px) {\n            .content-text, .recap-text p, .recap-conclusion p {\n                font-size: 1rem; \n            }\n        }\n        .recap-text p { \n            margin-bottom: 1rem;\n        }\n        .recap-text p:last-child {\n            margin-bottom: 0;\n        }\n        .recap-text strong { \n            color: var(--meaven-green);\n            font-weight: 600;\n        }\n        .recap-conclusion {\n            font-size: 1.125rem;\n            font-weight: 600;\n            color: var(--text-primary);\n            text-align: center;\n            padding: 1rem; \n            background-color: var(--accent-gray); \n            border-left: 4px solid var(--meaven-green);\n            margin-top: 1.5rem;\n            border-radius: 0.25rem; \n        }\n        .project-list {\n            list-style-type: disc;\n            padding-left: 1.5rem;\n            margin-top: 0.5rem;\n        }\n        .project-list li {\n            margin-bottom: 0.25rem;\n        }\n\n        /* Tech Gradient Effect */\n        .tech-gradient-bg {\n            background: linear-gradient(135deg, rgba(var(--meaven-green-rgb), 0.85) 0%, rgba(var(--meaven-green-rgb), 0.4) 100%);\n            color: white;\n        }\n        .tech-gradient-bg .title-cn-item, \n        .tech-gradient-bg .subtitle-en, \n        .tech-gradient-bg .content-text, \n        .tech-gradient-bg .highlight-number-lg, \n        .tech-gradient-bg .highlight-number-xl,\n        .tech-gradient-bg .download-button { \n            color: white;\n        }\n         .tech-gradient-bg .subtitle-en {\n            color: rgba(255,255,255,0.8);\n        }\n        .tech-gradient-bg .download-button { \n            background-color: rgba(255,255,255,0.2); \n            border: 1px solid rgba(255,255,255,0.5);\n        }\n        .tech-gradient-bg .download-button:hover {\n            background-color: rgba(255,255,255,0.3);\n        }\n\n        .tech-gradient-text {\n            background: linear-gradient(to right, var(--meaven-green) 0%, #00b359 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            font-weight: bold;\n        }\n\n        /* Line Art Icon Style */\n        .line-art-icon {\n            font-size: 2.5rem;\n            color: var(--meaven-green);\n            opacity: 0.7;\n        }\n        .tech-gradient-bg .line-art-icon {\n            color: rgba(255,255,255,0.7);\n        }\n\n        /* Chart Styling */\n        .apexcharts-tooltip {\n            background: #f3f3f3;\n            color: #333;\n            border: 1px solid #ccc;\n        }\n        .apexcharts-legend-text {\n            color: var(--text-secondary) !important; \n            font-family: inherit !important;\n        }\n        .apexcharts-title-text {\n            font-family: inherit !important;\n            font-weight: 600 !important;\n            color: var(--text-primary) !important;\n        }\n        .chart-container {\n            padding-top: 1rem; \n            min-height: 200px; \n        }\n        .map-container img {\n            width: 100%;\n            height: auto;\n            border-radius: 0.5rem; \n            box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n            border: 1px solid var(--border-accent); \n            cursor: pointer; \n        }\n        \n        .download-button {\n            display: inline-block;\n            background-color: var(--meaven-green);\n            color: white;\n            padding: 0.75rem 1.5rem;\n            border-radius: 0.5rem;\n            text-decoration: none;\n            font-weight: 600;\n            transition: background-color 0.3s ease, transform 0.2s ease;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            margin-top: 1rem; \n        }\n        .download-button:hover {\n            background-color: #007a39; \n            transform: translateY(-2px);\n        }\n        .download-button i {\n            margin-right: 0.5rem;\n        }\n\n        /* Modal Styles for Image Zoom */\n        .image-modal {\n            display: none; \n            position: fixed;\n            z-index: 2000; \n            left: 0;\n            top: 0;\n            width: 100%;\n            height: 100%;\n            overflow: auto; \n            background-color: rgba(0,0,0,0.85); \n            justify-content: center; \n            align-items: center; \n        }\n        .image-modal-content {\n            margin: auto;\n            display: block;\n            max-width: 90%;\n            max-height: 90vh;\n            border-radius: 0.5rem;\n        }\n        .image-modal-close {\n            position: absolute;\n            top: 20px;\n            right: 35px;\n            color: #f1f1f1;\n            font-size: 40px;\n            font-weight: bold;\n            transition: 0.3s;\n            cursor: pointer;\n        }\n        .image-modal-close:hover,\n        .image-modal-close:focus {\n            color: #bbb;\n            text-decoration: none;\n        }\n\n        /* Footer */\n        footer {\n            border-top: 1px solid var(--border-accent); \n        }\n        \n        .fm-item { /* Initial state for scroll animations */\n            opacity: 0;\n            transform: translateY(30px) scale(0.98); \n            transition: opacity 0.6s ease-out, transform 0.6s ease-out; /* Added CSS transition */\n        }\n        .fm-item.bento-item { /* Bento items might have a slightly different initial scale */\n             transform: translateY(30px) scale(0.95);\n        }\n\n\n        /* Language specific content display */\n        html[data-lang=\"zh-CN\"] [data-lang-content=\"zh-TW\"],\n        html[data-lang=\"zh-CN\"] [data-lang-content=\"en\"] { display: none !important; }\n\n        html[data-lang=\"zh-TW\"] [data-lang-content=\"zh-CN\"],\n        html[data-lang=\"zh-TW\"] [data-lang-content=\"en\"] { display: none !important; }\n\n        html[data-lang=\"en\"] [data-lang-content=\"zh-CN\"],\n        html[data-lang=\"en\"] [data-lang-content=\"zh-TW\"] { display: none !important; }\n        \n        html[data-lang=\"zh-CN\"] [data-lang-content=\"zh-CN\"] { display: contents; } \n        html[data-lang=\"zh-TW\"] [data-lang-content=\"zh-TW\"] { display: contents; }\n        html[data-lang=\"en\"] [data-lang-content=\"en\"] { display: contents; }\n\n    </style>\n</head>\n<body>\n    <div id=\"lang-switcher-container\"> \n        <div class=\"lang-switcher\">\n            <button id=\"lang-tw\" data-lang-target=\"zh-TW\">繁體</button>\n            <button id=\"lang-cn\" data-lang-target=\"zh-CN\">简体</button>\n            <button id=\"lang-en\" data-lang-target=\"en\">EN</button>\n        </div>\n    </div>\n\n    <!-- Image Zoom Modal -->\n    <div id=\"imageModal\" class=\"image-modal\">\n        <span class=\"image-modal-close\" id=\"imageModalClose\">&times;</span>\n        <img class=\"image-modal-content\" id=\"modalImageContent\">\n    </div>\n\n    <div class=\"container mx-auto px-4 py-8 md:px-6 md:py-12\">\n\n        <header class=\"my-12 md:my-16 text-center fm-item\">\n            <img src=\"https://i.ibb.co/4n69kfym/Meaven-Group-Logo-2025-s-1-3.png\" alt=\"Meaven Group Logo\" class=\"mx-auto mb-6 h-16 md:h-20\" onerror=\"this.src='https://placehold.co/180x60/cccccc/000000?text=Logo+Error'; this.onerror=null;\">\n            <h1 class=\"title-cn-main\">\n                <span data-lang-content=\"zh-CN\">2025迪拜住宅市场报告Q1</span>\n                <span data-lang-content=\"zh-TW\">2025杜拜住宅市場報告Q1</span>\n                <span data-lang-content=\"en\">2025 Dubai Residential Market Report Q1</span>\n            </h1>\n            <p class=\"main-subtitle-en\">\n                 <span data-lang-content=\"zh-CN\">迪拜住宅市场2025年第一季度</span> \n                 <span data-lang-content=\"zh-TW\">Dubai Residential Market Q1 2025</span> \n                 <span data-lang-content=\"en\">Dubai Residential Market Q1 2025</span> \n            </p>\n        </header>\n\n        <!-- Bento Grid Layout -->\n        <div class=\"bento-grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-5\">\n\n            <section class=\"bento-item recap-block col-span-1 md:col-span-2 lg:col-span-4 xl:col-span-5 fm-item bg-white shadow-lg p-6 md:p-8\">\n                <h2 class=\"title-cn-recap\">\n                    <span data-lang-content=\"zh-CN\">Meaven Group 市场前瞻速览</span>\n                    <span data-lang-content=\"zh-TW\">Meaven Group 市場前瞻速覽</span>\n                    <span data-lang-content=\"en\">Meaven Group Market Insights</span>\n                </h2>\n                <div class=\"recap-text\">\n                    <p>\n                        <span data-lang-content=\"zh-CN\">各位关注迪拜市场的朋友们，大家好！Meaven Group为您深入剖析这份2025年第一季度的迪拜住宅市场报告。整体来看，迪拜市场的表现可谓是<strong>开局即决战，起步即冲刺</strong>！数据不会说谎：<strong>GDP预计增长4.7%</strong>，年底人口直指<strong>4,000,000大关</strong>，这背后是源源不绝的全球人才与资金涌入。</span>\n                        <span data-lang-content=\"zh-TW\">各位關注杜拜市場的朋友們，大家好！Meaven Group為您深入剖析這份2025年第一季度的杜拜住宅市場報告。整體來看，杜拜市場的表現可謂是<strong>開局即決戰，起步即衝刺</strong>！數據不會說謊：<strong>GDP預計增長4.7%</strong>，年底人口直指<strong>4,000,000大關</strong>，這背後是源源不絕的全球人才與資金湧入。</span>\n                        <span data-lang-content=\"en\">Hello to all friends following the Dubai market! Meaven Group is here to provide an in-depth analysis of this Q1 2025 Dubai Residential Market report. Overall, Dubai's market performance can be described as <strong>\"starting strong, sprinting from the get-go!\"</strong> The data doesn't lie: <strong>GDP is projected to grow by 4.7%</strong>, with the year-end population heading towards the <strong>4,000,000 mark</strong>. This is backed by a continuous influx of global talent and capital.</span>\n                    </p>\n                    <p>\n                        <span data-lang-content=\"zh-CN\">第一季度交易量同比飙升<strong>23%</strong>，其中期房销售更是占据了<strong>69%</strong>的绝对主力，这充分说明了市场对未来的强烈信心和预期。不仅如此，新盘供应量也达到了惊人的<strong>30,000+套</strong>，同比翻倍，开发商们显然嗅到了市场的热度，积极布局。高端市场同样火热，千万迪拉姆级别的豪宅交易量同比大增<strong>31%</strong>。</span>\n                        <span data-lang-content=\"zh-TW\">第一季度交易量同比飆升<strong>23%</strong>，其中預售屋銷售更是佔據了<strong>69%</strong>的絕對主力，這充分說明了市場對未來的強烈信心和預期。不僅如此，新盤供應量也達到了驚人的<strong>30,000+套</strong>，同比翻倍，開發商們顯然嗅到了市場的熱度，積極佈局。高端市場同樣火熱，千萬迪拉姆級別的豪宅交易量同比大增<strong>31%</strong>。</span>\n                        <span data-lang-content=\"en\">Transaction volumes in the first quarter surged by <strong>23%</strong> year-on-year, with off-plan sales accounting for a dominant <strong>69%</strong>. This clearly indicates strong market confidence and future expectations. Furthermore, new an inventory of over <strong>30,000+ units</strong> were launched, doubling year-on-year, as developers evidently sensed the market's heat and are actively planning. The high-end market is equally vibrant, with transactions for luxury properties valued at AED 10 million and above increasing by a significant <strong>31%</strong> year-on-year.</span>\n                    </p>\n                    <p>\n                        <span data-lang-content=\"zh-CN\">或许您会问，在全球经济逆风下，迪拜为何能独树一帜？答案就在于其稳定的政策、友好的营商环境以及无可比拟的全球枢纽地位。这不仅仅是数据的堆砌，更是迪拜这座城市活力与潜力的真实写照。</span>\n                        <span data-lang-content=\"zh-TW\">或許您會問，在全球經濟逆風下，杜拜為何能獨樹一幟？答案就在於其穩定的政策、友好的營商環境以及無可比擬的全球樞紐地位。這不僅僅是數據的堆砌，更是杜拜這座城市活力與潛力的真實寫照。</span>\n                        <span data-lang-content=\"en\">You might ask, how can Dubai stand out amidst global economic headwinds? The answer lies in its stable policies, friendly business environment, and unparalleled status as a global hub. This isn't just a compilation of data; it's a true reflection of this city's vitality and potential.</span>\n                    </p>\n                </div>\n                <div class=\"recap-conclusion\">\n                    <p>\n                        <span data-lang-content=\"zh-CN\">因此Meaven Group认为，现在的迪拜市场不仅充满机遇，更像是一艘已经启航、驶向星辰大海的巨轮。抓住此刻便是抓住了未来的先机！</span>\n                        <span data-lang-content=\"zh-TW\">因此Meaven Group認為，現在的杜拜市場不僅充滿機遇，更像是一艘已經啟航、駛向星辰大海的巨輪。抓住此刻便是抓住了未來的先機！</span>\n                        <span data-lang-content=\"en\">Therefore, Meaven Group believes that the current Dubai market is not only full of opportunities but also like a giant ship that has set sail towards a sea of stars. Seizing this moment means seizing the future!</span>\n                    </p>\n                </div>\n            </section>\n\n            <!-- Market Overview - Large Item -->\n            <div class=\"bento-item md:col-span-2 lg:col-span-4 xl:col-span-3 fm-item\">\n                <h2 class=\"title-cn-item\">\n                    <span data-lang-content=\"zh-CN\">市场概览</span><span data-lang-content=\"zh-TW\">市場概覽</span><span data-lang-content=\"en\">Market Overview</span>\n                    <span class=\"subtitle-en\">Market Overview</span>\n                </h2>\n                <p class=\"content-text mt-4\">\n                    <span data-lang-content=\"zh-CN\">迪拜住宅房地产市场在2025年开局强劲，这得益于迪拜持续的吸引力。供应方改革、增强的就业保障措施、充满活力的劳动力市场以及一流的基础设施，共同促成了富裕外籍人口的增加。免税生态系统、便捷的抵押贷款、相对较低的房产拥有成本及不断上涨的租金，正推动外籍人士转向房屋所有权。</span>\n                    <span data-lang-content=\"zh-TW\">杜拜住宅房地產市場在2025年開局強勁，這得益於杜拜持續的吸引力。供應方改革、增強的就業保障措施、充滿活力的勞動力市場以及一流的基礎設施，共同促成了富裕外籍人口的增加。免稅生態系統、便捷的抵押貸款、相對較低的房產擁有成本及不斷上漲的租金，正推動外籍人士轉向房屋所有權。</span>\n                    <span data-lang-content=\"en\">Dubai's residential real estate market has entered 2025 from a position of strength, underpinned by Dubai's sustained appeal. Supply-side reforms such as reduced business setup costs, enhanced job-security measures, and creation of a vibrant labour market, alongside best-in-class infrastructure, have all resulted in an increased affluent expat population. The emirate's tax-free ecosystem, the ease of securing mortgages, a comparatively lower cost of property ownership versus other global gateway cities, and rising rents – a growing pinch point for tenants – are all contributing to a clear shift toward homeownership among expatriates.</span>\n                </p>\n                <div class=\"mt-6 grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                    <div class=\"p-4 bg-white rounded-lg shadow-inner\">\n                        <p class=\"highlight-number-lg fm-count-up\">4,000,000</p>\n                        <p class=\"content-text font-semibold mt-1\">\n                            <span data-lang-content=\"zh-CN\">预计年底人口</span><span data-lang-content=\"zh-TW\">預計年底人口</span><span data-lang-content=\"en\">Expected Population by Year End</span>\n                             <span class=\"subtitle-en text-xs\">Expected Population by Year End</span></p>\n                        <p class=\"subtitle-en text-xs opacity-70\">\n                            <span data-lang-content=\"zh-CN\">来源: 迪拜统计中心</span><span data-lang-content=\"zh-TW\">來源: 杜拜統計中心</span><span data-lang-content=\"en\">Source: Dubai Statistics Centre</span>\n                        </p>\n                    </div>\n                    <div class=\"p-4 bg-white rounded-lg shadow-inner\">\n                        <p class=\"highlight-number-lg fm-count-up\">4.7%</p>\n                        <p class=\"content-text font-semibold mt-1\">\n                            <span data-lang-content=\"zh-CN\">GDP增长预测</span><span data-lang-content=\"zh-TW\">GDP增長預測</span><span data-lang-content=\"en\">GDP Growth Forecast</span>\n                             <span class=\"subtitle-en text-xs\">GDP Growth Forecast</span></p>\n                        <p class=\"subtitle-en text-xs opacity-70\">\n                            <span data-lang-content=\"zh-CN\">来源: 牛津经济研究院</span><span data-lang-content=\"zh-TW\">來源: 牛津經濟研究院</span><span data-lang-content=\"en\">Source: Oxford Economics</span>\n                        </p>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Transaction Volumes - Highlight Number -->\n            <div class=\"bento-item flex flex-col items-center justify-center text-center tech-gradient-bg lg:col-span-2 xl:col-span-2 fm-item\">\n                 <i class=\"fas fa-chart-line line-art-icon text-4xl mb-3\"></i>\n                <p class=\"highlight-number-xl fm-count-up\">23%</p>\n                <h2 class=\"title-cn-item mt-2 !text-white\">\n                    <span data-lang-content=\"zh-CN\">交易量同比增长 (Q1)</span><span data-lang-content=\"zh-TW\">交易量同比增長 (Q1)</span><span data-lang-content=\"en\">Transaction Volumes YoY (Q1)</span>\n                </h2>\n                <p class=\"subtitle-en !text-gray-200\">Transaction Volumes YoY Increase</p>\n                <p class=\"content-text mt-3 !text-gray-100 text-sm\">\n                    <span data-lang-content=\"zh-CN\">公寓占总交易76%，期房销售占69%。</span><span data-lang-content=\"zh-TW\">公寓佔總交易76%，預售屋銷售佔69%。</span><span data-lang-content=\"en\">Apartments 76% of transactions, Off-plan 69% of sales.</span>\n                </p>\n            </div>\n            \n            <!-- Dubai Residential Transaction Trend Chart -->\n            <div class=\"bento-item md:col-span-2 lg:col-span-2 fm-item\">\n                <h3 class=\"title-cn-item text-xl\">\n                    <span data-lang-content=\"zh-CN\">住宅交易趋势</span><span data-lang-content=\"zh-TW\">住宅交易趨勢</span><span data-lang-content=\"en\">Residential Transaction Trend</span>\n                    <span class=\"subtitle-en\">Residential Transaction Trend</span>\n                </h3>\n                <div id=\"transactionTrendChart\" class=\"chart-container\"></div>\n            </div>\n\n            <!-- Off-plan vs Ready Q1 2025 Pie Charts -->\n            <div class=\"bento-item md:col-span-2 lg:col-span-3 fm-item\"> \n                <h3 class=\"title-cn-item text-xl\">\n                    <span data-lang-content=\"zh-CN\">期房 vs 现房 (Q1 2025)</span><span data-lang-content=\"zh-TW\">預售屋 vs 成屋 (Q1 2025)</span><span data-lang-content=\"en\">Off-Plan vs Ready (Q1 2025)</span>\n                     <span class=\"subtitle-en\">Off-Plan vs Ready</span></h3>\n                <div class=\"mt-3 grid grid-cols-1 sm:grid-cols-3 gap-4\">\n                    <div>\n                        <div id=\"pieOverallMarket\" class=\"chart-container\"></div>\n                        <p class=\"text-center content-text text-sm font-semibold mt-1\">\n                            <span data-lang-content=\"zh-CN\">总体市场</span><span data-lang-content=\"zh-TW\">總體市場</span><span data-lang-content=\"en\">Overall Market</span>\n                        </p>\n                    </div>\n                    <div>\n                        <div id=\"pieApartmentsMarket\" class=\"chart-container\"></div>\n                        <p class=\"text-center content-text text-sm font-semibold mt-1\">\n                            <span data-lang-content=\"zh-CN\">公寓</span><span data-lang-content=\"zh-TW\">公寓</span><span data-lang-content=\"en\">Apartments</span>\n                        </p>\n                    </div>\n                    <div>\n                        <div id=\"pieVillasMarket\" class=\"chart-container\"></div>\n                        <p class=\"text-center content-text text-sm font-semibold mt-1\">\n                            <span data-lang-content=\"zh-CN\">别墅</span><span data-lang-content=\"zh-TW\">別墅</span><span data-lang-content=\"en\">Villas</span>\n                        </p>\n                    </div>\n                </div>\n                <p class=\"subtitle-en text-xs mt-2 text-center opacity-70\">\n                    <span data-lang-content=\"zh-CN\">数据来源: REIDIN, SAVILLS RESEARCH</span><span data-lang-content=\"zh-TW\">數據來源: REIDIN, SAVILLS RESEARCH</span><span data-lang-content=\"en\">Source: REIDIN, SAVILLS RESEARCH</span>\n                </p>\n            </div>\n            \n            <!-- Key Locations with Map -->\n            <div class=\"bento-item md:col-span-2 lg:col-span-3 fm-item\">\n                <h2 class=\"title-cn-item\">\n                    <span data-lang-content=\"zh-CN\">重点区域</span><span data-lang-content=\"zh-TW\">重點區域</span><span data-lang-content=\"en\">Key Locations</span>\n                    <span class=\"subtitle-en\">Key Locations & Zones</span></h2>\n                <p class=\"content-text mt-3\">\n                    <span data-lang-content=\"zh-CN\"><span class=\"font-semibold tech-gradient-text\">第6区 (Zone 6)</span> 在第一季度活动最为活跃，占总交易量的<span class=\"font-bold\">55%</span>，贡献了<span class=\"font-bold\">56%</span>的新推出住宅单位。该区覆盖JVC、Dubailand等沿Al Khail走廊的微型市场。核心区土地有限推动开发向此类外围区域发展。</span>\n                    <span data-lang-content=\"zh-TW\"><span class=\"font-semibold tech-gradient-text\">第6區 (Zone 6)</span> 在第一季度活動最為活躍，佔總交易量的<span class=\"font-bold\">55%</span>，貢獻了<span class=\"font-bold\">56%</span>的新推出住宅單位。該區覆蓋JVC、Dubailand等沿Al Khail走廊的微型市場。核心區土地有限推動開發向此類外圍區域發展。</span>\n                    <span data-lang-content=\"en\"><span class=\"font-semibold tech-gradient-text\">Zone 6</span> recorded the highest level of activity during Q1, accounting for <span class=\"font-bold\">55%</span> of total transaction volumes and contributing <span class=\"font-bold\">56%</span> of all newly launched residential units. The zone covers prominent micro-markets located along the Al Khail corridor, including JVC, Dubailand. Limited land availability in core areas has driven development towards peripheral areas like Zone 6.</span>\n                </p>\n                <p class=\"content-text mt-2 text-sm\">\n                    <span data-lang-content=\"zh-CN\"><span class=\"font-semibold\">第6区主要新项目:</span> The Wilds (Aldar), Sobha Solis, Samana Resorts, Ellison & Baltimore (Nshama).</span>\n                    <span data-lang-content=\"zh-TW\"><span class=\"font-semibold\">第6區主要新項目:</span> The Wilds (Aldar), Sobha Solis, Samana Resorts, Ellison & Baltimore (Nshama).</span>\n                    <span data-lang-content=\"en\"><span class=\"font-semibold\">Key project launches in Zone 6:</span> The Wilds (Aldar), Sobha Solis, Samana Resorts, Ellison & Baltimore (Nshama).</span>\n                </p>\n                 <div class=\"mt-4 map-container\">\n                    <img id=\"dubaiMapImage\" src=\"https://i.ibb.co/RkTXnQRJ/maincode-01.png\" alt=\"迪拜住宅区域分布图\" onerror=\"this.onerror=null; this.src='https://placehold.co/800x600/cccccc/000000?text=地圖圖片無法加載'; console.error('迪拜區域圖 (ibb.co) 加載失敗，請檢查URL。');\">\n                    <p class=\"subtitle-en text-xs text-center mt-2\">\n                        <span data-lang-content=\"zh-CN\">迪拜住宅区域分布图 (示意)。点击图片放大。</span><span data-lang-content=\"zh-TW\">杜拜住宅區域分佈圖 (示意)。點擊圖片放大。</span><span data-lang-content=\"en\">Dubai Residential Zones Map (Indicative). Click image to zoom.</span>\n                    </p>\n                </div>\n            </div>\n\n            <!-- Ready Market -->\n            <div class=\"bento-item lg:col-span-2 fm-item\">\n                <h2 class=\"title-cn-item\">\n                    <span data-lang-content=\"zh-CN\">现房市场</span><span data-lang-content=\"zh-TW\">成屋市場</span><span data-lang-content=\"en\">Ready Market</span>\n                 <span class=\"subtitle-en\">Ready Market</span></h2>\n                <div class=\"my-3 text-center\">\n                    <p class=\"highlight-number-lg fm-count-up\">13K+</p>\n                    <p class=\"content-text font-semibold mt-1\">\n                        <span data-lang-content=\"zh-CN\">Q1 2025 现房交易</span><span data-lang-content=\"zh-TW\">Q1 2025 成屋交易</span><span data-lang-content=\"en\">Q1 2025 Ready Transactions</span>\n                         <span class=\"subtitle-en text-xs\">Ready Market Transactions</span></p>\n                </div>\n                <p class=\"content-text mt-2\">\n                    <span data-lang-content=\"zh-CN\">现房市场持续稳定，公寓占交易的<span class=\"font-bold\">81%</span>。价值500万迪拉姆及以上的交易占总活动的<span class=\"font-bold\">8%</span>，保持稳定。</span>\n                    <span data-lang-content=\"zh-TW\">成屋市場持續穩定，公寓佔交易的<span class=\"font-bold\">81%</span>。價值500萬迪拉姆及以上的交易佔總活動的<span class=\"font-bold\">8%</span>，保持穩定。</span>\n                    <span data-lang-content=\"en\">The ready market continued to demonstrate stable activity, with apartment sales accounting for <span class=\"font-bold\">81%</span> of transactions. Transactions valued at AED 5 million and above accounted for <span class=\"font-bold\">8%</span> of total activity, remaining stable.</span>\n                </p>\n            </div>\n            \n            <!-- Villa vs Apartments Overall -->\n            <div class=\"bento-item md:col-span-1 lg:col-span-2 fm-item\">\n                <h2 class=\"title-cn-item\">\n                    <span data-lang-content=\"zh-CN\">别墅 vs 公寓 (总体)</span><span data-lang-content=\"zh-TW\">別墅 vs 公寓 (總體)</span><span data-lang-content=\"en\">Villas vs Apartments (Overall)</span>\n                 <span class=\"subtitle-en\">Villa vs Apartments (Overall)</span></h2>\n                <p class=\"content-text mt-3\">\n                    <span data-lang-content=\"zh-CN\">尽管公寓以<span class=\"font-bold\">76%</span>份额主导市场，别墅和联排别墅部分显著复苏，交易占比从18%升至<span class=\"font-bold\">24%</span> (Q1 2025)。</span>\n                    <span data-lang-content=\"zh-TW\">儘管公寓以<span class=\"font-bold\">76%</span>份額主導市場，別墅和聯排別墅部分顯著復甦，交易佔比從18%升至<span class=\"font-bold\">24%</span> (Q1 2025)。</span>\n                    <span data-lang-content=\"en\">Whilst apartments dominated (<strong>76%</strong> share), the villa and townhouse segment witnessed a notable resurgence, with transactions rising to <span class=\"font-bold\">24%</span> in Q1 2025 from 18% in the previous quarter.</span>\n                </p>\n                <div class=\"mt-4 grid grid-cols-2 gap-3 text-center\">\n                    <div class=\"p-3 bg-white rounded shadow-inner\">\n                        <i class=\"fas fa-building highlight-green text-3xl mb-2\"></i>\n                        <p class=\"highlight-number-lg fm-count-up\">76%</p>\n                        <p class=\"content-text font-semibold text-sm\">\n                            <span data-lang-content=\"zh-CN\">公寓</span><span data-lang-content=\"zh-TW\">公寓</span><span data-lang-content=\"en\">Apartments</span>\n                        </p>\n                    </div>\n                    <div class=\"p-3 bg-white rounded shadow-inner\">\n                        <i class=\"fas fa-home highlight-green text-3xl mb-2\"></i>\n                        <p class=\"highlight-number-lg fm-count-up\">24%</p>\n                        <p class=\"content-text font-semibold text-sm\">\n                            <span data-lang-content=\"zh-CN\">别墅/联排</span><span data-lang-content=\"zh-TW\">別墅/聯排</span><span data-lang-content=\"en\">Villas/Townhouses</span>\n                        </p>\n                    </div>\n                </div>\n            </div>\n\n            <!-- New Launches -->\n            <div class=\"bento-item md:col-span-1 lg:col-span-2 tech-gradient-bg fm-item\">\n                <h2 class=\"title-cn-item !text-white\">\n                    <span data-lang-content=\"zh-CN\">新盘发布</span><span data-lang-content=\"zh-TW\">新盤發布</span><span data-lang-content=\"en\">New Launches</span>\n                    <span class=\"subtitle-en !text-gray-200\">New Launches</span></h2>\n                <div class=\"my-3 text-center\">\n                    <p class=\"highlight-number-lg !text-white fm-count-up\">30,000+</p>\n                    <p class=\"content-text font-semibold mt-1 !text-gray-100\">\n                        <span data-lang-content=\"zh-CN\">Q1 2025 新推单位</span><span data-lang-content=\"zh-TW\">Q1 2025 新推單位</span><span data-lang-content=\"en\">Q1 2025 Units Launched</span>\n                         <span class=\"subtitle-en text-xs !text-gray-300\">Units Launched (YoY x2)</span></p>\n                </div>\n                <p class=\"content-text mt-2 !text-gray-100\">\n                    <span data-lang-content=\"zh-CN\">公寓占新推单位的<span class=\"font-bold\">79%</span>。开发商亦推出较小户型别墅以平衡需求与可负担性。</span>\n                    <span data-lang-content=\"zh-TW\">公寓佔新推單位的<span class=\"font-bold\">79%</span>。開發商亦推出較小戶型別墅以平衡需求與可負擔性。</span>\n                    <span data-lang-content=\"en\">Apartments accounted for <span class=\"font-bold\">79%</span> of new launches. Developers introduced smaller villa unit sizes to balance demand and affordability.</span>\n                </p>\n                <p class=\"content-text mt-2 text-sm !text-gray-200\">\n                    <span data-lang-content=\"zh-CN\"><span class=\"font-semibold\">主要别墅项目:</span> Damac Islands, Greenspoint, The Wilds.</span>\n                    <span data-lang-content=\"zh-TW\"><span class=\"font-semibold\">主要別墅項目:</span> Damac Islands, Greenspoint, The Wilds.</span>\n                    <span data-lang-content=\"en\"><span class=\"font-semibold\">Key villa launches:</span> Damac Islands, Greenspoint, The Wilds.</span>\n                </p>\n            </div>\n\n            <!-- Completions -->\n            <div class=\"bento-item md:col-span-2 lg:col-span-3 fm-item\">\n                <h2 class=\"title-cn-item\">\n                    <span data-lang-content=\"zh-CN\">项目竣工</span><span data-lang-content=\"zh-TW\">項目竣工</span><span data-lang-content=\"en\">Completions</span>\n                 <span class=\"subtitle-en\">Completions</span></h2>\n                <div class=\"mt-3 grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                    <div class=\"p-3 bg-white rounded shadow-inner text-center\">\n                        <p class=\"highlight-number-lg text-3xl fm-count-up\">~8,000</p>\n                        <p class=\"content-text font-semibold mt-1\">\n                            <span data-lang-content=\"zh-CN\">Q1 2025 竣工单位</span><span data-lang-content=\"zh-TW\">Q1 2025 竣工單位</span><span data-lang-content=\"en\">Q1 2025 Units Added</span>\n                         <span class=\"subtitle-en text-xs\">Units Added</span></p>\n                    </div>\n                    <div class=\"p-3 bg-white rounded shadow-inner text-center\">\n                        <p class=\"highlight-number-lg text-3xl fm-count-up\">~32,000</p>\n                        <p class=\"content-text font-semibold mt-1\">\n                            <span data-lang-content=\"zh-CN\">2025年预计竣工</span><span data-lang-content=\"zh-TW\">2025年預計竣工</span><span data-lang-content=\"en\">Est. Completions in 2025</span>\n                         <span class=\"subtitle-en text-xs\">Units Slated for Remainder of 2025</span></p>\n                    </div>\n                </div>\n                 <div class=\"content-text mt-3 text-sm\">\n                    <p class=\"font-semibold mb-1\">\n                        <span data-lang-content=\"zh-CN\">主要竣工项目:</span>\n                        <span data-lang-content=\"zh-TW\">主要竣工項目:</span>\n                        <span data-lang-content=\"en\">Key completions:</span>\n                    </p>\n                    <ul class=\"project-list\">\n                        <li data-lang-content=\"zh-CN\">Trillionaire Residences, Gardenia, Tulip, Amber by Binghatti</li>\n                        <li data-lang-content=\"zh-TW\">Trillionaire Residences, Gardenia, Tulip, Amber by Binghatti</li>\n                        <li data-lang-content=\"en\">Trillionaire Residences, Gardenia, Tulip, Amber by Binghatti</li>\n\n                        <li data-lang-content=\"zh-CN\">Creek Crescent, Island Park, Majestic Vistas by Emaar</li>\n                        <li data-lang-content=\"zh-TW\">Creek Crescent, Island Park, Majestic Vistas by Emaar</li>\n                        <li data-lang-content=\"en\">Creek Crescent, Island Park, Majestic Vistas by Emaar</li>\n                        \n                        <li data-lang-content=\"zh-CN\">Golf Gate 1 by Damac</li>\n                        <li data-lang-content=\"zh-TW\">Golf Gate 1 by Damac</li>\n                        <li data-lang-content=\"en\">Golf Gate 1 by Damac</li>\n                    </ul>\n                 </div>\n                <div class=\"content-text mt-3 text-sm\">\n                     <p class=\"font-semibold mb-1\">\n                        <span data-lang-content=\"zh-CN\">未来关注:</span>\n                        <span data-lang-content=\"zh-TW\">未來關注:</span>\n                        <span data-lang-content=\"en\">Upcoming:</span>\n                    </p>\n                    <ul class=\"project-list\">\n                        <li data-lang-content=\"zh-CN\">Peninsula 2&3 by Select Group, Alaya and Aura by Majid Al Futtaim, Cavalli Casa by Damac.</li>\n                        <li data-lang-content=\"zh-TW\">Peninsula 2&3 by Select Group, Alaya and Aura by Majid Al Futtaim, Cavalli Casa by Damac.</li>\n                        <li data-lang-content=\"en\">Peninsula 2&3 by Select Group, Alaya and Aura by Majid Al Futtaim, Cavalli Casa by Damac.</li>\n                    </ul>\n                     <p class=\"mt-1\">\n                        <span data-lang-content=\"zh-CN\">供应管道至2028年保持强劲。</span>\n                        <span data-lang-content=\"zh-TW\">供應管道至2028年保持強勁。</span>\n                        <span data-lang-content=\"en\">Supply pipeline strong through 2028.</span>\n                    </p>\n                </div>\n            </div>\n            \n            <!-- Prime Residential Market -->\n            <div class=\"bento-item lg:col-span-2 fm-item\">\n                 <h2 class=\"title-cn-item\">\n                    <span data-lang-content=\"zh-CN\">高端住宅市场</span><span data-lang-content=\"zh-TW\">高端住宅市場</span><span data-lang-content=\"en\">Prime Residential Market</span>\n                 <span class=\"subtitle-en\">Prime Residential Market</span></h2>\n            <div class=\"my-3 text-center\">\n                <p class=\"highlight-number-lg fm-count-up\">1.3K+</p>\n                <p class=\"content-text font-semibold mt-1\">\n                    <span data-lang-content=\"zh-CN\">Q1 高端单位成交</span><span data-lang-content=\"zh-TW\">Q1 高端單位成交</span><span data-lang-content=\"en\">Q1 Prime Units Transacted</span>\n                     <span class=\"subtitle-en text-xs\">Units >AED 10M (YoY +31%)</span></p>\n            </div>\n            <p class=\"content-text mt-2\">\n                <span data-lang-content=\"zh-CN\">受惠于高净值人士(HNWIs)增长及D33经济议程。别墅主导高端交易 (<span class=\"font-bold\">73%</span>份额, 同比增<span class=\"font-bold\">52%</span>)。</span>\n                <span data-lang-content=\"zh-TW\">受惠於高淨值人士(HNWIs)增長及D33經濟議程。別墅主導高端交易 (<span class=\"font-bold\">73%</span>份額, 同比增<span class=\"font-bold\">52%</span>)。</span>\n                <span data-lang-content=\"en\">Driven by affluent expatriates and D33 agenda. Villas dominated prime transactions (<strong>73%</strong> share, <span class=\"font-bold\">+52%</span> YoY).</span>\n            </p>\n             <p class=\"content-text mt-1 text-sm\">\n                <span data-lang-content=\"zh-CN\"><span class=\"font-semibold\">顶级别墅热点:</span> Jumeirah Bay Island, Emirates Hills, Palm Jumeirah.</span>\n                <span data-lang-content=\"zh-TW\"><span class=\"font-semibold\">頂級別墅熱點:</span> Jumeirah Bay Island, Emirates Hills, Palm Jumeirah.</span>\n                <span data-lang-content=\"en\"><span class=\"font-semibold\">Top villa locations:</span> Jumeirah Bay Island, Emirates Hills, Palm Jumeirah.</span>\n            </p>\n        </div>\n\n        <!-- Capital Values Growth -->\n        <div class=\"bento-item md:col-span-2 lg:col-span-5 fm-item\"> \n            <h2 class=\"title-cn-item\">\n                <span data-lang-content=\"zh-CN\">资本价值增长 (同比)</span><span data-lang-content=\"zh-TW\">資本價值增長 (同比)</span><span data-lang-content=\"en\">Capital Values Growth (YoY)</span>\n                 <span class=\"subtitle-en\">Capital Values Growth (YoY)</span></h2>\n            <div class=\"mt-3 grid grid-cols-1 sm:grid-cols-2 gap-4 mb-4\">\n                <div class=\"p-3 bg-white rounded shadow-inner\">\n                    <p class=\"content-text font-semibold flex items-center\"><i class=\"fas fa-building mr-2 highlight-green text-xl\"></i>\n                        <span data-lang-content=\"zh-CN\">公寓:</span><span data-lang-content=\"zh-TW\">公寓:</span><span data-lang-content=\"en\">Apartments:</span>\n                         <span class=\"tech-gradient-text ml-1\">\n                            <span data-lang-content=\"zh-CN\">基本稳定 <small class=\"text-gray-500 font-normal\">(多数子市场增长低于10%)</small></span>\n                            <span data-lang-content=\"zh-TW\">基本穩定 <small class=\"text-gray-500 font-normal\">(多數子市場增長低於10%)</small></span>\n                            <span data-lang-content=\"en\">Broadly stable <small class=\"text-gray-500 font-normal\">(growth under 10% in most submarkets)</small></span>\n                        </span></p>\n                    <p class=\"subtitle-en text-xs\">Apartments: Broadly stable</p>\n                </div>\n                <div class=\"p-3 bg-white rounded shadow-inner\">\n                    <p class=\"content-text font-semibold flex items-center\"><i class=\"fas fa-home mr-2 highlight-green text-xl\"></i>\n                        <span data-lang-content=\"zh-CN\">别墅:</span><span data-lang-content=\"zh-TW\">別墅:</span><span data-lang-content=\"en\">Villas:</span>\n                         <span class=\"tech-gradient-text ml-1\">\n                            <span data-lang-content=\"zh-CN\">微增 2%</span><span data-lang-content=\"zh-TW\">微增 2%</span><span data-lang-content=\"en\">Marginal 2% increase</span>\n                        </span></p>\n                    <p class=\"subtitle-en text-xs\">Villas: Marginal 2% increase</p>\n                </div>\n            </div>\n            <p class=\"content-text\">\n                <span data-lang-content=\"zh-CN\">部分别墅社区 (Arabian Ranches, Palm Jumeirah等) 资本增值达<span class=\"font-bold\">10-15%</span>。多数公寓增长低于10%。</span>\n                <span data-lang-content=\"zh-TW\">部分別墅社區 (Arabian Ranches, Palm Jumeirah等) 資本增值達<span class=\"font-bold\">10-15%</span>。多數公寓增長低於10%。</span>\n                <span data-lang-content=\"en\">Select villa communities (Arabian Ranches, Palm Jumeirah, etc.) saw stronger appreciation of <span class=\"font-bold\">10-15%</span>. Most apartment submarkets remained under 10% growth.</span>\n            </p>\n            <div class=\"mt-3 grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                    <h4 class=\"font-semibold text-center content-text text-md mb-1\">\n                        <span data-lang-content=\"zh-CN\">公寓资本价值趋势</span><span data-lang-content=\"zh-TW\">公寓資本價值趨勢</span><span data-lang-content=\"en\">Apartment Capital Value Trend</span>\n                    </h4>\n                    <div id=\"capitalTrendApartmentsChart\" class=\"chart-container bg-white p-2 rounded-md shadow-inner\"></div>\n                </div>\n                <div>\n                    <h4 class=\"font-semibold text-center content-text text-md mb-1\">\n                        <span data-lang-content=\"zh-CN\">别墅资本价值趋势</span><span data-lang-content=\"zh-TW\">別墅資本價值趨勢</span><span data-lang-content=\"en\">Villa Capital Value Trend</span>\n                    </h4>\n                    <div id=\"capitalTrendVillasChart\" class=\"chart-container bg-white p-2 rounded-md shadow-inner\"></div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Outlook and Download Section -->\n        <div class=\"bento-item md:col-span-2 lg:col-span-5 tech-gradient-bg fm-item text-center\">\n            <h2 class=\"title-cn-item !text-white\">\n                <span data-lang-content=\"zh-CN\">市场展望与完整报告</span>\n                <span data-lang-content=\"zh-TW\">市場展望與完整報告</span>\n                <span data-lang-content=\"en\">Market Outlook & Full Report</span>\n                 <span class=\"subtitle-en !text-gray-200\">Outlook & Download</span></h2>\n            <p class=\"content-text mt-4 mb-6 !text-gray-100\">\n                <span data-lang-content=\"zh-CN\">迪拜房地产市场持续受益于全球财富迁移趋势。Savills动态财富指数将迪拜列为全球顶级财富吸引城市。尽管全球宏观经济存在逆风，但迪拜的政治稳定、竞争性监管及友好商业生态系统预计将支持持续的人口和投资流入，前景乐观。深入了解迪拜住宅市场的详细数据与分析，请下载Savills官方报告：</span>\n                <span data-lang-content=\"zh-TW\">杜拜房地產市場持續受益於全球財富遷移趨勢。Savills動態財富指數將杜拜列為全球頂級財富吸引城市。儘管全球宏觀經濟存在逆風，但杜拜的政治穩定、競爭性監管及友好商業生態系統預計將支持持續的人口和投資流入，前景樂觀。深入了解杜拜住宅市場的詳細數據與分析，請下載Savills官方報告：</span>\n                <span data-lang-content=\"en\">Dubai's real estate market continues to benefit from global wealth migration. Savills Dynamic Wealth Index placed Dubai as the top global city for attracting wealth. Despite global headwinds, Dubai's political stability, competitive regulatory landscape, and business-friendly ecosystem are expected to support ongoing population and investment inflows. The outlook remains optimistic. For detailed data and analysis, download the official Savills report:</span>\n            </p>\n            <a href=\"https://pdf.euro.savills.co.uk/uae/dubai/dubai-residential-mim---q12025.pdf\" \n               target=\"_blank\" \n               rel=\"noopener noreferrer\"\n               class=\"download-button\">\n               <i class=\"fas fa-download\"></i> \n               <span data-lang-content=\"zh-CN\">下载 Savills - Dubai Residential Report - Q1 2025</span>\n               <span data-lang-content=\"zh-TW\">下載 Savills - Dubai Residential Report - Q1 2025</span>\n               <span data-lang-content=\"en\">Download Savills - Dubai Residential Report - Q1 2025</span>\n            </a>\n        </div>\n\n\n        </div> <!-- End Bento Grid -->\n\n        <!-- Footer -->\n        <footer class=\"mt-12 md:mt-16 py-8 text-center fm-item\">\n            <p class=\"text-xl font-semibold highlight-green\">Meaven Group</p>\n            <p class=\"text-sm text-gray-500 mt-1\">\n                &copy; <span id=\"currentYear\"></span> Meaven Group. All rights reserved. <br class=\"sm:hidden\">\n                <a href=\"https://www.meaven.com\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"hover:text-meaven-green transition-colors\">www.meaven.com</a>\n            </p>\n            <p class=\"text-xs text-gray-400 mt-2\">\n                <span data-lang-content=\"zh-CN\">本报告内容基于第一太平戴维斯 (Savills) 发布的《迪拜住宅市场2025年第一季度》报告进行编译和设计。</span>\n                <span data-lang-content=\"zh-TW\">本報告內容基於第一太平戴維斯 (Savills) 發布的《杜拜住宅市場2025年第一季度》報告進行編譯和設計。</span>\n                <span data-lang-content=\"en\">This report is compiled and designed based on the \"Dubai Residential Market Q1 2025\" report by Savills.</span>\n            </p>\n        </footer>\n\n    </div> <!-- End Container -->\n\n    <script>\n        document.getElementById('currentYear').textContent = new Date().getFullYear();\n\n        // Language Switcher Logic\n        const langSwitcher = {\n            currentLang: 'zh-TW', \n            init: function() {\n                const htmlEl = document.documentElement;\n                this.currentLang = htmlEl.getAttribute('data-lang') || 'zh-TW'; \n                htmlEl.setAttribute('data-lang', this.currentLang); \n\n                const langTwButton = document.getElementById('lang-tw');\n                const langCnButton = document.getElementById('lang-cn');\n                const langEnButton = document.getElementById('lang-en');\n\n\n                if (langTwButton) langTwButton.addEventListener('click', () => this.switchTo('zh-TW'));\n                if (langCnButton) langCnButton.addEventListener('click', () => this.switchTo('zh-CN'));\n                if (langEnButton) langEnButton.addEventListener('click', () => this.switchTo('en'));\n                \n                this.updateButtonStates();\n                // applyLangDisplay is implicitly handled by CSS attribute selectors now\n            },\n            switchTo: function(lang) {\n                if (this.currentLang === lang) return;\n                this.currentLang = lang;\n                document.documentElement.setAttribute('data-lang', lang);\n                this.updateButtonStates();\n                // CSS will handle displaying the correct spans\n                \n                const event = new CustomEvent('langChanged', { detail: { lang: lang } });\n                const container = document.getElementById('lang-switcher-container');\n                if (container) {\n                    container.dispatchEvent(event);\n                } else {\n                    console.error(\"Language switcher container not found for dispatching event.\");\n                }\n            },\n            updateButtonStates: function() {\n                const langTwButton = document.getElementById('lang-tw');\n                const langCnButton = document.getElementById('lang-cn');\n                const langEnButton = document.getElementById('lang-en');\n\n                if (langTwButton) langTwButton.classList.toggle('active', this.currentLang === 'zh-TW');\n                if (langCnButton) langCnButton.classList.toggle('active', this.currentLang === 'zh-CN');\n                if (langEnButton) langEnButton.classList.toggle('active', this.currentLang === 'en');\n            }\n        };\n\n\n        // Framer Motion Integration & Count-up Animation\n        function animateCountUp(el) {\n            const text = el.dataset.originalValue || el.textContent; // Use data-attribute if available, else current text\n            el.dataset.originalValue = text; // Store original text if not already stored\n\n            let targetText = text.replace(/,/g, ''); \n            \n            const isPercentage = targetText.includes('%');\n            const isPlus = targetText.includes('+');\n            const isK = targetText.toUpperCase().includes('K');\n            const isM = targetText.toUpperCase().includes('M');\n            const isApprox = targetText.startsWith('~');\n\n            const target = parseFloat(targetText.replace(/[^0-9.]/g, ''));\n            \n            if (isNaN(target)) {\n                console.warn(\"animateCountUp: Target is NaN for element\", el, \"with text\", text);\n                el.textContent = text; \n                return;\n            }\n\n            let actualTarget = target;\n            if (isK) actualTarget *= 1000;\n            if (isM) actualTarget *= 1000000;\n\n            let current = 0;\n            const duration = 1500; \n            let increment = actualTarget / (duration / 16.66); \n            if (actualTarget !== 0 && Math.abs(increment) < 1 && Math.abs(actualTarget) >=1 ) increment = actualTarget > 0 ? 1 : -1;\n            if (actualTarget === 0) increment = 0; \n\n            const startTime = performance.now();\n\n            function updateNumber(timestamp) {\n                const elapsedTime = timestamp - startTime;\n                const progress = Math.min(elapsedTime / duration, 1);\n                current = progress * actualTarget;\n\n                let displayCurrent;\n                \n                if (isM) {\n                    displayCurrent = (current / 1000000).toLocaleString('en-US', { maximumFractionDigits: 1 }) + 'M';\n                } else if (isK) {\n                    displayCurrent = (current / 1000).toLocaleString('en-US', { maximumFractionDigits: 1 }) + 'K';\n                } else if (Number.isInteger(actualTarget) && !isPercentage) { \n                     displayCurrent = Math.round(current).toLocaleString('en-US');\n                } else { \n                     displayCurrent = parseFloat(current.toFixed(1)).toLocaleString('en-US', {minimumFractionDigits: (target % 1 !== 0) ? 1 : 0, maximumFractionDigits: 1});\n                }\n                \n                if (isPercentage) displayCurrent += '%';\n                if (isPlus && !isApprox) displayCurrent += '+';\n                if (isApprox) displayCurrent = '~' + displayCurrent;\n\n                el.textContent = displayCurrent;\n\n                if (progress < 1) {\n                    requestAnimationFrame(updateNumber);\n                } else {\n                    // Ensure final display is exactly the original formatted value\n                    let finalDisplayNum = target;\n                    if (isM) finalDisplayNum = target; // Keep as M for formatting\n                    else if (isK) finalDisplayNum = target; // Keep as K for formatting\n\n                    let finalFormatted = finalDisplayNum.toLocaleString('en-US', {\n                        minimumFractionDigits: (target % 1 !== 0 && !isM && !isK) ? 1 : 0, // Show decimal for 4.7%\n                        maximumFractionDigits: 1\n                    });\n                    if (isM) finalFormatted = target.toLocaleString('en-US', {maximumFractionDigits:1}) + 'M';\n                    else if (isK) finalFormatted = target.toLocaleString('en-US', {maximumFractionDigits:1}) + 'K';\n\n\n                    if (isPercentage) finalFormatted += '%';\n                    if (isPlus && !isApprox) finalFormatted += '+';\n                    if (isApprox) finalFormatted = '~' + finalFormatted;\n                    el.textContent = finalFormatted;\n                }\n            }\n            requestAnimationFrame(updateNumber);\n        }\n\n        if (typeof motion !== 'undefined') {\n            const items = document.querySelectorAll('.fm-item');\n            items.forEach((item, index) => {\n                const observer = new IntersectionObserver(entries => {\n                    entries.forEach(entry => {\n                        if (entry.isIntersecting) {\n                            entry.target.style.opacity = 1;\n                            entry.target.style.transform = 'translateY(0px) scale(1)'; \n                            \n                            entry.target.querySelectorAll('.fm-count-up').forEach(numEl => {\n                                animateCountUp(numEl);\n                            });\n                            observer.unobserve(entry.target);\n                        }\n                    });\n                }, { threshold: 0.1 }); \n                observer.observe(item);\n            });\n        } else {\n            console.warn('Framer Motion library not found. Animations will be basic.');\n            document.querySelectorAll('.fm-item').forEach(item => {\n                item.style.opacity = 1;\n                item.style.transform = 'translateY(0px) scale(1)';\n                item.querySelectorAll('.fm-count-up').forEach(numEl => { \n                     const text = numEl.textContent; \n                     numEl.textContent = text; \n                });\n            });\n        }\n\n        // Image Modal Logic\n        const modal = document.getElementById('imageModal');\n        const modalImg = document.getElementById('modalImageContent');\n        const mapImage = document.getElementById('dubaiMapImage');\n        const closeModal = document.getElementById('imageModalClose');\n\n        if (mapImage && modal && modalImg && closeModal) {\n            mapImage.onclick = function() {\n                modal.style.display = \"flex\"; \n                modalImg.src = this.src;\n            }\n            closeModal.onclick = function() {\n                modal.style.display = \"none\";\n            }\n            modal.onclick = function(event) {\n                if (event.target === modal) { \n                    modal.style.display = \"none\";\n                }\n            }\n        } else {\n            console.error(\"Modal elements not found for image zoom.\");\n        }\n\n\n        // ApexCharts Initialization\n        document.addEventListener('DOMContentLoaded', function () {\n            const langSwitcherContainer = document.getElementById('lang-switcher-container');\n            if (!langSwitcherContainer) {\n                 console.error(\"Fatal: #lang-switcher-container is missing. Language switching for charts will fail.\");\n                 langSwitcher.init(); \n                 return; \n            }\n            langSwitcher.init(); \n\n            const meavenGreen = '#009144';\n            const transactionChartSeriesData = { \n                offPlan: [2200, 4100, 3000, 4500, 4300, 2100, 5500, 5800, 4500, 5600, 3900, 6500, 5000, 6600, 5400, 5800, 8900, 6900, 4100, 6800, 7000, 11800, 9500, 10500, 14300, 12000, 9000, 10200, 9800],\n                ready: [2100, 3800, 3100, 3300, 4000, 3800, 7900, 3000, 4500, 3800, 4000, 5000, 4100, 5500, 5100, 4000, 4800, 3500, 5300, 4200, 4800, 5400, 5000, 4500, 4800, 4000, 4700, 4800, 4700]\n            };\n            const commonOptions = {\n                colors: [meavenGreen, '#54A0FF', '#FFB64D', '#FF7F50', '#ADFF2F'],\n                chart: {\n                    fontFamily: 'inherit',\n                    toolbar: { show: false },\n                    animations: { enabled: true, easing: 'easeinout', speed: 800 },\n                },\n                stroke: { width: 2, curve: 'smooth' },\n                markers: { size: 4 },\n                tooltip: { theme: 'light' },\n                legend: { position: 'top', horizontalAlign: 'left', offsetY: 5, itemMargin: {horizontal: 10} },\n                grid: {\n                    borderColor: '#e0e0e0',\n                    strokeDashArray: 4\n                },\n            };\n            const commonPieOptions = {\n                 colors: [meavenGreen, '#28a745', '#6c757d', '#ffc107', '#17a2b8'],\n                 chart: { \n                    fontFamily: 'inherit', \n                    toolbar: { show: false }, \n                    animations: { enabled: true } \n                 },\n                 legend: { show: true, position: 'bottom', fontSize: '12px', markers: {width:10, height:10} },\n                 dataLabels: { \n                    enabled: true, \n                    formatter: function (val) { return Math.round(val) + \"%\" },\n                    style: {\n                        fontSize: '12px',\n                        colors: ['#fff'] \n                    },\n                 },\n                 plotOptions: {\n                    pie: {\n                        dataLabels: {\n                            offset: -15, \n                            minAngleToShowLabel: 10 \n                        }\n                    }\n                 },\n                 tooltip: { y: { formatter: function (val) { return val + \"%\" } } }\n            };\n\n            var transactionChart, pieOverall, pieApartments, pieVillas, capApartmentsChart, capVillasChart;\n\n            function getChartLabels(lang) {\n                if (lang === 'en') {\n                    return {\n                        dubaiText: 'Dubai',\n                        offPlanText: 'Off-plan',\n                        readyText: 'Ready',\n                        chartTitle: 'Dubai Residential Transaction Trend',\n                        yAxisTitle: 'Number of Units',\n                        tooltipUnit: ' Units'\n                    };\n                } else if (lang === 'zh-TW') {\n                    return {\n                        dubaiText: '杜拜',\n                        offPlanText: '預售屋',\n                        readyText: '成屋',\n                        chartTitle: '杜拜住宅交易趨勢',\n                        yAxisTitle: '單位數量',\n                        tooltipUnit: ' 單位'\n                    };\n                } else { // zh-CN\n                    return {\n                        dubaiText: '迪拜',\n                        offPlanText: '期房',\n                        readyText: '现房',\n                        chartTitle: '迪拜住宅交易趋势',\n                        yAxisTitle: '单位数量',\n                        tooltipUnit: ' 单位'\n                    };\n                }\n            }\n            \n            function updateChartContent(lang) {\n                const labels = getChartLabels(lang);\n                if (transactionChart) {\n                    transactionChart.updateOptions({\n                        title: { text: labels.chartTitle },\n                        series: [ \n                            { name: `${labels.offPlanText} (Off Plan)`, data: transactionChartSeriesData.offPlan }, \n                            { name: `${labels.readyText} (Ready)`, data: transactionChartSeriesData.ready }\n                        ],\n                        yaxis: { title: { text: labels.yAxisTitle } },\n                        tooltip: { y: { formatter: function (val) { return val + labels.tooltipUnit } } }\n                    });\n                }\n                 // For pie charts, re-render them to ensure labels are updated correctly\n                renderPieCharts(lang);\n            }\n\n            function renderPieCharts(lang) {\n                const labels = getChartLabels(lang);\n                if (document.getElementById('pieOverallMarket')) {\n                    if (pieOverall) pieOverall.destroy();\n                    pieOverall = new ApexCharts(document.getElementById('pieOverallMarket'), {\n                         ...commonPieOptions, \n                         chart: { ...commonPieOptions.chart, type: 'pie' }, \n                         series: [69, 31], \n                         labels: [labels.offPlanText, labels.readyText]\n                     });\n                     pieOverall.render();\n                }\n                if (document.getElementById('pieApartmentsMarket')) {\n                    if (pieApartments) pieApartments.destroy();\n                     pieApartments = new ApexCharts(document.getElementById('pieApartmentsMarket'), {\n                         ...commonPieOptions, \n                         chart: { ...commonPieOptions.chart, type: 'pie' }, \n                         series: [66, 34], \n                         labels: [labels.offPlanText, labels.readyText]\n                     });\n                     pieApartments.render();\n                }\n                if (document.getElementById('pieVillasMarket')) {\n                    if (pieVillas) pieVillas.destroy();\n                     pieVillas = new ApexCharts(document.getElementById('pieVillasMarket'), {\n                         ...commonPieOptions, \n                         chart: { ...commonPieOptions.chart, type: 'pie' }, \n                         series: [75, 25], \n                         labels: [labels.offPlanText, labels.readyText]\n                     });\n                     pieVillas.render();\n                }\n            }\n\n\n            // Chart 1: Transaction Trend\n            if (document.getElementById('transactionTrendChart')) {\n                const initialLabels = getChartLabels(langSwitcher.currentLang);\n                const optionsTransactionTrend = { \n                    ...commonOptions,\n                    series: [{\n                        name: `${initialLabels.offPlanText} (Off Plan)`, \n                        data: transactionChartSeriesData.offPlan\n                    }, {\n                        name: `${initialLabels.readyText} (Ready)`, \n                        data: transactionChartSeriesData.ready\n                    }],\n                    xaxis: {\n                        type: 'category',\n                        categories: ['22年1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月', '23年1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月', '24年1月', '2月', '3月', '...', '25年3月'], \n                        labels: { style: { colors: '#6b7280', fontSize: '10px' } }\n                    },\n                    yaxis: { title: { text: initialLabels.yAxisTitle, style: { color: '#6b7280', fontSize: '11px', fontWeight: 'normal' } }, labels: { style: { colors: '#6b7280', fontSize: '10px' } } },\n                    title: { text: initialLabels.chartTitle, align: 'left', style: { fontSize: '14px', fontWeight: '600', color: '#111827' } },\n                    tooltip: { y: { formatter: function (val) { return val + initialLabels.tooltipUnit } } }\n                };\n                transactionChart = new ApexCharts(document.getElementById('transactionTrendChart'), optionsTransactionTrend);\n                transactionChart.render();\n            }\n\n            // Initial render for Pie Charts\n            renderPieCharts(langSwitcher.currentLang);\n            \n            // Chart 3 & 4: Capital Value Trends\n            if (document.getElementById('capitalTrendApartmentsChart')) {\n                const optionsCapApartments = { \n                    ...commonOptions,\n                    series: [\n                        { name: 'Al Furjan', data: [700, 750, 800, 820, 850, 900, 950, 1000, 1050, 1100, 1150, 1180, 1200] },\n                        { name: 'Business Bay', data: [1200, 1250, 1300, 1400, 1500, 1600, 1700, 1750, 1800, 1820, 1850, 1860, 1850] },\n                        { name: 'Downtown Dubai', data: [1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500, 2600, 2650, 2700, 2720, 2700] },\n                        { name: 'Dubai Marina', data: [1500, 1600, 1700, 1750, 1800, 1900, 2000, 2100, 2200, 2250, 2300, 2320, 2300] },\n                        { name: 'Palm Jumeirah', data: [2000, 2100, 2250, 2400, 2550, 2700, 2850, 3000, 3100, 3200, 3300, 3350, 3300] }\n                    ],\n                    xaxis: { categories: ['2012', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24/25'], labels: { style: { colors: '#6b7280', fontSize: '10px' } } },\n                    yaxis: { title: { text: 'AED/平方英尺', style: { color: '#6b7280', fontSize: '11px', fontWeight: 'normal' } }, labels: { style: { colors: '#6b7280', fontSize: '10px' } } },\n                    legend: { fontSize: '11px', itemMargin: {horizontal: 5}, offsetY:0 },\n                    tooltip: { y: { formatter: function (val) { return \"AED \" + val } } }\n                };\n                capApartmentsChart = new ApexCharts(document.getElementById('capitalTrendApartmentsChart'), optionsCapApartments);\n                capApartmentsChart.render();\n            }\n            if (document.getElementById('capitalTrendVillasChart')) {\n                const optionsCapVillas = { \n                    ...commonOptions,\n                    series: [\n                        { name: 'Al Furjan', data: [600, 650, 700, 720, 750, 800, 850, 900, 950, 1000, 1100, 1150, 1200] },\n                        { name: 'Arabian Ranches', data: [800, 900, 1000, 1050, 1100, 1200, 1300, 1400, 1500, 1650, 1800, 1950, 2100] },\n                        { name: 'Palm Jumeirah', data: [2500, 2700, 2900, 3000, 3100, 3300, 3500, 3700, 4000, 4500, 5000, 5800, 6500] },\n                        { name: 'The Springs & Meadows', data: [700, 800, 850, 900, 950, 1000, 1100, 1200, 1300, 1450, 1600, 1750, 1900] }\n                    ],\n                    xaxis: { categories: ['2012', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24/25'], labels: { style: { colors: '#6b7280', fontSize: '10px' } } },\n                    yaxis: { title: { text: 'AED/平方英尺', style: { color: '#6b7280', fontSize: '11px', fontWeight: 'normal' } }, labels: { style: { colors: '#6b7280', fontSize: '10px' } } },\n                    legend: { fontSize: '11px', itemMargin: {horizontal: 5}, offsetY:0 },\n                    tooltip: { y: { formatter: function (val) { return \"AED \" + val } } }\n                };\n                capVillasChart = new ApexCharts(document.getElementById('capitalTrendVillasChart'), optionsCapVillas);\n                capVillasChart.render();\n            }\n            \n            const langSwitcherContainerElement = document.getElementById('lang-switcher-container');\n            if (langSwitcherContainerElement) {\n                 langSwitcherContainerElement.addEventListener('langChanged', (e) => {\n                    updateChartContent(e.detail.lang); // Renamed from updateChartTitlesAndSeries for clarity\n                });\n            } else {\n                console.error(\"#lang-switcher-container not found when trying to add event listener for chart updates.\");\n            }\n        });\n    </script>\n\n</body>\n</html>",
      "codeLang": "html"
    },
    {
      "description": " 一个暗黑主题高级科技感分析报告 PPT 模板，包含多种图表和数据可视化组件，适用于展示复杂数据和趋势。",
      "category": "design",
      "tags": [
        "PPT",
        "设计",
        "数据可视化",
        "图表",
        "科技感"
      ],
      "difficulty": "advanced",
      "id": "slides-tech-report",
      "title": "AI趋势洞察分析",
      "code": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>AI 趋势深度解析 | BOND 2025 Enhanced</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script>\n        tailwind.config = {\n            theme: {\n                extend: {\n                    colors: {\n                        'tesla-red': '#E31937',\n                        'tesla-red-light': '#F87171',\n                        'dark-bg': '#0A0A0A',\n                        'content-bg': '#141414',\n                        'light-text': '#E5E7EB',\n                        'medium-text': '#9CA3AF',\n                        'quote-border': 'rgba(227, 25, 55, 0.7)',\n                        'bond-blue-accent': '#A0C5E8', \n                    },\n                    fontFamily: {\n                        sans: ['Inter var', 'sans-serif'],\n                        display: ['Inter var', 'sans-serif'], \n                    },\n                    animation: {\n                        'aurora': 'aurora 20s ease-in-out infinite alternate',\n                        'slide-in-up': 'slideInUp 0.8s ease-out forwards',\n                        'text-focus-in': 'text-focus-in 1s cubic-bezier(0.550, 0.085, 0.680, 0.530) both'\n                    },\n                    keyframes: {\n                        aurora: {\n                            '0%': { backgroundPosition: '0% 50%' },\n                            '50%': { backgroundPosition: '100% 50%' },\n                            '100%': { backgroundPosition: '0% 50%' },\n                        },\n                        slideInUp: {\n                            '0%': { opacity: '0', transform: 'translateY(50px)' },\n                            '100%': { opacity: '1', transform: 'translateY(0)' },\n                        },\n                        'text-focus-in': {\n                           '0%': { filter: 'blur(12px)', opacity: '0' },\n                           '100%': { filter: 'blur(0px)', opacity: '1' }\n                        }\n                    }\n                }\n            }\n        }\n    </script>\n    <script src=\"https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/animejs@3.2.1/lib/anime.min.js\"></script>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\">\n    <style>\n        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&family=Noto+Sans+SC:wght@300;400;500;700;900&display=swap');\n        :root {\n            --tesla-red: #E31937;\n            --dark-bg: #0A0A0A;\n            --content-bg: #141414;\n            --light-text: #E5E7EB;\n            --medium-text: #9CA3AF;\n            --pdf-title-blue: #A0C5E8;\n            --quote-border: rgba(227, 25, 55, 0.7);\n        }\n        \n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        html, body {\n            height: 100%;\n            font-family: 'Inter', 'Noto Sans SC', sans-serif;\n            background-color: var(--dark-bg);\n            color: var(--light-text);\n            overflow: hidden;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n        }\n        \n        .dynamic-aurora-bg {\n            position: fixed; \n            top: 0; left: 0; right: 0; bottom: 0;\n            width: 100%; height: 100%;\n            background: radial-gradient(ellipse at 70% 30%, var(--tesla-red) 0%, transparent 40%),\n                        radial-gradient(ellipse at 30% 70%, var(--pdf-title-blue) 0%, transparent 40%),\n                        radial-gradient(ellipse at 50% 50%, #222 0%, var(--dark-bg) 70%); \n            background-size: 300% 300%;\n            filter: blur(100px) saturate(1.2); \n            opacity: 0.25; \n            animation: aurora 25s ease-in-out infinite alternate; \n            z-index: -10; \n        }\n        \n        .slide-container {\n            width: 100vw;\n            height: 100vh;\n            position: relative;\n            transition: transform 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n        }\n        \n        .slide {\n            width: 100vw;\n            height: 100vh;\n            position: absolute;\n            top: 0;\n            left: 0;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            padding: 2rem;\n            opacity: 0;\n            visibility: hidden;\n            transition: opacity 0.6s ease, visibility 0.6s ease;\n            overflow-y: auto;\n        }\n        \n        .slide.active {\n            opacity: 1;\n            visibility: visible;\n        }\n        \n        .slide-number {\n            position: absolute;\n            top: 2rem;\n            right: 2rem;\n            font-size: 1.2rem;\n            color: var(--medium-text);\n            font-weight: 600;\n            z-index: 100;\n        }\n        \n        .mega-title {\n            font-family: 'Inter', sans-serif;\n            font-size: clamp(3rem, 10vw, 7rem); \n            font-weight: 900;\n            line-height: 1;\n            letter-spacing: -0.04em;\n            color: var(--pdf-title-blue);\n            text-align: center;\n            margin-bottom: 2rem;\n        }\n        \n        .sub-mega-title {\n            font-family: 'Inter', sans-serif;\n            font-size: clamp(2rem, 6vw, 4rem); \n            font-weight: 800;\n            line-height: 1.1;\n            letter-spacing: -0.03em;\n            text-align: center;\n            margin-bottom: 2rem;\n        }\n        \n        .highlight { \n            color: var(--tesla-red); \n        }\n        \n        .highlight-glow { \n            text-shadow: 0 0 20px rgba(227, 25, 55, 0.8), 0 0 30px rgba(227, 25, 55, 0.5); \n        }\n        \n        .en-accent { \n            font-size: 0.85rem; \n            text-transform: uppercase; \n            letter-spacing: 0.15em; \n            color: var(--medium-text); \n            font-weight: 500;\n            text-align: center;\n            margin-bottom: 1rem;\n        }\n        \n        .chart-container { \n            width: 75%; \n            max-width: 900px;\n            height: 280px; \n            background-color: rgba(20, 20, 20, 0.4); \n            border-radius: 12px; \n            padding: 1rem; \n            box-shadow: 0 10px 30px rgba(0,0,0,0.3); \n            margin: 1rem auto; \n            border: 1px solid rgba(255,255,255,0.05);\n        }\n        \n        .fade-in-item { \n            opacity: 0; \n            transition: opacity 0.7s ease-out, transform 0.7s ease-out; \n            transform: translateY(30px); \n        }\n        \n        .fade-in-item.is-visible { \n            opacity: 1; \n            transform: translateY(0) !important; \n        }\n\n        .tesla-line {\n            height: 2px;\n            background: linear-gradient(90deg, transparent 0%, var(--tesla-red) 50%, transparent 100%);\n            opacity: 0.7;\n            margin: 2.5rem auto;\n            width: 33%;\n        }\n        \n        .content-card {\n            background-color: var(--content-bg);\n            border-radius: 16px;\n            padding: 1.5rem;\n            box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.4), inset 0 0 0 1px rgba(255,255,255,0.05);\n            width: 100%;\n            max-width: 1200px;\n            margin: 0.5rem auto;\n        }\n        \n        .stat-counter { \n            font-weight: 900; \n            color: var(--tesla-red); \n        }\n        \n        .section-intro-text { \n            font-size: 1.1rem;\n            line-height: 1.7; \n            color: var(--light-text); \n            max-width: 70ch;\n            margin: 1rem auto 2rem auto; \n            text-align: center; \n        }\n        \n        .chart-title-custom { \n            font-size: 1.8rem; \n            font-weight: 700; \n            margin-bottom: 1rem; \n            text-align: center; \n            color: var(--light-text); \n        }\n        \n        .chart-subtitle-custom { \n            font-size: 1rem; \n            color: var(--medium-text); \n            margin-bottom: 2rem; \n            text-align: center;\n        }\n\n        .chart-interpretation {\n            font-size: 0.9rem;\n            line-height: 1.6;\n            color: var(--medium-text);\n            margin-top: 1rem;\n            padding: 1rem;\n            background-color: rgba(30,30,30,0.3);\n            border-left: 4px solid var(--tesla-red);\n            border-radius: 0 10px 10px 0;\n        }\n        \n        .quote-block {\n            margin: 2.5rem auto;\n            padding: 2rem;\n            background-color: rgba(20,20,20,0.6); \n            border-left: 6px solid var(--quote-border); \n            border-radius: 10px;\n            box-shadow: 0 8px 20px rgba(0,0,0,0.25);\n            max-width: 70ch;\n        }\n        \n        .quote-block p { \n            font-style: italic; \n            color: var(--light-text); \n            margin-bottom: 0.75rem; \n            font-size: 1.2rem; \n            line-height: 1.7; \n        }\n        \n        .quote-block footer { \n            text-align: right; \n            color: var(--medium-text); \n            font-size: 0.95rem; \n        }\n\n        .case-study-card {\n            background-color: var(--content-bg);\n            border-radius: 12px;\n            padding: 1.5rem;\n            margin-bottom: 1.5rem;\n            border: 1px solid rgba(255,255,255,0.1);\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\n        }\n        \n        .case-study-card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0px 25px 50px rgba(0, 0, 0, 0.5);\n        }\n        \n        .case-study-card h4 { \n            color: var(--tesla-red-light); \n            font-weight: 700; \n            font-size: 1.25rem; \n            margin-bottom: 0.75rem;\n        }\n        \n        .case-study-card p { \n            font-size: 0.9rem; \n            color: var(--medium-text); \n            line-height: 1.6;\n        }\n        \n        .case-study-card .company-logo { \n            font-size: 2rem; \n            margin-right: 0.75rem; \n        }\n        \n        .progress-bar {\n            position: fixed;\n            bottom: 0;\n            left: 0;\n            height: 3px;\n            background: linear-gradient(90deg, var(--tesla-red), var(--pdf-title-blue));\n            transition: width 0.6s ease;\n            z-index: 100;\n        }\n        \n        .data-highlight {\n            font-size: clamp(2.5rem, 5vw, 4rem);\n            font-weight: 900;\n            color: var(--tesla-red);\n            display: block;\n            text-align: center;\n            margin: 1rem 0;\n            text-shadow: 0 0 20px rgba(227, 25, 55, 0.5);\n        }\n        \n        /* 响应式调整 */\n        @media (max-width: 768px) {\n            .slide {\n                padding: 1rem;\n            }\n            .chart-container {\n                width: 95%;\n                height: 220px;\n                padding: 0.5rem;\n            }\n            .content-card {\n                padding: 0.8rem;\n                margin: 0.3rem auto;\n            }\n            .chart-interpretation {\n                font-size: 0.8rem;\n                padding: 0.8rem;\n                margin-top: 0.5rem;\n            }\n            .section-intro-text {\n                font-size: 1rem;\n                margin: 0.5rem auto 1rem auto;\n            }\n        }\n        \n        /* 全屏时隐藏滚动条 */\n        ::-webkit-scrollbar {\n            display: none;\n        }\n        \n        html {\n            -ms-overflow-style: none;\n            scrollbar-width: none;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"dynamic-aurora-bg\"></div>\n    \n    <!-- 进度条 -->\n    <div class=\"progress-bar\" id=\"progress-bar\"></div>\n    \n    <div class=\"slide-container\" id=\"slide-container\">\n        \n        <!-- 第1页：标题页 -->\n        <div class=\"slide active\" data-slide=\"1\">\n            <div class=\"slide-number\">1 / 11</div>\n            <h1 class=\"mega-title fade-in-item animate-text-focus-in\">AI趋势<span class=\"highlight highlight-glow\">洞察分析</span></h1>\n            <p class=\"text-2xl md:text-3xl font-semibold text-gray-300 fade-in-item\" style=\"animation-delay: 0.3s;\">BOND | 2025年5月</p>\n            <p class=\"section-intro-text fade-in-item\" style=\"animation-delay: 0.6s;\">\n                探索AI前所未有的发展势头，及其如何重塑产业、经济以及我们与世界的互动方式。基于BOND Capital的深度报告。\n            </p>\n        </div>\n        \n        <!-- 第2页：变革背景 -->\n        <div class=\"slide\" data-slide=\"2\">\n            <div class=\"slide-number\">2 / 11</div>\n            <h2 class=\"sub-mega-title fade-in-item\">变革的<span class=\"highlight\">背景</span></h2>\n            <div class=\"tesla-line fade-in-item\"></div>\n            <p class=\"section-intro-text fade-in-item\">\n                我们着手梳理AI的基础趋势。最初零散的数据点汇聚成如今的庞大报告。更新一张图表，往往意味着要调整另一张——数据如同'打地鼠'游戏，变化不止，且随着科技巨头、新兴企业及国家力量的竞争而愈发复杂。数据明确显示：人工智能技术演进的速度与广度，确实前所未有。\n            </p>\n            <div class=\"content-card fade-in-item\">\n                <blockquote class=\"text-xl italic text-gray-300 border-l-4 border-tesla-red pl-6 py-2\">\n                    \"他们说互联网行业的一年就像狗的一年——相当于普通人的七年。\" \n                    <span class=\"block text-right text-gray-400 text-base mt-2\">- 温特·瑟夫 (Vint Cerf), 1999 (互联网奠基人之一)</span>\n                </blockquote>\n                <p class=\"mt-6 text-lg text-gray-200\">\n                    现在不妨思考：AI用户和使用趋势的增长速度要快得多……机器甚至可能超越我们。创造者、投资者和消费者正在利用全球互联网基础设施、持续增长三十余年的海量数据集，以及大型语言模型（LLM）的突破——例如OpenAI的ChatGPT，它凭借极其易用和快速的用户界面获得了自由。\n                </p>\n                <p class=\"mt-4 text-lg text-gray-200\">\n                    此外，相对较新的AI公司创始人在创新、产品发布、投资、收购、现金消耗和融资方面尤其积极。与此同时，更多传统科技公司（通常有创始人参与）也越来越多地将其庞大的自由现金流投向AI，以推动增长并抵御攻击者。而全球竞争——尤其是在中美科技发展方面——异常激烈。\n                </p>\n            </div>\n            <p class=\"mt-8 text-lg text-center text-gray-400 fade-in-item\">我们希望这份汇编能促进关于技术、金融、社会、物理和地缘政治层面广泛变革的讨论。毫无疑问，随着我们共同适应这一不断演进的旅程，人类（和机器）都将在知识及其传播方式被迅速提升的过程中不断进步。</p>\n        </div>\n\n        <!-- 第3页：开发者增长 -->\n        <div class=\"slide\" data-slide=\"3\">\n            <div class=\"slide-number\">3 / 11</div>\n            <div class=\"pt-12 pb-8 w-full max-w-6xl\">\n                <p class=\"en-accent fade-in-item\">变革是否空前加速？</p>\n                <h2 class=\"sub-mega-title fade-in-item\">是的，<span class=\"highlight highlight-glow\">的确如此</span></h2>\n                <div class=\"tesla-line fade-in-item\"></div>\n                <p class=\"section-intro-text fade-in-item\">\n                    AI的研发与普及速度正刷新纪录，远超以往的技术变革。开发者参与度等关键指标呈指数级增长。\n                </p>\n                <div class=\"content-card fade-in-item\">\n                    <div class=\"chart-title-custom\">领先芯片制造商生态系统中的开发者</div>\n                    <p class=\"text-center\"><span class=\"data-highlight\"><span class=\"stat-counter\" data-count=\"6\">0</span>百万</span><span class=\"text-2xl text-medium-text\">(2025年预计)</span></p>\n                    <div id=\"chart1-chipmaker-devs\" class=\"chart-container\"></div>\n                    <p class=\"text-center text-sm text-medium-text mt-3\">来源: 领先芯片制造商 (详情见PDF第38页)</p>\n                    <div class=\"chart-interpretation\">\n                        <p><strong>图表解读：</strong>从2005年到2025年，顶尖芯片制造商生态系统中的开发者数量预计将从几乎为零增长到600万。这一显著增长曲线，特别是在近几年的急剧上扬，清晰地表明AI技术的吸引力及其对专业开发人才的巨大需求。开发者的涌入是技术生态系统成熟和创新加速的关键驱动力。</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- 第4页：用户增长 -->\n        <div class=\"slide\" data-slide=\"4\">\n            <div class=\"slide-number\">4 / 11</div>\n            <div class=\"pt-12 pb-8 w-full max-w-6xl\">\n                <p class=\"en-accent fade-in-item\">AI 用户 + 使用量 + 资本支出增长</p>\n                <h2 class=\"sub-mega-title fade-in-item\"><span class=\"highlight highlight-glow\">前所未有</span></h2>\n                <div class=\"tesla-line fade-in-item\"></div>\n                <p class=\"section-intro-text fade-in-item\">\n                    AI领域的用户接纳、平台使用及资本投入'三驾马车'，正以前所未有的速度扩张。这一浪潮凸显了AI对消费级应用和企业级基础设施深远且迅速扩大的影响力。\n                </p>\n                <div class=\"content-card fade-in-item\">\n                    <div class=\"chart-title-custom\">美国头部LLM用户</div>\n                    <p class=\"text-center\"><span class=\"data-highlight\"><span class=\"stat-counter\" data-count=\"800\">0</span>百万</span><span class=\"text-2xl text-medium-text\">(周活跃用户)</span></p>\n                    <div id=\"chart2-llm-users\" class=\"chart-container\"></div>\n                    <p class=\"text-center text-sm text-medium-text mt-3\">来源: 公司披露 (PDF 第55页)</p>\n                    <div class=\"chart-interpretation\">\n                        <p><strong>图表解读：</strong>美国头部大语言模型（LLM）的周活跃用户数在短时间内从2022年10月的几乎为零激增至2025年4月的8亿。这一指数级增长曲线凸显了生成式AI产品（如ChatGPT）对全球用户的巨大吸引力及其病毒式的传播速度，远超历史上任何一款消费级技术产品。</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- 第5页：互联网vs LLM对比 -->\n        <div class=\"slide\" data-slide=\"5\">\n            <div class=\"slide-number\">5 / 11</div>\n            <div class=\"content-card fade-in-item\">\n                <div class=\"chart-title-custom\">互联网 vs. 美国头部LLM</div>\n                <div class=\"chart-subtitle-custom\">北美以外地区当前总用户</div>\n                <div id=\"chart2-1-internet-vs-llm\" class=\"chart-container\"></div>\n                <p class=\"text-center text-sm text-medium-text mt-3\">来源: 联合国 / ITU, Sensor Tower (PDF 第56页)</p>\n                <div class=\"chart-interpretation\">\n                    <p><strong>图表解读：</strong>此图对比了互联网和头部LLM应用在北美以外用户渗透的年限。LLM应用仅用3年时间，其北美以外用户占比即达到90%；而互联网达到同样比例则花费了23年。这表明AI技术的全球普及速度更快，门槛更低，更容易被不同地区用户接纳。</p>\n                </div>\n            </div>\n        </div>\n\n        <!-- 第6页：资本支出 -->\n        <div class=\"slide\" data-slide=\"6\">\n            <div class=\"slide-number\">6 / 11</div>\n            <div class=\"content-card fade-in-item\">\n                <div class=\"chart-title-custom\">美国六大科技公司资本支出*</div>\n                <p class=\"text-center\"><span class=\"data-highlight\">$<span class=\"stat-counter\" data-count=\"212\">0</span>B</span><span class=\"text-2xl text-medium-text\">(2024年, 同比增长63%)</span></p>\n                <div id=\"chart2-2-big-six-capex\" class=\"chart-container\"></div>\n                <p class=\"text-center text-sm text-medium-text mt-3\">*苹果, 英伟达, 微软, Alphabet, 亚马逊 (AWS), Meta Platforms. 来源: Capital IQ, Morgan Stanley (PDF 第97页)</p>\n                <div class=\"chart-interpretation\">\n                    <p><strong>图表解读：</strong>美国六大科技巨头的资本支出在2024年达到2120亿美元，同比激增63%。这反映出AI已成为这些公司的核心战略，它们正不惜重金投入AI基础设施建设，包括数据中心、专用芯片（GPU、TPU）和相关研发，以驱动未来增长并巩固市场领导地位。</p>\n                </div>\n            </div>\n        </div>\n\n        <!-- 第7页：计算成本 -->\n        <div class=\"slide\" data-slide=\"7\">\n            <div class=\"slide-number\">7 / 11</div>\n            <div class=\"pt-12 pb-8 w-full max-w-6xl\">\n                <p class=\"en-accent fade-in-item\">AI模型计算与推理成本</p>\n                <h2 class=\"sub-mega-title fade-in-item\">计算成本 <span class=\"highlight\">高昂/上升</span></h2>\n                <h2 class=\"sub-mega-title fade-in-item\">单位Token推理成本 <span class=\"highlight\">下降</span></h2>\n                <p class=\"text-xl font-semibold text-light-text fade-in-item\">= 性能趋同 + 开发者使用量上升</p>\n                <div class=\"tesla-line fade-in-item\"></div>\n                <p class=\"section-intro-text fade-in-item\">\n                    AI模型经济学呈现出一种张力：训练最强大模型的成本持续攀升至数十亿美元，但讽刺的是，使用这些模型（推理）的单位成本却在急剧下降。硬件效率提升和算法优化正共同推动推理成本的骤降。这种成本结构的转变使得AI应用对开发者和用户而言都更易获取，促进了创新和广泛采用。\n                </p>\n                <div class=\"content-card fade-in-item\">\n                    <div class=\"chart-title-custom\">关键技术成本（相对于发布年份）</div>\n                    <div id=\"chart3-key-tech-cost\" class=\"chart-container\"></div>\n                    <p class=\"text-center text-sm text-medium-text mt-3\">注: 显示的是单位Token推理成本。来源: Richard Hirsh; John McCallum; OpenAI (PDF 第138页)</p>\n                    <div class=\"chart-interpretation\">\n                        <p><strong>图表解读：</strong>与电力和计算机内存等历史关键技术相比，AI推理（以75词回复为代表）的成本下降速度更为迅猛。在发布后的短时间内，其相对成本已大幅低于前两者在同等时间跨度内的表现。这表明AI技术的成本效益优化速度是前所未有的，极大地降低了AI应用的门槛。</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- 第8页：收入vs支出 -->\n        <div class=\"slide\" data-slide=\"8\">\n            <div class=\"slide-number\">8 / 11</div>\n            <div class=\"pt-8 pb-6 w-full max-w-6xl\">\n                <p class=\"en-accent fade-in-item\">AI 使用量 + 成本 + 亏损增长</p>\n                <h2 class=\"sub-mega-title text-3xl md:text-4xl fade-in-item\"><span class=\"highlight highlight-glow\">前所未有</span></h2>\n                <div class=\"tesla-line w-1/4 fade-in-item\"></div>\n                <p class=\"text-base text-center text-light-text max-w-4xl mx-auto mb-4 fade-in-item\">\n                    尽管AI应用带来显著收入增长潜力，但领先AI公司仍面临巨大计算成本和运营亏损。这种\"高增长、高消耗、高估值\"模式在科技发展史上并非罕见。\n                </p>\n                <div class=\"content-card fade-in-item\">\n                    <div class=\"chart-title-custom text-lg\">美国头部AI LLM收入 vs. 计算支出</div>\n                    <div class=\"text-center mb-2\">\n                        <span class=\"text-2xl font-bold text-tesla-red\">- $5B</span><span class=\"text-sm text-medium-text ml-2\">(计算支出)</span>\n                        <span class=\"text-2xl font-bold text-bond-blue-accent ml-6\">+ $3.7B</span><span class=\"text-sm text-medium-text ml-2\">(收入)</span>\n                    </div>\n                    <div id=\"chart4-llm-rev-expense\" style=\"width: 100%; height: 200px; margin: 0.5rem auto;\"></div>\n                    <p class=\"text-center text-xs text-medium-text mt-1\">来源: The Information, 公开估算 (PDF 第173页)</p>\n                    <div class=\"text-xs text-medium-text mt-2 p-2 bg-gray-800 bg-opacity-30 rounded border-l-2 border-tesla-red\">\n                        <p><strong>解读：</strong>2024年头部AI LLM公司预计收入37亿美元，但计算支出高达50亿美元。这种\"烧钱\"模式类似早期亚马逊、Uber，AI公司正处于高投入期。</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- 第9页：全球竞争 -->\n        <div class=\"slide\" data-slide=\"9\">\n            <div class=\"slide-number\">9 / 11</div>\n            <p class=\"en-accent fade-in-item\">AI 商业化威胁</p>\n            <h2 class=\"sub-mega-title fade-in-item\">竞争加剧 + 开源势头 + <span class=\"highlight highlight-glow\">中国崛起</span></h2>\n            <div class=\"tesla-line fade-in-item\"></div>\n            <p class=\"section-intro-text fade-in-item\">\n                AI商业化的道路并非一帆风顺，面临着日益激烈的市场竞争、开源模型的强劲势头以及中国在全球AI版图中的迅速崛起等多重挑战。这些因素共同构成了对现有盈利模式的潜在威胁。\n            </p>\n            <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-4 w-full max-w-6xl\">\n                <div class=\"content-card fade-in-item\">\n                    <div class=\"chart-title-custom text-base\">美国头部LLM vs. 中国LLM桌面用户份额</div>\n                    <div id=\"chart5-us-china-llm-share\" class=\"w-full h-52 bg-content-bg bg-opacity-40 rounded-lg p-2 border border-white border-opacity-5\"></div>\n                    <p class=\"text-center text-xs text-medium-text mt-1\">来源: YipitData (PDF 第293页)</p>\n                    <div class=\"chart-interpretation text-xs p-2 mt-1\">\n                        <p><strong>图表解读：</strong>美国头部LLM仍占主导，但中国LLM正迅速崛起，用户份额从2024年2月的0%增长至4月的10%，同时美国LLM #1份额从75%降至60%。</p>\n                    </div>\n                </div>\n                <div class=\"content-card fade-in-item\">\n                    <div class=\"chart-title-custom text-base\">中国 vs. 美国 vs. 其他地区工业机器人安装量</div>\n                    <div id=\"chart5-1-robots-installed\" class=\"w-full h-52 bg-content-bg bg-opacity-40 rounded-lg p-2 border border-white border-opacity-5\"></div>\n                    <p class=\"text-center text-xs text-medium-text mt-1\">来源: 国际机器人联合会 (PDF 第289页)</p>\n                    <div class=\"chart-interpretation text-xs p-2 mt-1\">\n                        <p><strong>图表解读：</strong>中国在工业机器人安装数量上已远超美国和其他地区，显示其在制造业自动化和AI物理世界应用方面的领先地位。</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- 第10页：案例研究 -->\n        <div class=\"slide\" data-slide=\"10\">\n            <div class=\"slide-number\">10 / 11</div>\n            <p class=\"en-accent fade-in-item\">AI实践</p>\n            <h2 class=\"sub-mega-title fade-in-item\">行业采纳<span class=\"highlight highlight-glow\">与前瞻</span></h2>\n            <div class=\"tesla-line fade-in-item\"></div>\n            <p class=\"section-intro-text fade-in-item\">\n                从科技巨头到传统企业，AI正被广泛采纳并深度整合到核心业务与工作流程中。以下是一些行业领导者对AI的看法和应用实例。\n            </p>\n            <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                <div class=\"case-study-card fade-in-item\">\n                    <h4><i class=\"fab fa-amazon company-logo text-yellow-400\"></i>亚马逊</h4>\n                    <p>\"生成式AI将重塑我们所知的几乎所有客户体验……你会越来越多地看到AI改变编码、搜索、购物、个人助理、基础医疗、癌症及药物研究、生物、机器人、太空、金融服务、社区网络等一切领域的规范。\"</p>\n                    <footer class=\"text-xs text-right mt-3 text-medium-text\">- 亚马逊CEO Andy Jassy, 2024年致股东信</footer>\n                </div>\n                <div class=\"case-study-card fade-in-item\">\n                    <h4><i class=\"fab fa-google company-logo text-blue-500\"></i>谷歌</h4>\n                    <p>\"改善生活、重塑事物的机会，正是谷歌十多年来投资AI的原因……我们视其为推进'整合全球信息，供大众使用，使人人受益'使命的最重要途径……AI带来的机遇无比巨大。\"</p>\n                    <footer class=\"text-xs text-right mt-3 text-medium-text\">- 谷歌CEO Sundar Pichai @ Google Cloud Next 2025</footer>\n                </div>\n                <div class=\"case-study-card fade-in-item\">\n                    <h4><i class=\"fa-solid fa-leaf company-logo text-green-500\"></i>Shopify</h4>\n                    <p>\"在Shopify，自觉使用AI已成为基本预期……有效使用AI现在是Shopify每个人的基本期望。它已成为当今各项工作的工具，并且只会越来越重要。\"</p>\n                    <footer class=\"text-xs text-right mt-3 text-medium-text\">- Shopify联合创始人兼CEO Tobias Lütke, 内部备忘录</footer>\n                </div>\n                <div class=\"case-study-card fade-in-item\">\n                    <h4><i class=\"fa-solid fa-graduation-cap company-logo text-green-400\"></i>Duolingo</h4>\n                    <p>\"Duolingo将成为一家AI优先的公司……AI不仅仅是生产力助推器，它帮助我们更接近我们的使命。要教好，我们需要创造大量内容，而手动操作无法规模化。\"</p>\n                    <footer class=\"text-xs text-right mt-3 text-medium-text\">- Duolingo联合创始人兼CEO Luis von Ahn, 全体员工备忘录</footer>\n                </div>\n                <div class=\"case-study-card fade-in-item\">\n                    <h4><i class=\"fa-solid fa-microchip company-logo text-green-600\"></i>NVIDIA</h4>\n                    <p>\"你不会因为AI而失业——你的工作不会被AI取代，但你会因为使用AI的人而失业……我建议你认识的每一个人都100%利用AI，不要做那个忽视这项技术的人。\"</p>\n                    <footer class=\"text-xs text-right mt-3 text-medium-text\">- NVIDIA联合创始人兼CEO Jensen Huang, Milken Institute</footer>\n                </div>\n            </div>\n        </div>\n\n        <!-- 第11页：未来展望 -->\n        <div class=\"slide\" data-slide=\"11\">\n            <div class=\"slide-number\">11 / 11</div>\n            <p class=\"en-accent fade-in-item\">展望未来</p>\n            <h2 class=\"sub-mega-title fade-in-item\">演进中的<span class=\"highlight highlight-glow\">AI前沿</span></h2>\n            <div class=\"tesla-line fade-in-item\"></div>\n            <p class=\"section-intro-text fade-in-item\">\n                AI正在加速发展，触及更多领域，并更深地融入工作方式。无论是通过SaaS中的嵌入式智能，还是消费应用中的代理式工作流，交互层正在被实时重写。\n            </p>\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                <div class=\"content-card fade-in-item\">\n                    <h3 class=\"text-2xl font-bold mb-4 text-tesla-red-light\">关键发展轨迹</h3>\n                    <ul class=\"list-disc list-inside space-y-3 text-medium-text\">\n                        <li><span class=\"text-light-text\">计算投资:</span> 云服务商、芯片制造商和超大规模计算公司的资本支出持续急剧增长，受实时、大容量推理需求的驱动。</li>\n                        <li><span class=\"text-light-text\">地缘政治动态:</span> 中美之间的战略竞争日益定义全球AI竞赛，两国均视AI为经济助推器和地缘政治杠杆。</li>\n                        <li><span class=\"text-light-text\">交互革命:</span> AI正改变我们与技术的互动方式。对话式、多模态代理和AI原生体验成为常态，可能颠覆现有技术层级。</li>\n                    </ul>\n                </div>\n                <div class=\"content-card fade-in-item\">\n                    <h3 class=\"text-2xl font-bold mb-4 text-tesla-red-light\">前路展望</h3>\n                    <p class=\"text-lg text-light-text mb-4\">\"AI在工作场所的普及正在加速，并有潜力塑造人们三分之一工作时间的形态。\"</p>\n                    <p class=\"text-medium-text\">随着使用模式的演变和单位成本的下降，我们可能正见证一个智能成为默认界面的互联网早期阶段——易于访问、情境感知且日益个性化。信息和资本流动的增加与透明化，以及日益增多的武器化案例，都放大了这一切。</p>\n                </div>\n            </div>\n            <div class=\"quote-block fade-in-item text-center mt-12\">\n                <p class=\"text-xl md:text-2xl\">\"有一件事是肯定的——AI的竞赛已经开始，而且只会愈演愈烈……瓶中的精灵已经无法收回。\"</p>\n                <footer class=\"mt-2\">- BOND, 人工智能趋势报告, 2025年5月</footer>\n            </div>\n        </div>\n    </div>\n    \n    <script>\n        class PresentationController {\n            constructor() {\n                this.currentSlide = 0;\n                this.totalSlides = document.querySelectorAll('.slide').length;\n                this.slides = document.querySelectorAll('.slide');\n                this.progressBar = document.getElementById('progress-bar');\n                \n                this.init();\n            }\n            \n            init() {\n                this.updateProgress();\n                this.initEventListeners();\n                this.initAnimations();\n                this.initCharts();\n            }\n            \n            initEventListeners() {\n                document.addEventListener('keydown', (e) => {\n                    // Ctrl+F 或 Cmd+F 进入全屏\n                    if ((e.ctrlKey || e.metaKey) && e.key === 'f') {\n                        e.preventDefault();\n                        this.toggleFullscreen();\n                        return;\n                    }\n                    \n                    switch(e.key) {\n                        case 'ArrowUp':\n                        case 'ArrowLeft':\n                            e.preventDefault();\n                            this.previousSlide();\n                            break;\n                        case 'ArrowDown':\n                        case 'ArrowRight':\n                        case ' ':\n                            e.preventDefault();\n                            this.nextSlide();\n                            break;\n                        case 'Home':\n                            e.preventDefault();\n                            this.goToSlide(0);\n                            break;\n                        case 'End':\n                            e.preventDefault();\n                            this.goToSlide(this.totalSlides - 1);\n                            break;\n                        case 'Escape':\n                            if (document.fullscreenElement) {\n                                document.exitFullscreen();\n                            }\n                            break;\n                    }\n                });\n                \n                // 触摸支持\n                let startY = 0;\n                document.addEventListener('touchstart', (e) => {\n                    startY = e.touches[0].clientY;\n                });\n                \n                document.addEventListener('touchend', (e) => {\n                    const endY = e.changedTouches[0].clientY;\n                    const diff = startY - endY;\n                    \n                    if (Math.abs(diff) > 50) {\n                        if (diff > 0) {\n                            this.nextSlide();\n                        } else {\n                            this.previousSlide();\n                        }\n                    }\n                });\n                \n                // 鼠标滚轮支持\n                document.addEventListener('wheel', (e) => {\n                    e.preventDefault();\n                    if (e.deltaY > 0) {\n                        this.nextSlide();\n                    } else {\n                        this.previousSlide();\n                    }\n                }, { passive: false });\n            }\n            \n            nextSlide() {\n                if (this.currentSlide < this.totalSlides - 1) {\n                    this.goToSlide(this.currentSlide + 1);\n                }\n            }\n            \n            previousSlide() {\n                if (this.currentSlide > 0) {\n                    this.goToSlide(this.currentSlide - 1);\n                }\n            }\n            \n            goToSlide(index) {\n                if (index >= 0 && index < this.totalSlides) {\n                    this.slides[this.currentSlide].classList.remove('active');\n                    this.currentSlide = index;\n                    this.slides[this.currentSlide].classList.add('active');\n                    this.updateProgress();\n                    this.triggerSlideAnimations();\n                }\n            }\n            \n            updateProgress() {\n                const progress = ((this.currentSlide + 1) / this.totalSlides) * 100;\n                this.progressBar.style.width = `${progress}%`;\n            }\n            \n            toggleFullscreen() {\n                if (!document.fullscreenElement) {\n                    document.documentElement.requestFullscreen().catch(err => {\n                        console.log(`Error attempting to enable fullscreen: ${err.message}`);\n                    });\n                } else {\n                    document.exitFullscreen();\n                }\n            }\n            \n            initAnimations() {\n                this.triggerSlideAnimations();\n            }\n            \n            triggerSlideAnimations() {\n                const activeSlide = this.slides[this.currentSlide];\n                const elements = activeSlide.querySelectorAll('.fade-in-item');\n                \n                // 重置所有元素\n                elements.forEach(el => {\n                    el.classList.remove('is-visible');\n                });\n                \n                // 延迟触发动画\n                setTimeout(() => {\n                    elements.forEach((el, index) => {\n                        setTimeout(() => {\n                            el.classList.add('is-visible');\n                        }, index * 150);\n                    });\n                }, 100);\n                \n                // 触发计数器动画\n                setTimeout(() => {\n                    this.animateCounters(activeSlide);\n                }, 800);\n            }\n            \n            animateCounters(slide) {\n                const counters = slide.querySelectorAll('.stat-counter');\n                counters.forEach(counter => {\n                    if (!counter.dataset.animated || counter.dataset.animated !== this.currentSlide.toString()) {\n                        this.animateNumber(counter);\n                        counter.dataset.animated = this.currentSlide.toString();\n                    }\n                });\n            }\n            \n            animateNumber(element) {\n                const target = +element.dataset.count;\n                if (isNaN(target)) {\n                    element.textContent = element.dataset.count;\n                    return;\n                }\n                \n                let current = 0;\n                const duration = 2000;\n                const startTime = performance.now();\n                \n                const animate = (currentTime) => {\n                    const elapsed = currentTime - startTime;\n                    const progress = Math.min(elapsed / duration, 1);\n                    \n                    // 使用缓动函数\n                    const easeOut = 1 - Math.pow(1 - progress, 3);\n                    current = easeOut * target;\n                    \n                    if (target % 1 !== 0) {\n                        element.textContent = current.toFixed(1);\n                    } else {\n                        element.textContent = Math.ceil(current).toLocaleString();\n                    }\n                    \n                    if (progress < 1) {\n                        requestAnimationFrame(animate);\n                    } else {\n                        if (target % 1 !== 0) {\n                            element.textContent = target.toFixed(1);\n                        } else {\n                            element.textContent = target.toLocaleString();\n                        }\n                    }\n                };\n                \n                requestAnimationFrame(animate);\n            }\n            \n            initCharts() {\n                // 等待DOM完全加载后再初始化图表\n                setTimeout(() => {\n                    this.initDevelopersChart();\n                    this.initUsersChart();\n                    this.initInternetVsLLMChart();\n                    this.initCapexChart();\n                    this.initTechCostChart();\n                    this.initRevExpenseChart();\n                    this.initUSChinaLLMChart();\n                    this.initRobotsChart();\n                }, 500);\n            }\n            \n            initDevelopersChart() {\n                const chartEl = document.getElementById('chart1-chipmaker-devs');\n                if (!chartEl) return;\n                \n                const chart = echarts.init(chartEl);\n                chart.setOption({\n                    backgroundColor: 'transparent',\n                    textStyle: { color: '#E5E7EB', fontFamily: 'Inter, Noto Sans SC, sans-serif' },\n                    tooltip: { \n                        trigger: 'axis',\n                        backgroundColor: 'rgba(10, 10, 10, 0.85)',\n                        borderColor: '#E31937',\n                        borderWidth: 1,\n                        textStyle: { color: '#E5E7EB' }\n                    },\n                    xAxis: {\n                        type: 'category',\n                        data: ['2005', '2010', '2015', '2020', '2025'],\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF' },\n                        splitLine: { show: false }\n                    },\n                    yAxis: {\n                        type: 'value',\n                        name: '开发者 (百万)',\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF' },\n                        splitLine: { lineStyle: { color: 'rgba(255,255,255,0.1)' } }\n                    },\n                    grid: { left: '3%', right: '4%', bottom: '3%', containLabel: true },\n                    series: [{\n                        name: '开发者',\n                        type: 'line',\n                        smooth: 0.6,\n                        symbolSize: 10,\n                        data: [0.05, 0.5, 1.5, 3, 6],\n                        itemStyle: { color: '#E31937' },\n                        lineStyle: { \n                            color: '#E31937', \n                            width: 3,\n                            shadowColor: 'rgba(227, 25, 55, 0.5)',\n                            shadowBlur: 10\n                        },\n                        areaStyle: {\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                { offset: 0, color: 'rgba(227, 25, 55, 0.4)' },\n                                { offset: 1, color: 'rgba(227, 25, 55, 0.05)' }\n                            ])\n                        }\n                    }]\n                });\n                \n                window.addEventListener('resize', () => chart.resize());\n            }\n            \n            initUsersChart() {\n                const chartEl = document.getElementById('chart2-llm-users');\n                if (!chartEl) return;\n                \n                const chart = echarts.init(chartEl);\n                chart.setOption({\n                    backgroundColor: 'transparent',\n                    textStyle: { color: '#E5E7EB', fontFamily: 'Inter, Noto Sans SC, sans-serif' },\n                    tooltip: { \n                        trigger: 'axis',\n                        backgroundColor: 'rgba(10, 10, 10, 0.85)',\n                        borderColor: '#E31937',\n                        borderWidth: 1,\n                        textStyle: { color: '#E5E7EB' }\n                    },\n                    xAxis: {\n                        type: 'category',\n                        data: ['10/22', '04/23', '10/23', '04/24', '10/24', '4/25'],\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF' },\n                        splitLine: { show: false }\n                    },\n                    yAxis: {\n                        type: 'value',\n                        name: '周活跃用户 (百万)',\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF' },\n                        splitLine: { lineStyle: { color: 'rgba(255,255,255,0.1)' } }\n                    },\n                    grid: { left: '3%', right: '4%', bottom: '3%', containLabel: true },\n                    series: [{\n                        name: 'LLM 用户',\n                        type: 'line',\n                        smooth: 0.6,\n                        symbolSize: 10,\n                        data: [10, 100, 300, 500, 650, 800],\n                        itemStyle: { color: '#E31937' },\n                        lineStyle: { \n                            color: '#E31937', \n                            width: 3,\n                            shadowColor: 'rgba(227, 25, 55, 0.5)',\n                            shadowBlur: 10\n                        },\n                        areaStyle: {\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                { offset: 0, color: 'rgba(227, 25, 55, 0.4)' },\n                                { offset: 1, color: 'rgba(227, 25, 55, 0.05)' }\n                            ])\n                        }\n                    }]\n                });\n                \n                window.addEventListener('resize', () => chart.resize());\n            }\n            \n            initInternetVsLLMChart() {\n                const chartEl = document.getElementById('chart2-1-internet-vs-llm');\n                if (!chartEl) return;\n                \n                const chart = echarts.init(chartEl);\n                chart.setOption({\n                    backgroundColor: 'transparent',\n                    textStyle: { color: '#E5E7EB', fontFamily: 'Inter, Noto Sans SC, sans-serif' },\n                    tooltip: { \n                        trigger: 'axis',\n                        backgroundColor: 'rgba(10, 10, 10, 0.85)',\n                        borderColor: '#E31937',\n                        borderWidth: 1,\n                        textStyle: { color: '#E5E7EB' }\n                    },\n                    legend: { \n                        data: ['互联网', '头部LLM (美国)'],\n                        textStyle: { color: '#E5E7EB' },\n                        top: '5%'\n                    },\n                    xAxis: {\n                        type: 'value',\n                        name: '年限',\n                        max: 33,\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF' },\n                        splitLine: { lineStyle: { color: 'rgba(255,255,255,0.1)' } }\n                    },\n                    yAxis: {\n                        type: 'value',\n                        name: '北美以外用户占比 (%)',\n                        max: 100,\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF' },\n                        splitLine: { lineStyle: { color: 'rgba(255,255,255,0.1)' } }\n                    },\n                    grid: { left: '3%', right: '4%', bottom: '3%', containLabel: true },\n                    series: [\n                        {\n                            name: '互联网',\n                            type: 'line',\n                            smooth: true,\n                            data: [[1, 10], [10, 50], [23, 90], [33, 92]],\n                            itemStyle: { color: '#A0C5E8' },\n                            lineStyle: { width: 3 }\n                        },\n                        {\n                            name: '头部LLM (美国)',\n                            type: 'line',\n                            smooth: true,\n                            data: [[1, 20], [3, 90]],\n                            itemStyle: { color: '#E31937' },\n                            lineStyle: { width: 3 }\n                        }\n                    ]\n                });\n                \n                window.addEventListener('resize', () => chart.resize());\n            }\n            \n            initCapexChart() {\n                const chartEl = document.getElementById('chart2-2-big-six-capex');\n                if (!chartEl) return;\n                \n                const chart = echarts.init(chartEl);\n                chart.setOption({\n                    backgroundColor: 'transparent',\n                    textStyle: { color: '#E5E7EB', fontFamily: 'Inter, Noto Sans SC, sans-serif' },\n                    tooltip: { \n                        trigger: 'axis',\n                        backgroundColor: 'rgba(10, 10, 10, 0.85)',\n                        borderColor: '#E31937',\n                        borderWidth: 1,\n                        textStyle: { color: '#E5E7EB' }\n                    },\n                    xAxis: {\n                        type: 'category',\n                        data: ['2014', '2016', '2018', '2020', '2022', '2024'],\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF' },\n                        splitLine: { show: false }\n                    },\n                    yAxis: {\n                        type: 'value',\n                        name: '资本支出 ($B)',\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF' },\n                        splitLine: { lineStyle: { color: 'rgba(255,255,255,0.1)' } }\n                    },\n                    grid: { left: '3%', right: '4%', bottom: '3%', containLabel: true },\n                    series: [{\n                        name: '资本支出',\n                        type: 'bar',\n                        barWidth: '60%',\n                        data: [50, 80, 100, 130, 170, 212],\n                        itemStyle: {\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                { offset: 0, color: '#E31937' },\n                                { offset: 1, color: 'rgba(227, 25, 55, 0.4)' }\n                            ]),\n                            borderRadius: [5, 5, 0, 0],\n                            shadowColor: 'rgba(227, 25, 55, 0.5)',\n                            shadowBlur: 10\n                        }\n                    }]\n                });\n                \n                window.addEventListener('resize', () => chart.resize());\n            }\n            \n            initTechCostChart() {\n                const chartEl = document.getElementById('chart3-key-tech-cost');\n                if (!chartEl) return;\n                \n                const chart = echarts.init(chartEl);\n                chart.setOption({\n                    backgroundColor: 'transparent',\n                    textStyle: { color: '#E5E7EB', fontFamily: 'Inter, Noto Sans SC, sans-serif' },\n                    tooltip: { \n                        trigger: 'axis',\n                        backgroundColor: 'rgba(10, 10, 10, 0.85)',\n                        borderColor: '#E31937',\n                        borderWidth: 1,\n                        textStyle: { color: '#E5E7EB' }\n                    },\n                    legend: { \n                        data: ['电力', '计算机内存', 'AI 推理'],\n                        textStyle: { color: '#E5E7EB' },\n                        top: '5%'\n                    },\n                    xAxis: {\n                        type: 'value',\n                        name: '发布后年限',\n                        max: 72,\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF' },\n                        splitLine: { lineStyle: { color: 'rgba(255,255,255,0.1)' } }\n                    },\n                    yAxis: {\n                        type: 'log',\n                        name: '原始价格百分比 (对数)',\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF' },\n                        splitLine: { lineStyle: { color: 'rgba(255,255,255,0.1)' } }\n                    },\n                    grid: { left: '3%', right: '4%', bottom: '3%', containLabel: true },\n                    series: [\n                        {\n                            name: '电力',\n                            type: 'line',\n                            data: [[0, 100], [20, 70], [40, 40], [72, 25]],\n                            itemStyle: { color: '#A0C5E8' },\n                            lineStyle: { width: 2, type: 'dashed' }\n                        },\n                        {\n                            name: '计算机内存',\n                            type: 'line',\n                            data: [[0, 100], [10, 30], [20, 10], [30, 3]],\n                            itemStyle: { color: '#34D399' },\n                            lineStyle: { width: 2, type: 'dashed' }\n                        },\n                        {\n                            name: 'AI 推理',\n                            type: 'line',\n                            smooth: true,\n                            data: [[0, 100], [5, 10], [10, 1], [15, 0.1]],\n                            itemStyle: { color: '#E31937' },\n                            lineStyle: { \n                                width: 3,\n                                shadowColor: 'rgba(227, 25, 55, 0.5)',\n                                shadowBlur: 8\n                            }\n                        }\n                    ]\n                });\n                \n                window.addEventListener('resize', () => chart.resize());\n            }\n            \n            initRevExpenseChart() {\n                const chartEl = document.getElementById('chart4-llm-rev-expense');\n                if (!chartEl) return;\n                \n                const chart = echarts.init(chartEl);\n                chart.setOption({\n                    backgroundColor: 'transparent',\n                    textStyle: { color: '#E5E7EB', fontFamily: 'Inter, Noto Sans SC, sans-serif' },\n                    tooltip: { \n                        trigger: 'axis',\n                        backgroundColor: 'rgba(10, 10, 10, 0.85)',\n                        borderColor: '#E31937',\n                        borderWidth: 1,\n                        textStyle: { color: '#E5E7EB' }\n                    },\n                    legend: { \n                        data: ['收入', '计算支出'],\n                        textStyle: { color: '#E5E7EB' },\n                        top: '5%'\n                    },\n                    xAxis: {\n                        type: 'category',\n                        data: ['2022', '2023', '2024'],\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF' },\n                        splitLine: { show: false }\n                    },\n                    yAxis: {\n                        type: 'value',\n                        name: '金额 ($B)',\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF' },\n                        splitLine: { lineStyle: { color: 'rgba(255,255,255,0.1)' } }\n                    },\n                    grid: { left: '3%', right: '4%', bottom: '3%', containLabel: true },\n                    series: [\n                        {\n                            name: '收入',\n                            type: 'line',\n                            smooth: true,\n                            data: [0.1, 1.5, 3.7],\n                            itemStyle: { color: '#A0C5E8' },\n                            lineStyle: { width: 3, type: 'dashed' }\n                        },\n                        {\n                            name: '计算支出',\n                            type: 'line',\n                            smooth: true,\n                            data: [-0.5, -2, -5],\n                            itemStyle: { color: '#E31937' },\n                            lineStyle: { width: 3 }\n                        }\n                    ]\n                });\n                \n                window.addEventListener('resize', () => chart.resize());\n            }\n            \n            initUSChinaLLMChart() {\n                const chartEl = document.getElementById('chart5-us-china-llm-share');\n                if (!chartEl) return;\n                \n                const chart = echarts.init(chartEl);\n                chart.setOption({\n                    backgroundColor: 'transparent',\n                    textStyle: { color: '#E5E7EB', fontFamily: 'Inter, Noto Sans SC, sans-serif', fontSize: 10 },\n                    tooltip: { \n                        trigger: 'axis',\n                        backgroundColor: 'rgba(10, 10, 10, 0.85)',\n                        borderColor: '#E31937',\n                        borderWidth: 1,\n                        textStyle: { color: '#E5E7EB', fontSize: 11 }\n                    },\n                    legend: { \n                        data: ['美国LLM #1', '中国LLM', '美国LLM #2'],\n                        textStyle: { color: '#E5E7EB', fontSize: 10 },\n                        top: '3%'\n                    },\n                    xAxis: {\n                        type: 'category',\n                        data: ['24年2月', '25年3月', '25年4月'],\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF', fontSize: 10 },\n                        splitLine: { show: false }\n                    },\n                    yAxis: {\n                        type: 'value',\n                        name: '桌面用户份额 (%)',\n                        max: 80,\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF', fontSize: 10 },\n                        splitLine: { lineStyle: { color: 'rgba(255,255,255,0.1)' } },\n                        nameTextStyle: { fontSize: 10 }\n                    },\n                    grid: { left: '10%', right: '5%', bottom: '15%', top: '15%', containLabel: true },\n                    series: [\n                        {\n                            name: '美国LLM #1',\n                            type: 'bar',\n                            data: [75, 68, 60],\n                            itemStyle: { color: '#A0C5E8' }\n                        },\n                        {\n                            name: '中国LLM',\n                            type: 'bar',\n                            data: [0, 5, 10],\n                            itemStyle: { color: '#E31937' }\n                        },\n                        {\n                            name: '美国LLM #2',\n                            type: 'bar',\n                            data: [21, 18, 15],\n                            itemStyle: { color: '#6B7280' }\n                        }\n                    ]\n                });\n                \n                window.addEventListener('resize', () => chart.resize());\n            }\n            \n            initRobotsChart() {\n                const chartEl = document.getElementById('chart5-1-robots-installed');\n                if (!chartEl) return;\n                \n                const chart = echarts.init(chartEl);\n                chart.setOption({\n                    backgroundColor: 'transparent',\n                    textStyle: { color: '#E5E7EB', fontFamily: 'Inter, Noto Sans SC, sans-serif', fontSize: 10 },\n                    tooltip: { \n                        trigger: 'axis',\n                        backgroundColor: 'rgba(10, 10, 10, 0.85)',\n                        borderColor: '#E31937',\n                        borderWidth: 1,\n                        textStyle: { color: '#E5E7EB', fontSize: 11 }\n                    },\n                    legend: { \n                        data: ['中国', '其他地区', '美国'],\n                        textStyle: { color: '#E5E7EB', fontSize: 10 },\n                        top: '3%'\n                    },\n                    xAxis: {\n                        type: 'category',\n                        data: ['2014', '2017', '2020', '2023'],\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF', fontSize: 10 },\n                        splitLine: { show: false }\n                    },\n                    yAxis: {\n                        type: 'value',\n                        name: '工业机器人安装量 (千台)',\n                        axisLine: { lineStyle: { color: '#9CA3AF' } },\n                        axisLabel: { color: '#9CA3AF', fontSize: 10 },\n                        splitLine: { lineStyle: { color: 'rgba(255,255,255,0.1)' } },\n                        nameTextStyle: { fontSize: 10 }\n                    },\n                    grid: { left: '10%', right: '5%', bottom: '15%', top: '15%', containLabel: true },\n                    series: [\n                        {\n                            name: '中国',\n                            type: 'line',\n                            smooth: true,\n                            data: [50, 150, 220, 300],\n                            itemStyle: { color: '#E31937' },\n                            lineStyle: { width: 3 }\n                        },\n                        {\n                            name: '其他地区',\n                            type: 'line',\n                            smooth: true,\n                            data: [150, 180, 200, 250],\n                            itemStyle: { color: '#10B981' }\n                        },\n                        {\n                            name: '美国',\n                            type: 'line',\n                            smooth: true,\n                            data: [20, 28, 35, 40],\n                            itemStyle: { color: '#A0C5E8' }\n                        }\n                    ]\n                });\n                \n                window.addEventListener('resize', () => chart.resize());\n            }\n        }\n        \n        // 初始化演示控制器\n        document.addEventListener('DOMContentLoaded', () => {\n            new PresentationController();\n        });\n    </script>\n</body>\n</html>",
      "codeLang": "html"
    },
    {
      "description": "一个简洁专业的汇报PPT模板，采用浅色主题和现代设计风格。包含封面页、目录页、数据展示页、项目进度页、总结页等多种常用幻灯片布局。支持图表、图像和文本内容的灵活排版，适用于商务汇报、项目总结和数据分析等场景。易于定制主题色和内容。",
      "category": "business",
      "tags": [
        "幻灯片",
        "商务",
        "数据展示",
        "项目管理"
      ],
      "difficulty": "beginner",
      "title": "汇报PPT简洁版",
      "id": "reportdeck-simple",
      "code": "import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { LineChart, Line, BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar, AreaChart, Area } from 'recharts';\nimport { ArrowUp, ArrowDown, CheckCircle, Clock, XCircle, ChevronLeft, ChevronRight, LayoutList, Trophy, TrendingUp, Presentation, Lightbulb, HelpCircle, User, CalendarDays, Building2, Globe, Users, Target, BarChart2, DollarSign, Activity, FileText } from 'lucide-react';\nimport classNames from 'classnames';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// --- Type Definitions ---\n\ninterface Message {\n  role: 'system' | 'user' | 'assistant';\n  content: string;\n}\n\ninterface KPI {\n  label: string;\n  value: string;\n  change: number; // Percentage change\n  unit?: string;\n  icon: React.ElementType;\n}\n\ninterface ChartData {\n  name: string;\n  [key: string]: number | string;\n}\n\ninterface ProjectTask {\n  id: string;\n  name: string;\n  assignee: string;\n  dueDate: string;\n  status: 'completed' | 'in-progress' | 'delayed';\n  progress: number; // 0-100\n}\n\ninterface Milestone {\n  id: string;\n  date: string;\n  title: string;\n  description: string;\n}\n\ninterface SummaryPoint {\n  id: string;\n  title: string;\n  description: string;\n  icon: React.ElementType;\n}\n\ninterface TeamMember {\n  id: string;\n  name: string;\n  role: string;\n  avatar: string;\n  tasksCompleted: number;\n  contribution: number; // percentage\n}\n\ninterface PageProps {\n  isVisible: boolean;\n  onNavigate: (direction: 'prev' | 'next') => void;\n  currentPage: number;\n  totalPages: number;\n}\n\n// --- Constants & Data ---\n\nconst PRIMARY_COLOR = '#2C3E50'; // Dark Blue\nconst ACCENT_COLOR_ORANGE = '#FF9500'; // Orange\nconst ACCENT_COLOR_GREEN = '#34C759'; // Green\nconst ACCENT_COLOR_BLUE = '#007AFF'; // Apple Blue\nconst LIGHT_GRAY = '#F2F2F2';\nconst TEXT_COLOR_DARK = '#333333';\nconst TEXT_COLOR_LIGHT = '#FFFFFF';\n\nconst PAGE_TRANSITION_DURATION = 0.6; // seconds\n\nconst DUMMY_KPIS: KPI[] = [\n  { label: '总收入', value: '¥1.2M', change: 12.5, unit: '', icon: DollarSign },\n  { label: '项目完成率', value: '85%', change: 5.2, unit: '', icon: CheckCircle },\n  { label: '客户满意度', value: '4.8/5', change: 0.1, unit: '', icon: Users },\n  { label: '新增用户', value: '1,500', change: 20.0, unit: '', icon: User },\n];\n\nconst DUMMY_SALES_DATA_Q1: ChartData[] = [\n  { name: '一月', 销售额: 4000, 成本: 2400 },\n  { name: '二月', 销售额: 3000, 成本: 1398 },\n  { name: '三月', 销售额: 2000, 成本: 9800 },\n];\nconst DUMMY_SALES_DATA_Q2: ChartData[] = [\n  { name: '四月', 销售额: 2780, 成本: 3908 },\n  { name: '五月', 销售额: 1890, 成本: 4800 },\n  { name: '六月', 销售额: 2390, 成本: 3800 },\n];\n\nconst DUMMY_PRODUCT_DISTRIBUTION: ChartData[] = [\n  { name: '产品A', value: 400 },\n  { name: '产品B', value: 300 },\n  { name: '产品C', value: 300 },\n  { name: '产品D', value: 200 },\n];\nconst PIE_COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst DUMMY_USER_ACTIVITY: ChartData[] = [\n  { name: '周一', 活跃用户: 1200, 新注册: 200 },\n  { name: '周二', 活跃用户: 1500, 新注册: 250 },\n  { name: '周三', 活跃用户: 1300, 新注册: 180 },\n  { name: '周四', 活跃用户: 1700, 新注册: 300 },\n  { name: '周五', 活跃用户: 1600, 新注册: 220 },\n  { name: '周六', 活跃用户: 1000, 新注册: 150 },\n  { name: '周日', 活跃用户: 800, 新注册: 100 },\n];\n\nconst DUMMY_PROJECT_TASKS: ProjectTask[] = [\n  { id: 't1', name: '需求分析与原型设计', assignee: '张三', dueDate: '2024-03-15', status: 'completed', progress: 100 },\n  { id: 't2', name: '后端API开发', assignee: '李四', dueDate: '2024-04-30', status: 'in-progress', progress: 75 },\n  { id: 't3', name: '前端界面开发', assignee: '王五', dueDate: '2024-05-30', status: 'in-progress', progress: 50 },\n  { id: 't4', name: '数据库优化', assignee: '赵六', dueDate: '2024-04-20', status: 'delayed', progress: 90 },\n  { id: 't5', name: '系统集成测试', assignee: '陈七', dueDate: '2024-06-15', status: 'in-progress', progress: 20 },\n  { id: 't6', name: '用户验收测试 (UAT)', assignee: '张三', dueDate: '2024-07-01', status: 'in-progress', progress: 10 },\n];\n\nconst DUMMY_MILESTONES: Milestone[] = [\n  { id: 'm1', date: '2024-01-01', title: '项目启动', description: '项目正式启动，团队组建完成。' },\n  { id: 'm2', date: '2024-03-01', title: '原型评审', description: '完成高保真原型设计并进行内部评审。' },\n  { id: 'm3', date: '2024-05-01', title: '核心功能上线', description: '主要模块开发完成并部署到测试环境。' },\n  { id: 'm4', date: '2024-06-30', title: '项目结项', description: '完成所有开发、测试及文档工作。' },\n];\n\nconst DUMMY_SUMMARY_POINTS: SummaryPoint[] = [\n  { id: 's1', title: '核心成果回顾', description: '本季度在市场拓展和产品优化方面取得显著进展，用户增长超预期。', icon: Trophy },\n  { id: 's2', title: '经验总结', description: '跨部门协作效率有待提升，尤其是在需求沟通阶段需更紧密配合。', icon: Lightbulb },\n  { id: 's3', title: '未来规划', description: '下季度将重点发力新市场，并启动第二代产品研发，提升核心竞争力。', icon: TrendingUp },\n  { id: 's4', title: '行动计划', description: '制定详细的市场推广方案，组建第二代产品研发团队，明确里程碑。', icon: Presentation },\n];\n\nconst DUMMY_TEAM_MEMBERS: TeamMember[] = [\n  { id: 'tm1', name: '张三', role: '项目经理', avatar: 'https://api.dicebear.com/9.x/notionists/svg?seed=ZhangSan', tasksCompleted: 15, contribution: 25 },\n  { id: 'tm2', name: '李四', role: '后端开发', avatar: 'https://api.dicebear.com/9.x/notionists/svg?seed=LiSi', tasksCompleted: 12, contribution: 20 },\n  { id: 'tm3', name: '王五', role: '前端开发', avatar: 'https://api.dicebear.com/9.x/notionists/svg?seed=WangWu', tasksCompleted: 10, contribution: 20 },\n  { id: 'tm4', name: '赵六', role: '数据分析师', avatar: 'https://api.dicebear.com/9.x/notionists/svg?seed=ZhaoLiu', tasksCompleted: 8, contribution: 15 },\n  { id: 'tm5', name: '陈七', role: 'UI/UX设计师', avatar: 'https://api.dicebear.com/9.x/notionists/svg?seed=ChenQi', tasksCompleted: 7, contribution: 10 },\n];\n\n// --- Components ---\n\nconst PageWrapper: React.FC<React.PropsWithChildren<PageProps>> = ({ children, isVisible, onNavigate, currentPage, totalPages }) => {\n  return (\n    <AnimatePresence>\n      {isVisible && (\n        <motion.div\n          initial={{ opacity: 0, x: 100 }}\n          animate={{ opacity: 1, x: 0 }}\n          exit={{ opacity: 0, x: -100 }}\n          transition={{ duration: PAGE_TRANSITION_DURATION }}\n          className=\"absolute inset-0 w-full h-full bg-white flex flex-col items-center justify-center p-8 overflow-hidden\"\n        >\n          {children}\n          <div className=\"absolute bottom-4 left-4 right-4 flex justify-between items-center text-gray-500 text-sm z-50\">\n            <button\n              onClick={() => onNavigate('prev')}\n              disabled={currentPage === 0}\n              className=\"p-2 rounded-full bg-gray-100 hover:bg-gray-200 disabled:opacity-50 transition-colors\"\n              aria-label=\"Previous Page\"\n            >\n              <ChevronLeft size={20} />\n            </button>\n            <span>{currentPage + 1} / {totalPages}</span>\n            <button\n              onClick={() => onNavigate('next')}\n              disabled={currentPage === totalPages - 1}\n              className=\"p-2 rounded-full bg-gray-100 hover:bg-gray-200 disabled:opacity-50 transition-colors\"\n              aria-label=\"Next Page\"\n            >\n              <ChevronRight size={20} />\n            </button>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nconst CoverPage: React.FC<PageProps> = (props) => (\n  <PageWrapper {...props}>\n    <motion.div\n      initial={{ opacity: 0, y: -50 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ delay: 0.2, duration: 0.8, ease: \"easeOut\" }}\n      className=\"text-center\"\n    >\n      <h1 className=\"text-5xl md:text-6xl font-extrabold text-gray-900 mb-4 tracking-tight leading-tight\">\n        高级工作汇报\n      </h1>\n      <p className=\"text-2xl md:text-3xl text-gray-600 mb-8 font-light\">\n        2024 年第二季度业务进展与分析\n      </p>\n      <div className=\"flex flex-col items-center space-y-2 text-lg text-gray-700\">\n        <div className=\"flex items-center\">\n          <User className=\"mr-2 text-gray-500\" size={20} />\n          <span>汇报人: 张明</span>\n        </div>\n        <div className=\"flex items-center\">\n          <Building2 className=\"mr-2 text-gray-500\" size={20} />\n          <span>部门: 产品研发部</span>\n        </div>\n        <div className=\"flex items-center\">\n          <CalendarDays className=\"mr-2 text-gray-500\" size={20} />\n          <span>日期: 2024年7月20日</span>\n        </div>\n      </div>\n    </motion.div>\n    <motion.img\n      src=\"https://placehold.co/150x50/f0f0f0/333333?text=Your+Company+Logo\"\n      alt=\"Company Logo\"\n      className=\"absolute top-8 right-8\"\n      initial={{ opacity: 0, x: 50 }}\n      animate={{ opacity: 1, x: 0 }}\n      transition={{ delay: 0.5, duration: 0.8, ease: \"easeOut\" }}\n    />\n  </PageWrapper>\n);\n\ninterface TableOfContentsProps extends PageProps {\n  onSelectChapter: (index: number) => void;\n}\n\nconst TableOfContents: React.FC<TableOfContentsProps> = ({ isVisible, onNavigate, onSelectChapter, currentPage, totalPages }) => {\n  const chapters = [\n    { title: '封面页', pageIndex: 0 },\n    { title: '目录', pageIndex: 1 },\n    { title: '数据概览与分析', pageIndex: 2 },\n    { title: '市场表现洞察', pageIndex: 3 },\n    { title: '项目进展与里程碑', pageIndex: 4 },\n    { title: '团队绩效与贡献', pageIndex: 5 },\n    { title: '总结与展望', pageIndex: 6 },\n    { title: '问题与展望', pageIndex: 7 },\n  ];\n\n  return (\n    <PageWrapper isVisible={isVisible} onNavigate={onNavigate} currentPage={currentPage} totalPages={totalPages}>\n      <motion.h2\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ delay: 0.2, duration: 0.5 }}\n        className=\"text-4xl font-bold text-gray-800 mb-10\"\n      >\n        目录\n      </motion.h2>\n      <div className=\"w-full max-w-2xl\">\n        {chapters.map((chapter, index) => (\n          <motion.div\n            key={index}\n            initial={{ opacity: 0, x: -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.3 + index * 0.1, duration: 0.5 }}\n            className=\"mb-4\"\n          >\n            <button\n              onClick={() => onSelectChapter(chapter.pageIndex)}\n              className=\"flex items-center w-full text-left p-4 rounded-lg hover:bg-gray-100 transition-colors duration-300 group\"\n            >\n              <FileText className=\"mr-4 text-gray-500 group-hover:text-gray-700 transition-colors\" size={24} />\n              <span className=\"text-xl font-medium text-gray-700 group-hover:text-gray-900 transition-colors\">\n                {index + 1}. {chapter.title}\n              </span>\n            </button>\n          </motion.div>\n        ))}\n      </div>\n    </PageWrapper>\n  );\n};\n\nconst DataVisualizationPage: React.FC<PageProps> = (props) => {\n  const [activeTab, setActiveTab] = useState<'salesQ1' | 'salesQ2'>('salesQ1');\n  const salesData = activeTab === 'salesQ1' ? DUMMY_SALES_DATA_Q1 : DUMMY_SALES_DATA_Q2;\n\n  return (\n    <PageWrapper {...props}>\n      <motion.h2\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ delay: 0.2, duration: 0.5 }}\n        className=\"text-4xl font-bold text-gray-800 mb-8\"\n      >\n        数据概览与分析\n      </motion.h2>\n\n      {/* KPI Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 w-full max-w-6xl mb-10\">\n        {DUMMY_KPIS.map((kpi, index) => (\n          <motion.div\n            key={kpi.label}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.3 + index * 0.08, duration: 0.5 }}\n            className=\"bg-white p-6 rounded-xl shadow-lg border border-gray-100 flex flex-col items-center text-center\"\n          >\n            <kpi.icon className=\"text-blue-500 mb-3\" size={32} />\n            <p className=\"text-lg font-medium text-gray-500 mb-2\">{kpi.label}</p>\n            <h3 className=\"text-4xl font-bold text-gray-900 mb-2\">{kpi.value}</h3>\n            <div className={classNames(\n              \"flex items-center text-sm font-semibold\",\n              kpi.change >= 0 ? \"text-green-600\" : \"text-red-600\"\n            )}>\n              {kpi.change >= 0 ? <ArrowUp size={16} /> : <ArrowDown size={16} />}\n              <span className=\"ml-1\">{Math.abs(kpi.change).toFixed(1)}%</span>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n\n      {/* Charts */}\n      <div className=\"w-full max-w-6xl bg-white p-8 rounded-xl shadow-lg border border-gray-100\">\n        <div className=\"flex justify-center mb-6\">\n          <button\n            onClick={() => setActiveTab('salesQ1')}\n            className={classNames(\n              \"px-6 py-2 rounded-full text-lg font-medium transition-all duration-300\",\n              activeTab === 'salesQ1' ? `bg-[${PRIMARY_COLOR}] text-white shadow-md` : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"\n            )}\n          >\n            销售额趋势 (Q1)\n          </button>\n          <button\n            onClick={() => setActiveTab('salesQ2')}\n            className={classNames(\n              \"ml-4 px-6 py-2 rounded-full text-lg font-medium transition-all duration-300\",\n              activeTab === 'salesQ2' ? `bg-[${PRIMARY_COLOR}] text-white shadow-md` : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"\n            )}\n          >\n            销售额趋势 (Q2)\n          </button>\n        </div>\n\n        <motion.div\n          key={activeTab}\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"h-[400px] w-full\"\n        >\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart data={salesData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\" />\n              <XAxis dataKey=\"name\" stroke={TEXT_COLOR_DARK} />\n              <YAxis stroke={TEXT_COLOR_DARK} />\n              <Tooltip\n                contentStyle={{ backgroundColor: 'rgba(255,255,255,0.9)', border: '1px solid #ccc', borderRadius: '8px', boxShadow: '0 4px 12px rgba(0,0,0,0.1)' }}\n                labelStyle={{ color: PRIMARY_COLOR, fontWeight: 'bold' }}\n                itemStyle={{ color: TEXT_COLOR_DARK }}\n              />\n              <Legend />\n              <Bar dataKey=\"销售额\" fill={PRIMARY_COLOR} radius={[10, 10, 0, 0]} />\n              <Bar dataKey=\"成本\" fill={ACCENT_COLOR_ORANGE} radius={[10, 10, 0, 0]} />\n            </BarChart>\n          </ResponsiveContainer>\n        </motion.div>\n      </div>\n    </PageWrapper>\n  );\n};\n\nconst MarketPerformancePage: React.FC<PageProps> = (props) => (\n  <PageWrapper {...props}>\n    <motion.h2\n      initial={{ opacity: 0, y: -20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ delay: 0.2, duration: 0.5 }}\n      className=\"text-4xl font-bold text-gray-800 mb-8\"\n    >\n      市场表现洞察\n    </motion.h2>\n\n    <div className=\"w-full max-w-6xl grid grid-cols-1 lg:grid-cols-2 gap-8\">\n      {/* Product Distribution Pie Chart */}\n      <motion.div\n        initial={{ opacity: 0, scale: 0.9 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ delay: 0.3, duration: 0.6 }}\n        className=\"bg-white p-8 rounded-xl shadow-lg border border-gray-100 flex flex-col items-center\"\n      >\n        <h3 className=\"text-2xl font-semibold text-gray-800 mb-6 flex items-center\">\n          <Globe className=\"mr-3 text-gray-600\" size={24} />\n          产品市场分布\n        </h3>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <PieChart>\n            <Pie\n              data={DUMMY_PRODUCT_DISTRIBUTION}\n              cx=\"50%\"\n              cy=\"50%\"\n              labelLine={false}\n              outerRadius={120}\n              fill=\"#8884d8\"\n              dataKey=\"value\"\n              label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n              animationBegin={0}\n              animationDuration={800}\n              animationEasing=\"ease-out\"\n            >\n              {DUMMY_PRODUCT_DISTRIBUTION.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={PIE_COLORS[index % PIE_COLORS.length]} />\n              ))}\n            </Pie>\n            <Tooltip\n              contentStyle={{ backgroundColor: 'rgba(255,255,255,0.9)', border: '1px solid #ccc', borderRadius: '8px', boxShadow: '0 4px 12px rgba(0,0,0,0.1)' }}\n              labelStyle={{ color: PRIMARY_COLOR, fontWeight: 'bold' }}\n              itemStyle={{ color: TEXT_COLOR_DARK }}\n            />\n            <Legend />\n          </PieChart>\n        </ResponsiveContainer>\n      </motion.div>\n\n      {/* User Activity Area Chart */}\n      <motion.div\n        initial={{ opacity: 0, scale: 0.9 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ delay: 0.4, duration: 0.6 }}\n        className=\"bg-white p-8 rounded-xl shadow-lg border border-gray-100 flex flex-col items-center\"\n      >\n        <h3 className=\"text-2xl font-semibold text-gray-800 mb-6 flex items-center\">\n          <Activity className=\"mr-3 text-gray-600\" size={24} />\n          用户活跃度与新增趋势\n        </h3>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <AreaChart data={DUMMY_USER_ACTIVITY} margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\" />\n            <XAxis dataKey=\"name\" stroke={TEXT_COLOR_DARK} />\n            <YAxis stroke={TEXT_COLOR_DARK} />\n            <Tooltip\n              contentStyle={{ backgroundColor: 'rgba(255,255,255,0.9)', border: '1px solid #ccc', borderRadius: '8px', boxShadow: '0 4px 12px rgba(0,0,0,0.1)' }}\n              labelStyle={{ color: PRIMARY_COLOR, fontWeight: 'bold' }}\n              itemStyle={{ color: TEXT_COLOR_DARK }}\n            />\n            <Legend />\n            <Area type=\"monotone\" dataKey=\"活跃用户\" stroke={ACCENT_COLOR_BLUE} fillOpacity={1} fill=\"url(#colorUv)\" />\n            <Area type=\"monotone\" dataKey=\"新注册\" stroke={ACCENT_COLOR_GREEN} fillOpacity={1} fill=\"url(#colorPv)\" />\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={ACCENT_COLOR_BLUE} stopOpacity={0.8}/>\n                <stop offset=\"95%\" stopColor={ACCENT_COLOR_BLUE} stopOpacity={0}/>\n              </linearGradient>\n              <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={ACCENT_COLOR_GREEN} stopOpacity={0.8}/>\n                <stop offset=\"95%\" stopColor={ACCENT_COLOR_GREEN} stopOpacity={0}/>\n              </linearGradient>\n            </defs>\n          </AreaChart>\n        </ResponsiveContainer>\n      </motion.div>\n    </div>\n  </PageWrapper>\n);\n\nconst ProjectProgressPage: React.FC<PageProps> = (props) => {\n  return (\n    <PageWrapper {...props}>\n      <motion.h2\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ delay: 0.2, duration: 0.5 }}\n        className=\"text-4xl font-bold text-gray-800 mb-8\"\n      >\n        项目进展与里程碑\n      </motion.h2>\n\n      {/* Project Milestones Timeline */}\n      <div className=\"w-full max-w-6xl bg-white p-8 rounded-xl shadow-lg border border-gray-100 mb-10\">\n        <h3 className=\"text-2xl font-semibold text-gray-800 mb-6 flex items-center\">\n          <Clock className=\"mr-3 text-gray-600\" size={24} />\n          项目里程碑\n        </h3>\n        <div className=\"relative flex justify-between items-center py-4 px-2 overflow-x-auto pb-8\">\n          <div className=\"absolute top-1/2 left-0 right-0 h-1 bg-gray-200 z-0 transform -translate-y-1/2\"></div>\n          {DUMMY_MILESTONES.map((milestone, index) => (\n            <motion.div\n              key={milestone.id}\n              initial={{ opacity: 0, y: 50 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.3 + index * 0.15, duration: 0.6 }}\n              className=\"relative z-10 flex flex-col items-center flex-shrink-0 w-48 group cursor-pointer\"\n            >\n              <div className=\"w-6 h-6 rounded-full bg-blue-500 border-4 border-blue-200 group-hover:scale-125 transition-transform duration-300\"></div>\n              <div className=\"mt-4 text-center\">\n                <p className=\"text-sm text-gray-500 font-medium\">{milestone.date}</p>\n                <h4 className=\"text-lg font-semibold text-gray-800 mt-1 group-hover:text-blue-600 transition-colors\">{milestone.title}</h4>\n                <p className=\"text-sm text-gray-600 mt-1 max-w-[150px] truncate group-hover:whitespace-normal group-hover:overflow-visible group-hover:text-clip group-hover:bg-white group-hover:p-2 group-hover:rounded-md group-hover:shadow-md group-hover:z-20 absolute top-full left-1/2 -translate-x-1/2 translate-y-2 hidden group-hover:block transition-all duration-300\">{milestone.description}</p>\n              </div>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n\n      {/* Project Tasks */}\n      <div className=\"w-full max-w-6xl bg-white p-8 rounded-xl shadow-lg border border-gray-100\">\n        <h3 className=\"text-2xl font-semibold text-gray-800 mb-6 flex items-center\">\n          <LayoutList className=\"mr-3 text-gray-600\" size={24} />\n          任务列表\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {DUMMY_PROJECT_TASKS.map((task, index) => (\n            <motion.div\n              key={task.id}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.3 + index * 0.08, duration: 0.5 }}\n              className=\"bg-gray-50 p-6 rounded-lg shadow-sm border border-gray-200 flex flex-col justify-between\"\n            >\n              <div>\n                <h4 className=\"text-lg font-semibold text-gray-900 mb-2\">{task.name}</h4>\n                <p className=\"text-sm text-gray-600 mb-1\">负责人: {task.assignee}</p>\n                <p className=\"text-sm text-gray-600 mb-3\">截止日期: {task.dueDate}</p>\n              </div>\n              <div>\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"text-sm font-medium text-gray-700\">进度: {task.progress}%</span>\n                  <span className={classNames(\n                    \"text-xs font-semibold px-2 py-1 rounded-full\",\n                    task.status === 'completed' && \"bg-green-100 text-green-800\",\n                    task.status === 'in-progress' && \"bg-blue-100 text-blue-800\",\n                    task.status === 'delayed' && \"bg-red-100 text-red-800\"\n                  )}>\n                    {task.status === 'completed' && <CheckCircle size={14} className=\"inline-block mr-1\" />}\n                    {task.status === 'in-progress' && <Clock size={14} className=\"inline-block mr-1\" />}\n                    {task.status === 'delayed' && <XCircle size={14} className=\"inline-block mr-1\" />}\n                    {task.status === 'completed' ? '已完成' : task.status === 'in-progress' ? '进行中' : '已延期'}\n                  </span>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                  <motion.div\n                    className=\"bg-blue-600 h-2.5 rounded-full\"\n                    initial={{ width: 0 }}\n                    animate={{ width: `${task.progress}%` }}\n                    transition={{ duration: 1.5, ease: \"easeOut\" }}\n                  ></motion.div>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </PageWrapper>\n  );\n};\n\nconst TeamPerformancePage: React.FC<PageProps> = (props) => (\n  <PageWrapper {...props}>\n    <motion.h2\n      initial={{ opacity: 0, y: -20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ delay: 0.2, duration: 0.5 }}\n      className=\"text-4xl font-bold text-gray-800 mb-8\"\n    >\n      团队绩效与贡献\n    </motion.h2>\n\n    <div className=\"w-full max-w-6xl bg-white p-8 rounded-xl shadow-lg border border-gray-100\">\n      <h3 className=\"text-2xl font-semibold text-gray-800 mb-6 flex items-center\">\n        <Users className=\"mr-3 text-gray-600\" size={24} />\n        核心团队成员\n      </h3>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-6\">\n        {DUMMY_TEAM_MEMBERS.map((member, index) => (\n          <motion.div\n            key={member.id}\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.3 + index * 0.1, duration: 0.6 }}\n            className=\"bg-gray-50 p-6 rounded-lg shadow-sm border border-gray-200 flex flex-col items-center text-center\"\n          >\n            <motion.img\n              src={member.avatar}\n              alt={member.name}\n              className=\"w-24 h-24 rounded-full mb-4 object-cover border-4 border-blue-200\"\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 0.5 + index * 0.1, duration: 0.5, type: \"spring\", stiffness: 200 }}\n            />\n            <h4 className=\"text-xl font-semibold text-gray-900 mb-1\">{member.name}</h4>\n            <p className=\"text-md text-gray-600 mb-3\">{member.role}</p>\n            <div className=\"w-full text-left\">\n              <p className=\"text-sm text-gray-700 mb-1\">完成任务: <span className=\"font-bold text-blue-600\">{member.tasksCompleted}</span></p>\n              <div className=\"flex items-center text-sm text-gray-700\">\n                <span>贡献度:</span>\n                <div className=\"w-full bg-gray-200 rounded-full h-2.5 ml-2\">\n                  <motion.div\n                    className=\"bg-blue-600 h-2.5 rounded-full\"\n                    initial={{ width: 0 }}\n                    animate={{ width: `${member.contribution}%` }}\n                    transition={{ duration: 1.5, ease: \"easeOut\" }}\n                  ></motion.div>\n                </div>\n                <span className=\"ml-2 font-bold text-blue-600\">{member.contribution}%</span>\n              </div>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  </PageWrapper>\n);\n\nconst SummaryPage: React.FC<PageProps> = (props) => (\n  <PageWrapper {...props}>\n    <motion.h2\n      initial={{ opacity: 0, y: -20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ delay: 0.2, duration: 0.5 }}\n      className=\"text-4xl font-bold text-gray-800 mb-10\"\n    >\n      总结与展望\n    </motion.h2>\n\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 w-full max-w-5xl\">\n      {DUMMY_SUMMARY_POINTS.map((point, index) => (\n        <motion.div\n          key={point.id}\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.3 + index * 0.1, duration: 0.6 }}\n          className=\"bg-white p-8 rounded-xl shadow-lg border border-gray-100 flex items-start space-x-6 hover:shadow-xl transition-shadow duration-300 transform hover:-translate-y-1\"\n        >\n          <div className=\"flex-shrink-0 p-4 rounded-full bg-blue-100 text-blue-600\">\n            <point.icon size={36} />\n          </div>\n          <div>\n            <h3 className=\"text-2xl font-semibold text-gray-900 mb-3\">{point.title}</h3>\n            <p className=\"text-base text-gray-700 leading-relaxed\">{point.description}</p>\n          </div>\n        </motion.div>\n      ))}\n    </div>\n  </PageWrapper>\n);\n\nconst QandAPage: React.FC<PageProps> = (props) => {\n  const [question, setQuestion] = useState('');\n  const [response, setResponse] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [chatHistory, setChatHistory] = useState<Message[]>([]);\n\n  const handleAskLLM = async () => {\n    if (!question.trim()) {\n      toast.error('请输入您的问题！');\n      return;\n    }\n    setIsLoading(true);\n    setResponse('');\n    const userMessage: Message = { role: 'user', content: question };\n    const newChatHistory = [...chatHistory, userMessage];\n    setChatHistory(newChatHistory);\n\n    try {\n      if ((window as any).llm && (window as any).llm.stream) {\n        let fullResponse = '';\n        await (window as any).llm.stream(\n          newChatHistory,\n          (chunk: string) => {\n            fullResponse += chunk;\n            setResponse(fullResponse);\n          },\n          () => {\n            setChatHistory(prev => [...prev, { role: 'assistant', content: fullResponse }]);\n            setIsLoading(false);\n          },\n          (error: string) => {\n            toast.error(`LLM API Error: ${error}`);\n            setIsLoading(false);\n          }\n        );\n      } else {\n        toast.warn('LLM API 未初始化或不支持流式传输，尝试完整回复模式...');\n        // Fallback to complete if stream is not available\n        const res = await (window as any).llm?.complete(newChatHistory);\n        if (res?.content) {\n          setResponse(res.content);\n          setChatHistory(prev => [...prev, { role: 'assistant', content: res.content }]);\n        } else {\n          toast.error('LLM API 返回空内容或失败。');\n        }\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.error('Failed to call LLM API:', error);\n      toast.error('调用LLM API失败，请检查网络或API配置。');\n      setIsLoading(false);\n    } finally {\n      setQuestion(''); // Clear input after asking\n    }\n  };\n\n  return (\n    <PageWrapper {...props}>\n      <motion.h2\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ delay: 0.2, duration: 0.5 }}\n        className=\"text-4xl font-bold text-gray-800 mb-10\"\n      >\n        问题与展望\n      </motion.h2>\n\n      <div className=\"w-full max-w-4xl bg-white p-8 rounded-xl shadow-lg border border-gray-100 flex flex-col items-center\">\n        <div className=\"w-full mb-6\">\n          <h3 className=\"text-2xl font-semibold text-gray-800 mb-4 flex items-center\">\n            <HelpCircle className=\"mr-3 text-gray-600\" size={24} />\n            提问环节 (AI 辅助)\n          </h3>\n          <textarea\n            className=\"w-full p-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 resize-y min-h-[100px] text-gray-800\"\n            placeholder=\"请在此输入您的问题，例如：下季度市场拓展的具体计划是什么？\"\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n            rows={4}\n          ></textarea>\n          <motion.button\n            onClick={handleAskLLM}\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n            className={classNames(\n              \"mt-4 w-full py-3 rounded-lg text-white font-semibold text-lg transition-colors duration-300\",\n              isLoading ? \"bg-blue-400 cursor-not-allowed\" : \"bg-blue-600 hover:bg-blue-700\"\n            )}\n            disabled={isLoading}\n          >\n            {isLoading ? '思考中...' : '向 AI 提问'}\n          </motion.button>\n        </div>\n\n        {response && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n            className=\"w-full bg-gray-50 p-6 rounded-lg border border-gray-200 mt-6\"\n          >\n            <h4 className=\"text-xl font-semibold text-gray-800 mb-3\">AI 回复:</h4>\n            <p className=\"text-gray-700 leading-relaxed whitespace-pre-wrap\">{response}</p>\n          </motion.div>\n        )}\n      </div>\n\n      <motion.div\n        initial={{ opacity: 0, y: 50 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ delay: 0.6, duration: 0.8 }}\n        className=\"mt-12 text-center text-gray-600 text-xl font-medium\"\n      >\n        感谢您的聆听！\n      </motion.div>\n    </PageWrapper>\n  );\n};\n\n// --- Main Component ---\n\nconst AdvancedReportPresentation: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const totalPages = 8; // Cover, TOC, Data, Market, Progress, Team, Summary, Q&A\n\n  const handleNavigate = useCallback((direction: 'prev' | 'next') => {\n    setCurrentPage(prev => {\n      if (direction === 'next') {\n        return Math.min(prev + 1, totalPages - 1);\n      } else {\n        return Math.max(prev - 1, 0);\n      }\n    });\n  }, [totalPages]);\n\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    if (event.key === 'ArrowRight') {\n      handleNavigate('next');\n    } else if (event.key === 'ArrowLeft') {\n      handleNavigate('prev');\n    }\n  }, [handleNavigate]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  const renderPage = useCallback(() => {\n    switch (currentPage) {\n      case 0:\n        return <CoverPage isVisible={true} onNavigate={handleNavigate} currentPage={currentPage} totalPages={totalPages} />;\n      case 1:\n        return <TableOfContents isVisible={true} onNavigate={handleNavigate} onSelectChapter={setCurrentPage} currentPage={currentPage} totalPages={totalPages} />;\n      case 2:\n        return <DataVisualizationPage isVisible={true} onNavigate={handleNavigate} currentPage={currentPage} totalPages={totalPages} />;\n      case 3:\n        return <MarketPerformancePage isVisible={true} onNavigate={handleNavigate} currentPage={currentPage} totalPages={totalPages} />;\n      case 4:\n        return <ProjectProgressPage isVisible={true} onNavigate={handleNavigate} currentPage={currentPage} totalPages={totalPages} />;\n      case 5:\n        return <TeamPerformancePage isVisible={true} onNavigate={handleNavigate} currentPage={currentPage} totalPages={totalPages} />;\n      case 6:\n        return <SummaryPage isVisible={true} onNavigate={handleNavigate} currentPage={currentPage} totalPages={totalPages} />;\n      case 7:\n        return <QandAPage isVisible={true} onNavigate={handleNavigate} currentPage={currentPage} totalPages={totalPages} />;\n      default:\n        return null;\n    }\n  }, [currentPage, handleNavigate, totalPages]);\n\n  return (\n    <div\n      className=\"relative w-screen h-screen bg-gray-100 font-sans text-TEXT_COLOR_DARK overflow-hidden\"\n      style={{ backgroundColor: LIGHT_GRAY }}\n    >\n      <ToastContainer position=\"top-right\" autoClose={3000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\n      {renderPage()}\n    </div>\n  );\n};\n\nexport default AdvancedReportPresentation;",
      "codeLang": "tsx"
    },
    {
      "description": "基于DuPont分析法的企业财务数据可视化仪表板，专门用于分析公司财务绩效指标。支持多年度财务数据对比，包含净利润率、资产周转率、权益乘数等关键财务比率的交互式图表展示。采用Recharts图表库实现数据可视化，支持响应式设计和移动端适配。提供详细的财务数据表格、趋势分析图表，以及财务知识普及模块。界面采用专业的商务风格设计，深色主题提升用户专注度，适合财务分析师和企业管理层使用。",
      "category": "business",
      "tags": [
        "财务分析",
        "DuPont",
        "数据可视化",
        "图表",
        "仪表板"
      ],
      "difficulty": "intermediate",
      "title": "DuPont财务分析仪表板",
      "id": "dupontanalysis",
      "code": "import React, { useState, useEffect, useMemo } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar } from 'recharts';\nimport { AlertCircle, Info, Download, ChevronDown, ChevronRight, Check } from 'lucide-react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useMediaQuery } from 'react-responsive';\nimport * as math from 'mathjs'; // For potential future complex calculations\n\n// Helper function to simulate financial data\nconst generateFinancialData = (year: number) => {\n  const baseRevenue = 394328; // 2022 actual in millions\n  const baseNetIncome = 99803; // 2022 actual in millions\n  const baseAssets = 352755; // 2022 actual in millions\n  const baseEquity = 61000; // 2022 actual in millions (approx)\n\n  // Simulate growth\n  const revenueGrowthRate = 0.05; // 5% annual growth\n  const netIncomeGrowthRate = 0.06; // 6% annual growth\n  const assetsGrowthRate = 0.04; // 4% annual growth\n  const equityGrowthRate = 0.03; // 3% annual growth\n\n  const getVal = (base: number, rate: number, y: number) => base * Math.pow(1 + rate, y - 2022);\n\n  const revenue = getVal(baseRevenue, revenueGrowthRate, year);\n  const netIncome = getVal(baseNetIncome, netIncomeGrowthRate, year);\n  const totalAssets = getVal(baseAssets, assetsGrowthRate, year);\n  const totalEquity = getVal(baseEquity, equityGrowthRate, year);\n\n  // DuPont components\n  const netProfitMargin = netIncome / revenue;\n  const assetTurnover = revenue / totalAssets;\n  const equityMultiplier = totalAssets / totalEquity;\n  const roe = netProfitMargin * assetTurnover * equityMultiplier;\n\n  return {\n    year,\n    revenue: parseFloat(revenue.toFixed(2)),\n    netIncome: parseFloat(netIncome.toFixed(2)),\n    totalAssets: parseFloat(totalAssets.toFixed(2)),\n    totalEquity: parseFloat(totalEquity.toFixed(2)),\n    netProfitMargin: parseFloat(netProfitMargin.toFixed(4)),\n    assetTurnover: parseFloat(assetTurnover.toFixed(4)),\n    equityMultiplier: parseFloat(equityMultiplier.toFixed(4)),\n    roe: parseFloat(roe.toFixed(4)),\n  };\n};\n\ninterface FinancialData {\n  year: number;\n  revenue: number;\n  netIncome: number;\n  totalAssets: number;\n  totalEquity: number;\n  netProfitMargin: number;\n  assetTurnover: number;\n  equityMultiplier: number;\n  roe: number;\n}\n\nconst DuPontAnalysisDashboard: React.FC = () => {\n  const [selectedYear, setSelectedYear] = useState<number>(2023);\n  const [showInfoModal, setShowInfoModal] = useState<boolean>(false);\n  const [showToast, setShowToast] = useState<boolean>(false);\n  const [toastMessage, setToastMessage] = useState<string>('');\n  const [showNotification, setShowNotification] = useState<boolean>(false);\n  const [notificationMessage, setNotificationMessage] = useState<string>('');\n  const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\n\n  const financialData = useMemo(() => {\n    const data: FinancialData[] = [];\n    for (let year = 2022; year <= 2024; year++) {\n      data.push(generateFinancialData(year));\n    }\n    return data;\n  }, []);\n\n  const currentYearData = useMemo(() => {\n    return financialData.find(d => d.year === selectedYear);\n  }, [selectedYear, financialData]);\n\n  useEffect(() => {\n    if (showToast) {\n      const timer = setTimeout(() => setShowToast(false), 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [showToast]);\n\n  useEffect(() => {\n    if (showNotification) {\n      const timer = setTimeout(() => setShowNotification(false), 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [showNotification]);\n\n  const handleDownloadReport = () => {\n    setToastMessage('Generating report...');\n    setShowToast(true);\n    // Simulate API call or report generation\n    setTimeout(() => {\n      setToastMessage('Report downloaded successfully!');\n      setShowToast(true);\n      setNotificationMessage('Financial report for 2022-2024 is ready!');\n      setShowNotification(true);\n    }, 1500);\n  };\n\n  const years = [2022, 2023, 2024];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 to-black text-gray-100 p-4 sm:p-8 font-sans antialiased\">\n      {/* Header */}\n      <motion.header\n        initial={{ opacity: 0, y: -50 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n        className=\"flex flex-col sm:flex-row justify-between items-center mb-8 pb-4 border-b border-gray-700\"\n      >\n        <h1 className=\"text-3xl sm:text-4xl font-bold text-white tracking-tight mb-4 sm:mb-0\">\n          Apple Inc. DuPont Analysis\n        </h1>\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"relative inline-block text-left\">\n            <button\n              onClick={() => setShowInfoModal(true)}\n              className=\"inline-flex justify-center items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-gray-200 bg-gray-800 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 focus:ring-blue-500 transition duration-300\"\n            >\n              <Info className=\"mr-2 h-5 w-5\" />\n              What is DuPont?\n            </button>\n          </div>\n          <button\n            onClick={handleDownloadReport}\n            className=\"inline-flex justify-center items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-gray-200 bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 focus:ring-blue-500 transition duration-300\"\n          >\n            <Download className=\"mr-2 h-5 w-5\" />\n            Download Report\n          </button>\n        </div>\n      </motion.header>\n\n      {/* Year Selector and Overview */}\n      <motion.section\n        initial={{ opacity: 0, y: 50 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5, delay: 0.2 }}\n        className=\"mb-8 grid grid-cols-1 md:grid-cols-4 gap-6\"\n      >\n        <div className=\"md:col-span-1 bg-gray-800 p-6 rounded-xl shadow-lg border border-gray-700\">\n          <h2 className=\"text-xl font-semibold mb-4 text-white\">Select Year</h2>\n          <div className=\"flex flex-col space-y-3\">\n            {years.map((year) => (\n              <button\n                key={year}\n                onClick={() => setSelectedYear(year)}\n                className={`w-full py-2 px-4 rounded-lg text-lg font-medium transition duration-300 ${\n                  selectedYear === year\n                    ? 'bg-blue-600 text-white shadow-md'\n                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                }`}\n              >\n                {year}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {currentYearData && (\n          <motion.div\n            key={selectedYear} // Key for re-animation on year change\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"md:col-span-3 bg-gray-800 p-6 rounded-xl shadow-lg border border-gray-700\"\n          >\n            <h2 className=\"text-xl font-semibold mb-4 text-white\">\n              Financial Overview - {selectedYear}\n            </h2>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n              <div className=\"flex flex-col bg-gray-700 p-4 rounded-lg shadow-inner\">\n                <span className=\"text-sm text-gray-400\">Revenue (Millions)</span>\n                <span className=\"text-2xl font-bold text-emerald-400\">${currentYearData.revenue.toLocaleString()}</span>\n              </div>\n              <div className=\"flex flex-col bg-gray-700 p-4 rounded-lg shadow-inner\">\n                <span className=\"text-sm text-gray-400\">Net Income (Millions)</span>\n                <span className=\"text-2xl font-bold text-emerald-400\">${currentYearData.netIncome.toLocaleString()}</span>\n              </div>\n              <div className=\"flex flex-col bg-gray-700 p-4 rounded-lg shadow-inner\">\n                <span className=\"text-sm text-gray-400\">Total Assets (Millions)</span>\n                <span className=\"text-2xl font-bold text-amber-400\">${currentYearData.totalAssets.toLocaleString()}</span>\n              </div>\n              <div className=\"flex flex-col bg-gray-700 p-4 rounded-lg shadow-inner\">\n                <span className=\"text-sm text-gray-400\">Shareholder Equity (Millions)</span>\n                <span className=\"text-2xl font-bold text-red-400\">${currentYearData.totalEquity.toLocaleString()}</span>\n              </div>\n            </div>\n            <div className=\"mt-6\">\n              <h3 className=\"text-lg font-semibold text-white mb-2\">DuPont Components</h3>\n              <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n                <div className=\"flex flex-col bg-gray-700 p-4 rounded-lg shadow-inner\">\n                  <span className=\"text-sm text-gray-400\">Net Profit Margin</span>\n                  <span className=\"text-2xl font-bold text-blue-400\">{(currentYearData.netProfitMargin * 100).toFixed(2)}%</span>\n                </div>\n                <div className=\"flex flex-col bg-gray-700 p-4 rounded-lg shadow-inner\">\n                  <span className=\"text-sm text-gray-400\">Asset Turnover</span>\n                  <span className=\"text-2xl font-bold text-blue-400\">{currentYearData.assetTurnover.toFixed(2)}x</span>\n                </div>\n                <div className=\"flex flex-col bg-gray-700 p-4 rounded-lg shadow-inner\">\n                  <span className=\"text-sm text-gray-400\">Equity Multiplier</span>\n                  <span className=\"text-2xl font-bold text-blue-400\">{currentYearData.equityMultiplier.toFixed(2)}x</span>\n                </div>\n              </div>\n              <div className=\"mt-4 bg-gray-700 p-4 rounded-lg shadow-inner text-center\">\n                <span className=\"text-sm text-gray-400\">Return on Equity (ROE)</span>\n                <span className=\"block text-4xl font-extrabold text-purple-400 mt-1\">{(currentYearData.roe * 100).toFixed(2)}%</span>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </motion.section>\n\n      {/* Charts Section */}\n      <motion.section\n        initial={{ opacity: 0, y: 50 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5, delay: 0.4 }}\n        className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\"\n      >\n        <div className=\"bg-gray-800 p-6 rounded-xl shadow-lg border border-gray-700\">\n          <h2 className=\"text-xl font-semibold mb-4 text-white\">ROE Trend (2022-2024)</h2>\n          <ResponsiveContainer width=\"100%\" height={isMobile ? 250 : 350}>\n            <LineChart data={financialData} margin={{ top: 5, right: 20, left: 10, bottom: 5 }}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#4a4a4a\" />\n              <XAxis dataKey=\"year\" tick={{ fill: '#a0a0a0' }} />\n              <YAxis tickFormatter={(val) => `${(val * 100).toFixed(1)}%`} tick={{ fill: '#a0a0a0' }} />\n              <Tooltip\n                contentStyle={{ backgroundColor: '#333', border: 'none', borderRadius: '8px' }}\n                labelStyle={{ color: '#eee' }}\n                formatter={(value: number, name: string) => [`${(value * 100).toFixed(2)}%`, name]}\n              />\n              <Legend wrapperStyle={{ color: '#a0a0a0' }} />\n              <Line type=\"monotone\" dataKey=\"roe\" stroke=\"#8884d8\" strokeWidth={3} activeDot={{ r: 8 }} />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n\n        <div className=\"bg-gray-800 p-6 rounded-xl shadow-lg border border-gray-700\">\n          <h2 className=\"text-xl font-semibold mb-4 text-white\">DuPont Components Trend</h2>\n          <ResponsiveContainer width=\"100%\" height={isMobile ? 250 : 350}>\n            <BarChart data={financialData} margin={{ top: 5, right: 20, left: 10, bottom: 5 }}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#4a4a4a\" />\n              <XAxis dataKey=\"year\" tick={{ fill: '#a0a0a0' }} />\n              <YAxis tick={{ fill: '#a0a0a0' }} />\n              <Tooltip\n                contentStyle={{ backgroundColor: '#333', border: 'none', borderRadius: '8px' }}\n                labelStyle={{ color: '#eee' }}\n                formatter={(value: number, name: string) => {\n                  if (name === 'netProfitMargin') return [`${(value * 100).toFixed(2)}%`, 'Net Profit Margin'];\n                  if (name === 'assetTurnover') return [`${value.toFixed(2)}x`, 'Asset Turnover'];\n                  if (name === 'equityMultiplier') return [`${value.toFixed(2)}x`, 'Equity Multiplier'];\n                  return [value.toFixed(2), name];\n                }}\n              />\n              <Legend wrapperStyle={{ color: '#a0a0a0' }} />\n              <Bar dataKey=\"netProfitMargin\" fill=\"#82ca9d\" name=\"Net Profit Margin\" />\n              <Bar dataKey=\"assetTurnover\" fill=\"#ffc658\" name=\"Asset Turnover\" />\n              <Bar dataKey=\"equityMultiplier\" fill=\"#8dd1e1\" name=\"Equity Multiplier\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </motion.section>\n\n      {/* Detailed Data Table */}\n      <motion.section\n        initial={{ opacity: 0, y: 50 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5, delay: 0.6 }}\n        className=\"bg-gray-800 p-6 rounded-xl shadow-lg border border-gray-700 mb-8\"\n      >\n        <h2 className=\"text-xl font-semibold mb-4 text-white\">Detailed Financial Data</h2>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-700\">\n            <thead className=\"bg-gray-700\">\n              <tr>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                  Year\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                  Revenue (M)\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                  Net Income (M)\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                  Total Assets (M)\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                  Total Equity (M)\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                  Net Profit Margin\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                  Asset Turnover\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                  Equity Multiplier\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                  ROE\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-gray-800 divide-y divide-gray-700\">\n              {financialData.map((data) => (\n                <tr key={data.year} className=\"hover:bg-gray-700 transition-colors duration-200\">\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-100\">\n                    {data.year}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                    ${data.revenue.toLocaleString()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                    ${data.netIncome.toLocaleString()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                    ${data.totalAssets.toLocaleString()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                    ${data.totalEquity.toLocaleString()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-blue-400\">\n                    {(data.netProfitMargin * 100).toFixed(2)}%\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-blue-400\">\n                    {data.assetTurnover.toFixed(2)}x\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-blue-400\">\n                    {data.equityMultiplier.toFixed(2)}x\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-bold text-purple-400\">\n                    {(data.roe * 100).toFixed(2)}%\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </motion.section>\n\n      {/* Info Modal */}\n      <AnimatePresence>\n        {showInfoModal && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4\"\n            onClick={() => setShowInfoModal(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.9, y: 50 }}\n              animate={{ scale: 1, y: 0 }}\n              exit={{ scale: 0.9, y: 50 }}\n              transition={{ type: 'spring', damping: 20, stiffness: 300 }}\n              className=\"bg-gray-800 p-8 rounded-xl shadow-2xl max-w-2xl w-full border border-gray-700\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <h3 className=\"text-2xl font-bold text-white mb-4 flex items-center\">\n                <Info className=\"mr-2 h-6 w-6 text-blue-400\" />\n                What is DuPont Analysis?\n              </h3>\n              <div className=\"text-gray-300 space-y-4 text-sm sm:text-base\">\n                <p>\n                  The DuPont analysis is a framework for dissecting the return on equity (ROE) ratio into three key components:\n                </p>\n                <ul className=\"list-disc list-inside space-y-2\">\n                  <li>\n                    <span className=\"font-semibold text-blue-400\">Net Profit Margin:</span> Measures how much profit a company makes for every dollar of revenue. (Net Income / Revenue)\n                  </li>\n                  <li>\n                    <span className=\"font-semibold text-blue-400\">Asset Turnover:</span> Measures how efficiently a company uses its assets to generate revenue. (Revenue / Total Assets)\n                  </li>\n                  <li>\n                    <span className=\"font-semibold text-blue-400\">Equity Multiplier:</span> Measures the company's financial leverage. (Total Assets / Shareholder Equity)\n                  </li>\n                </ul>\n                <p>\n                  <span className=\"font-semibold text-purple-400\">ROE = Net Profit Margin × Asset Turnover × Equity Multiplier</span>\n                </p>\n                <p>\n                  This breakdown helps identify the drivers of a company's profitability and can reveal whether strong ROE is due to strong operations, efficient asset use, or high financial leverage.\n                </p>\n              </div>\n              <button\n                onClick={() => setShowInfoModal(false)}\n                className=\"mt-6 w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg transition duration-300\"\n              >\n                Got It!\n              </button>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Toast Notification */}\n      <AnimatePresence>\n        {showToast && (\n          <motion.div\n            initial={{ opacity: 0, y: 50, x: '-50%' }}\n            animate={{ opacity: 1, y: 0, x: '-50%' }}\n            exit={{ opacity: 0, y: 50 }}\n            className=\"fixed bottom-8 left-1/2 transform -translate-x-1/2 bg-gray-900 text-white px-6 py-3 rounded-full shadow-lg flex items-center space-x-2 z-50\"\n          >\n            <Check className=\"h-5 w-5 text-emerald-400\" />\n            <span>{toastMessage}</span>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Top-right Notification */}\n      <AnimatePresence>\n        {showNotification && (\n          <motion.div\n            initial={{ opacity: 0, x: 100 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: 100 }}\n            className=\"fixed top-8 right-8 bg-blue-600 text-white p-4 rounded-lg shadow-xl flex items-center space-x-3 z-50 max-w-sm\"\n          >\n            <Info className=\"h-6 w-6\" />\n            <div>\n              <h4 className=\"font-semibold\">New Notification</h4>\n              <p className=\"text-sm\">{notificationMessage}</p>\n            </div>\n            <button onClick={() => setShowNotification(false)} className=\"ml-auto text-white/80 hover:text-white\">\n              <X className=\"h-5 w-5\" />\n            </button>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default DuPontAnalysisDashboard;",
      "codeLang": "tsx"
    },
    {
      "description": " 一个使用Three.js和React构建的3D交互式粒子展示应用，包含动态参数调整和AI生成描述功能。",
      "category": "creative",
      "tags": [
        "3D",
        "创意",
        "交互",
        "粒子",
        "动画"
      ],
      "difficulty": "advanced",
      "id": "3d-interactive-showcase",
      "title": "3D太空粒子交互展示",
      "code": "import React, { useState, useEffect, useReducer, useRef, useCallback, useMemo } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Settings, X, Bot, Lightbulb } from 'lucide-react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\n// --- 类型定义 ---\ninterface SceneParameters {\n  particleCount: number;\n  animationSpeed: number;\n  colorOffset: number;\n  shapeComplexity: number;\n}\n\ntype Action =\n  | { type: 'SET_PARTICLE_COUNT'; payload: number }\n  | { type: 'SET_ANIMATION_SPEED'; payload: number }\n  | { type: 'SET_COLOR_OFFSET'; payload: number }\n  | { type: 'SET_SHAPE_COMPLEXITY'; payload: number };\n\ninterface ClaudeAPI {\n  complete: (prompt: string) => Promise<string>;\n  stream: (\n    prompt: string,\n    onChunk: (chunk: string) => void,\n    onComplete: () => void,\n    onError: (error: string) => void\n  ) => void;\n}\n\ndeclare global {\n  interface Window {\n    claude?: ClaudeAPI;\n  }\n}\n\n// --- 状态管理 ---\nconst initialState: SceneParameters = {\n  particleCount: 5000,\n  animationSpeed: 0.5,\n  colorOffset: 0.5,\n  shapeComplexity: 3,\n};\n\nconst sceneReducer = (state: SceneParameters, action: Action): SceneParameters => {\n  switch (action.type) {\n    case 'SET_PARTICLE_COUNT':\n      return { ...state, particleCount: action.payload };\n    case 'SET_ANIMATION_SPEED':\n      return { ...state, animationSpeed: action.payload };\n    case 'SET_COLOR_OFFSET':\n      return { ...state, colorOffset: action.payload };\n    case 'SET_SHAPE_COMPLEXITY':\n        return { ...state, shapeComplexity: action.payload };\n    default:\n      return state;\n  }\n};\n\n// --- 错误边界组件 ---\nclass ErrorBoundary extends React.Component<{ children: React.ReactNode }, { hasError: boolean }> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error(\"渲染时捕获到错误:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"w-full h-screen flex flex-col justify-center items-center bg-zinc-900 text-red-400\">\n          <h1 className=\"text-2xl font-bold mb-4\">应用出现错误</h1>\n          <p>很抱歉，渲染时发生未知问题。请刷新页面重试。</p>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\n// --- 主应用组件 ---\nconst Interactive3DShowcase: React.FC = () => {\n  const mountRef = useRef<HTMLDivElement>(null);\n  const [state, dispatch] = useReducer(sceneReducer, initialState);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadingProgress, setLoadingProgress] = useState(0);\n  const [isPanelOpen, setIsPanelOpen] = useState(false);\n  const [isAiModalOpen, setIsAiModalOpen] = useState(false);\n  const [aiDescription, setAiDescription] = useState('');\n  const [isAiLoading, setIsAiLoading] = useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setLoadingProgress(prev => {\n        if (prev >= 100) {\n          clearInterval(interval);\n          setTimeout(() => setIsLoading(false), 500);\n          return 100;\n        }\n        return prev + 1;\n      });\n    }, 20);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleGenerateDescription = useCallback(async () => {\n      if (!window.claude) {\n          setAiDescription(\"Claude AI (window.claude) 未找到。请确保相关API已正确加载。\");\n          setIsAiModalOpen(true);\n          return;\n      }\n      setIsAiModalOpen(true);\n      setIsAiLoading(true);\n      setAiDescription('');\n      try {\n          const prompt = `请用富有科技感和想象力的语言，描述一个由${state.particleCount}个粒子组成的星云、一个复杂度为${state.shapeComplexity}的多面体核心、以及动态追逐光影构成的赛博朋克风格三维动画场景。语言为中文。`;\n          const result = await window.claude.complete(prompt);\n          setAiDescription(result);\n      } catch (error) {\n          setAiDescription(`生成描述时发生错误: ${error instanceof Error ? error.message : '未知错误'}`);\n      } finally {\n          setIsAiLoading(false);\n      }\n  }, [state.particleCount, state.shapeComplexity]);\n\n  useEffect(() => {\n    if (isLoading || !mountRef.current) return;\n\n    const currentMount = mountRef.current;\n\n    // 场景\n    const scene = new THREE.Scene();\n\n    // 相机\n    const camera = new THREE.PerspectiveCamera(75, currentMount.clientWidth / currentMount.clientHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    // 渲染器\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    currentMount.appendChild(renderer.domElement);\n\n    // 轨道控制器\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.minDistance = 2;\n    controls.maxDistance = 20;\n\n    // 光源\n    const pointLight = new THREE.PointLight(0x00ffff, 2, 100);\n    scene.add(pointLight);\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.1);\n    scene.add(ambientLight);\n\n    // 核心几何体\n    let coreShape = new THREE.Mesh(\n        new THREE.IcosahedronGeometry(1, state.shapeComplexity),\n        new THREE.MeshStandardMaterial({\n            color: 0xeeeeee,\n            emissive: 0x00ffff,\n            emissiveIntensity: 0.2,\n            roughness: 0.3,\n            metalness: 0.8,\n            wireframe: true,\n        })\n    );\n    scene.add(coreShape);\n\n    // 粒子系统\n    let particleGeometry = new THREE.BufferGeometry();\n    let particleMaterial = new THREE.PointsMaterial({\n        size: 0.02,\n        vertexColors: true,\n        transparent: true,\n        opacity: 0.8,\n        blending: THREE.AdditiveBlending,\n    });\n    let particles = new THREE.Points(particleGeometry, particleMaterial);\n\n    const updateParticles = () => {\n      const vertices = [];\n      const colors = [];\n      const color = new THREE.Color();\n      for (let i = 0; i < state.particleCount; i++) {\n        const x = (Math.random() - 0.5) * 10;\n        const y = (Math.random() - 0.5) * 10;\n        const z = (Math.random() - 0.5) * 10;\n        vertices.push(x, y, z);\n        color.setHSL(state.colorOffset + 0.1 * (i / state.particleCount), 1.0, 0.5);\n        colors.push(color.r, color.g, color.b);\n      }\n      particleGeometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n      particleGeometry.setAttribute('color', new THREE.Float32BufferAttribute(colors, 3));\n      particleGeometry.attributes.position!.needsUpdate = true;\n      particleGeometry.attributes.color!.needsUpdate = true;\n    }\n    updateParticles();\n    scene.add(particles);\n\n    // 动画循环\n    const clock = new THREE.Clock();\n    let animationFrameId: number;\n    const animate = () => {\n      const elapsedTime = clock.getElapsedTime();\n      \n      coreShape.rotation.y = elapsedTime * 0.2 * state.animationSpeed;\n      coreShape.rotation.x = elapsedTime * 0.1 * state.animationSpeed;\n\n      particles.rotation.y = -elapsedTime * 0.05 * state.animationSpeed;\n\n      pointLight.position.x = Math.sin(elapsedTime * 0.7 * state.animationSpeed) * 3;\n      pointLight.position.y = Math.cos(elapsedTime * 0.5 * state.animationSpeed) * 3;\n      pointLight.position.z = Math.cos(elapsedTime * 0.3 * state.animationSpeed) * 3;\n\n      controls.update();\n      renderer.render(scene, camera);\n      animationFrameId = requestAnimationFrame(animate);\n    };\n    animate();\n\n    // 响应式处理\n    const handleResize = () => {\n      camera.aspect = currentMount.clientWidth / currentMount.clientHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n    };\n    window.addEventListener('resize', handleResize);\n    \n    // 依赖更新\n    const updateSceneFromState = () => {\n        scene.remove(coreShape);\n        coreShape.geometry.dispose();\n        coreShape.material.dispose();\n        coreShape = new THREE.Mesh(\n            new THREE.IcosahedronGeometry(1, Math.round(state.shapeComplexity)),\n             new THREE.MeshStandardMaterial({\n                color: 0xeeeeee,\n                emissive: 0x00ffff,\n                emissiveIntensity: 0.2,\n                roughness: 0.3,\n                metalness: 0.8,\n                wireframe: true,\n            })\n        );\n        scene.add(coreShape);\n        updateParticles();\n    }\n    updateSceneFromState();\n\n\n    // 清理函数\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n      window.removeEventListener('resize', handleResize);\n      if(currentMount && renderer.domElement){\n          currentMount.removeChild(renderer.domElement);\n      }\n      scene.traverse(object => {\n          if (object instanceof THREE.Mesh) {\n              object.geometry.dispose();\n              if (Array.isArray(object.material)) {\n                  object.material.forEach(material => material.dispose());\n              } else {\n                  object.material.dispose();\n              }\n          }\n      });\n      particleGeometry.dispose();\n      particleMaterial.dispose();\n      controls.dispose();\n    };\n  }, [isLoading, state]);\n\n  const Slider = ({ label, value, min, max, step, onChange, unit = '' }: { label: string, value: number, min: number, max: number, step: number, onChange: (e: React.ChangeEvent<HTMLInputElement>) => void, unit?: string }) => (\n    <div className=\"flex flex-col space-y-2\">\n      <div className=\"flex justify-between items-center text-sm\">\n        <label className=\"text-gray-300\">{label}</label>\n        <span className=\"text-cyan-400 font-mono\">{value.toFixed(unit ? 2 : 0)}{unit}</span>\n      </div>\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        step={step}\n        value={value}\n        onChange={onChange}\n        className=\"w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer accent-cyan-400\"\n      />\n    </div>\n  );\n\n  return (\n    <div className=\"w-full min-h-screen bg-[#050505] text-white font-sans overflow-hidden\">\n      <ErrorBoundary>\n        <AnimatePresence>\n          {isLoading && (\n            <motion.div\n              initial={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              transition={{ duration: 0.5 }}\n              className=\"absolute inset-0 z-50 flex flex-col items-center justify-center bg-[#050505]\"\n            >\n              <motion.div\n                className=\"w-16 h-16 border-4 border-t-4 border-gray-700 border-t-cyan-400 rounded-full\"\n                animate={{ rotate: 360 }}\n                transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n              />\n              <p className=\"mt-4 text-lg text-gray-300\">场景加载中...</p>\n              <p className=\"mt-2 text-2xl font-mono text-cyan-400\">{loadingProgress}%</p>\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        <div ref={mountRef} className=\"absolute inset-0 z-0\" />\n\n        <div className=\"absolute top-4 left-4 z-10\">\n          <h1 className=\"text-2xl md:text-3xl font-bold tracking-wider text-white\" style={{ textShadow: '0 0 10px #00ffff' }}>\n            交互式三维动画展示\n          </h1>\n          <p className=\"text-sm text-gray-400\">Cyberpunk A.D. 2077</p>\n        </div>\n        \n        <motion.button\n          whileHover={{ scale: 1.1, rotate: 15 }}\n          whileTap={{ scale: 0.9 }}\n          onClick={() => setIsPanelOpen(true)}\n          className=\"fixed bottom-4 right-4 z-20 p-3 bg-black/50 backdrop-blur-sm rounded-full text-cyan-400 shadow-lg shadow-cyan-500/20\"\n          aria-label=\"打开设置\"\n        >\n          <Settings size={24} />\n        </motion.button>\n        \n        <motion.button\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            onClick={handleGenerateDescription}\n            className=\"fixed bottom-20 right-4 z-20 p-3 bg-black/50 backdrop-blur-sm rounded-full text-cyan-400 shadow-lg shadow-cyan-500/20 flex items-center space-x-2\"\n            aria-label=\"生成场景描述\"\n        >\n            <Bot size={24} />\n        </motion.button>\n\n        <AnimatePresence>\n          {isPanelOpen && (\n            <motion.div\n              initial={{ x: '100%' }}\n              animate={{ x: 0 }}\n              exit={{ x: '100%' }}\n              transition={{ type: 'spring', stiffness: 300, damping: 30 }}\n              className=\"fixed top-0 right-0 h-full w-full max-w-sm z-30 bg-black/70 backdrop-blur-md shadow-2xl shadow-cyan-900/50 p-6 flex flex-col\"\n            >\n              <div className=\"flex justify-between items-center mb-6\">\n                <h2 className=\"text-xl font-semibold text-cyan-400\">控制面板</h2>\n                <motion.button whileHover={{ scale: 1.2 }} whileTap={{ scale: 0.9 }} onClick={() => setIsPanelOpen(false)}>\n                  <X size={24} className=\"text-gray-400 hover:text-white transition-colors\" />\n                </motion.button>\n              </div>\n              <div className=\"flex-grow space-y-6 overflow-y-auto pr-2\">\n                <Slider\n                  label=\"粒子数量\"\n                  value={state.particleCount}\n                  min={1000}\n                  max={20000}\n                  step={100}\n                  onChange={(e) => dispatch({ type: 'SET_PARTICLE_COUNT', payload: Number(e.target.value) })}\n                />\n                <Slider\n                  label=\"动画速度\"\n                  value={state.animationSpeed}\n                  min={0.1}\n                  max={2}\n                  step={0.05}\n                  unit=\"x\"\n                  onChange={(e) => dispatch({ type: 'SET_ANIMATION_SPEED', payload: Number(e.target.value) })}\n                />\n                <Slider\n                  label=\"色彩偏移\"\n                  value={state.colorOffset}\n                  min={0}\n                  max={1}\n                  step={0.01}\n                  onChange={(e) => dispatch({ type: 'SET_COLOR_OFFSET', payload: Number(e.target.value) })}\n                />\n                <Slider\n                  label=\"核心复杂度\"\n                  value={state.shapeComplexity}\n                  min={0}\n                  max={5}\n                  step={1}\n                  onChange={(e) => dispatch({ type: 'SET_SHAPE_COMPLEXITY', payload: Number(e.target.value) })}\n                />\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        <AnimatePresence>\n            {isAiModalOpen && (\n                <motion.div\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    className=\"fixed inset-0 z-40 bg-black/60 flex items-center justify-center p-4\"\n                    onClick={() => setIsAiModalOpen(false)}\n                >\n                    <motion.div\n                        initial={{ scale: 0.9, y: 20 }}\n                        animate={{ scale: 1, y: 0 }}\n                        exit={{ scale: 0.9, y: 20 }}\n                        className=\"bg-zinc-900 border border-cyan-500/30 rounded-lg shadow-2xl shadow-cyan-500/20 w-full max-w-lg p-6 text-gray-300\"\n                        onClick={(e) => e.stopPropagation()}\n                    >\n                        <div className=\"flex items-center space-x-3 mb-4\">\n                            <Lightbulb className=\"text-cyan-400\" size={24} />\n                            <h3 className=\"text-lg font-semibold text-cyan-400\">AI 场景解析</h3>\n                        </div>\n                        {isAiLoading ? (\n                            <div className=\"flex items-center justify-center h-24\">\n                                <motion.div\n                                    className=\"w-8 h-8 border-2 border-t-2 border-zinc-600 border-t-cyan-400 rounded-full\"\n                                    animate={{ rotate: 360 }}\n                                    transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n                                />\n                                <p className=\"ml-4\">思考中...</p>\n                            </div>\n                        ) : (\n                            <p className=\"text-sm leading-relaxed whitespace-pre-wrap\">{aiDescription}</p>\n                        )}\n                        <button\n                            onClick={() => setIsAiModalOpen(false)}\n                            className=\"mt-6 w-full py-2 bg-cyan-500/20 text-cyan-300 rounded-md hover:bg-cyan-500/30 transition-colors\"\n                        >\n                            关闭\n                        </button>\n                    </motion.div>\n                </motion.div>\n            )}\n        </AnimatePresence>\n\n      </ErrorBoundary>\n    </div>\n  );\n};\n\nexport default Interactive3DShowcase;",
      "codeLang": "tsx"
    },
    {
      "description": "一个功能完整的现代企业官网主页模板，采用React和Framer Motion构建。包含动态轮播Banner、服务展示、客户案例、联系表单等核心模块。具备响应式导航菜单、平滑滚动效果、视差动画和丰富的交互体验。支持移动端适配和深色主题设计，表单具备完整的验证和提交功能。页面加载流畅，动画效果精致，适用于科技公司、咨询服务、软件开发等行业。代码结构清晰，易于定制和扩展，是企业建站的理想选择。",
      "category": "design",
      "tags": [
        "企业官网",
        "主页模板",
        "响应式",
        "动画效果",
        "商务网站"
      ],
      "difficulty": "intermediate",
      "title": "现代企业官网主页",
      "id": "landingpage",
      "code": "import React, { useState, useEffect, FormEvent, FC, useRef } from 'react';\nimport { motion, AnimatePresence, useInView } from 'framer-motion';\nimport { \n    Menu, \n    X, \n    ChevronRight, \n    ChevronLeft, \n    Star, \n    User, \n    Mail, \n    Settings, \n    Share,\n    Lock,\n    AlertCircle,\n    Home\n} from 'lucide-react';\n\n// Helper component for sections that animate when they scroll into view\nconst AnimatedSection: FC<{ children: React.ReactNode; className?: string; id?: string }> = ({ children, className, id }) => {\n    const ref = useRef(null);\n    const isInView = useInView(ref, { once: true, amount: 0.2 });\n\n    return (\n        <motion.section\n            id={id}\n            ref={ref}\n            className={className}\n            initial={{ opacity: 0, y: 50 }}\n            animate={isInView ? { opacity: 1, y: 0 } : {}}\n            transition={{ duration: 0.8, ease: \"easeOut\" }}\n        >\n            {children}\n        </motion.section>\n    );\n};\n\n\n// Main Page Component\nconst CompanyHomePage: FC = () => {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const [notification, setNotification] = useState<{ message: string; type: 'success' | 'error' } | null>(null);\n\n    // Effect to apply smooth scrolling to the entire page\n    useEffect(() => {\n        document.documentElement.style.scrollBehavior = 'smooth';\n        return () => {\n            document.documentElement.style.scrollBehavior = 'auto';\n        };\n    }, []);\n\n    const showNotification = (message: string, type: 'success' | 'error') => {\n        setNotification({ message, type });\n        setTimeout(() => {\n            setNotification(null);\n        }, 5000);\n    };\n\n    // Data for various sections\n    const navLinks = [\n        { name: 'Home', href: '#home' },\n        { name: 'Services', href: '#services' },\n        { name: 'Clients', href: '#clients' },\n        { name: 'Contact', href: '#contact' },\n    ];\n\n    const heroSlides = [\n        {\n            title: \"Innovate Your Future\",\n            subtitle: \"We build cutting-edge software solutions that drive growth and efficiency for your business.\",\n            image: \"https://images.unsplash.com/photo-1522071820081-009f0129c71c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80\"\n        },\n        {\n            title: \"Data-Driven Decisions\",\n            subtitle: \"Unlock the power of your data with our advanced analytics and business intelligence platforms.\",\n            image: \"https://images.unsplash.com/photo-1551288049-bebda4e38f71?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80\"\n        },\n        {\n            title: \"Cloud-Native Excellence\",\n            subtitle: \"Leverage the scalability and reliability of the cloud with our expert migration and management services.\",\n            image: \"https://images.unsplash.com/photo-1510915228340-29c85a43dcfe?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80\"\n        }\n    ];\n\n    const services = [\n        { icon: <Settings className=\"w-10 h-10 text-indigo-400\" />, title: \"Software Development\", description: \"Custom software tailored to your specific business needs, from web apps to enterprise systems.\" },\n        { icon: <Share className=\"w-10 h-10 text-indigo-400\" />, title: \"Data Analytics\", description: \"Transforming raw data into actionable insights to help you make smarter decisions.\" },\n        { icon: <Lock className=\"w-10 h-10 text-indigo-400\" />, title: \"Cybersecurity\", description: \"Protecting your digital assets with robust security protocols and threat monitoring.\" },\n        { icon: <Home className=\"w-10 h-10 text-indigo-400\" />, title: \"Cloud Solutions\", description: \"Scalable and secure cloud infrastructure setup, migration, and management.\" },\n    ];\n    \n    const clients = [\n        { name: 'QuantumLeap' }, { name: 'Stellar Solutions' }, { name: 'Apex Industries' },\n        { name: 'Nexus Corp' }, { name: 'Zenith Dynamics' }, { name: 'FusionWorks' },\n        { name: 'NovaTech' }, { name: 'Infinity Labs' }\n    ];\n\n    // Sub-components for each section\n    const Header = () => {\n        const [isScrolled, setIsScrolled] = useState(false);\n\n        useEffect(() => {\n            const handleScroll = () => setIsScrolled(window.scrollY > 10);\n            window.addEventListener('scroll', handleScroll);\n            return () => window.removeEventListener('scroll', handleScroll);\n        }, []);\n\n        return (\n            <motion.header \n                className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${isScrolled ? 'bg-gray-900/80 backdrop-blur-lg shadow-lg' : 'bg-transparent'}`}\n                initial={{ y: -100 }} animate={{ y: 0 }} transition={{ duration: 0.5, ease: 'easeOut' }}\n            >\n                <div className=\"container mx-auto px-6 py-4 flex justify-between items-center\">\n                    <a href=\"#home\" className=\"text-2xl font-bold text-white flex items-center gap-2\">\n                        <motion.div animate={{ rotate: 360 }} transition={{ duration: 5, repeat: Infinity, ease: \"linear\" }}>\n                           <Star className=\"text-indigo-400\" />\n                        </motion.div>\n                        InnovateX\n                    </a>\n                    <nav className=\"hidden md:flex items-center space-x-8\">\n                        {navLinks.map(link => (\n                            <a key={link.name} href={link.href} className=\"text-gray-300 hover:text-indigo-400 transition-colors duration-300\">{link.name}</a>\n                        ))}\n                    </nav>\n                    <a href=\"#contact\" className=\"hidden md:inline-block bg-indigo-600 text-white py-2 px-6 rounded-full hover:bg-indigo-700 transition-all duration-300 transform hover:scale-105\">\n                        Get a Quote\n                    </a>\n                    <div className=\"md:hidden\">\n                        <button onClick={() => setIsMenuOpen(true)}><Menu className=\"w-6 h-6 text-white\" /></button>\n                    </div>\n                </div>\n                <AnimatePresence>\n                    {isMenuOpen && (\n                        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} className=\"fixed inset-0 bg-black/50 z-50 md:hidden\" onClick={() => setIsMenuOpen(false)}>\n                            <motion.div initial={{ x: '100%' }} animate={{ x: 0 }} exit={{ x: '100%' }} transition={{ type: 'spring', stiffness: 300, damping: 30 }} className=\"fixed top-0 right-0 h-full w-64 bg-gray-900 p-8\" onClick={(e) => e.stopPropagation()}>\n                                <button onClick={() => setIsMenuOpen(false)} className=\"absolute top-6 right-6\"><X className=\"w-6 h-6 text-white\" /></button>\n                                <nav className=\"flex flex-col space-y-8 mt-12\">\n                                    {navLinks.map(link => (\n                                        <a key={link.name} href={link.href} onClick={() => setIsMenuOpen(false)} className=\"text-xl text-gray-300 hover:text-indigo-400 transition-colors\">{link.name}</a>\n                                    ))}\n                                    <a href=\"#contact\" onClick={() => setIsMenuOpen(false)} className=\"mt-4 inline-block bg-indigo-600 text-white py-2 px-6 rounded-full hover:bg-indigo-700 transition-all\">Get a Quote</a>\n                                </nav>\n                            </motion.div>\n                        </motion.div>\n                    )}\n                </AnimatePresence>\n            </motion.header>\n        );\n    };\n    \n    const HeroCarousel = () => {\n        const [[page, direction], setPage] = useState([0, 0]);\n        const imageIndex = page % heroSlides.length;\n\n        const paginate = (newDirection: number) => {\n            setPage([page + newDirection, newDirection]);\n        };\n\n        useEffect(() => {\n            const slideInterval = setInterval(() => paginate(1), 5000);\n            return () => clearInterval(slideInterval);\n        }, [page]);\n\n        const variants = {\n            enter: (direction: number) => ({ x: direction > 0 ? '100%' : '-100%', opacity: 0 }),\n            center: { zIndex: 1, x: 0, opacity: 1 },\n            exit: (direction: number) => ({ zIndex: 0, x: direction < 0 ? '100%' : '-100%', opacity: 0 })\n        };\n\n        return (\n            <section id=\"home\" className=\"relative h-screen w-full flex items-center justify-center overflow-hidden bg-gray-900\">\n                <AnimatePresence initial={false} custom={direction}>\n                    <motion.div key={page} custom={direction} variants={variants} initial=\"enter\" animate=\"center\" exit=\"exit\" transition={{ x: { type: \"spring\", stiffness: 300, damping: 30 }, opacity: { duration: 0.5 } }} className=\"absolute w-full h-full\">\n                        <div className=\"absolute inset-0 bg-black opacity-50 z-10\"></div>\n                        <img src={heroSlides[imageIndex].image} alt={heroSlides[imageIndex].title} className=\"w-full h-full object-cover\" />\n                        <div className=\"absolute inset-0 z-20 flex flex-col justify-center items-center text-center text-white p-6\">\n                            <motion.h1 className=\"text-4xl md:text-7xl font-extrabold mb-4 drop-shadow-lg\" initial={{ opacity: 0, y: -50 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.8, delay: 0.3, ease: 'easeOut' }}>\n                                {heroSlides[imageIndex].title}\n                            </motion.h1>\n                            <motion.p className=\"text-lg md:text-2xl max-w-3xl mb-8 drop-shadow-md\" initial={{ opacity: 0, y: 50 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.8, delay: 0.5, ease: 'easeOut' }}>\n                                {heroSlides[imageIndex].subtitle}\n                            </motion.p>\n                            <motion.a href=\"#services\" className=\"bg-indigo-600 text-white py-3 px-8 rounded-full text-lg font-semibold hover:bg-indigo-700 transition-all duration-300 transform hover:scale-105 shadow-lg\" initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} transition={{ duration: 0.5, delay: 0.7, ease: 'backOut' }}>\n                                Explore Services\n                            </motion.a>\n                        </div>\n                    </motion.div>\n                </AnimatePresence>\n                <div className=\"absolute z-30 bottom-10 flex space-x-3\">\n                    {heroSlides.map((_, i) => (\n                        <button key={i} onClick={() => setPage([i, i > imageIndex ? 1 : -1])} className={`w-3 h-3 rounded-full transition-all duration-300 ${imageIndex === i ? 'bg-indigo-500 scale-125' : 'bg-gray-400'}`}></button>\n                    ))}\n                </div>\n                <button onClick={() => paginate(-1)} className=\"absolute left-4 md:left-10 top-1/2 -translate-y-1/2 z-30 bg-white/20 p-2 rounded-full hover:bg-white/40 transition-colors\"><ChevronLeft className=\"w-6 h-6 text-white\" /></button>\n                <button onClick={() => paginate(1)} className=\"absolute right-4 md:right-10 top-1/2 -translate-y-1/2 z-30 bg-white/20 p-2 rounded-full hover:bg-white/40 transition-colors\"><ChevronRight className=\"w-6 h-6 text-white\" /></button>\n            </section>\n        );\n    };\n\n    const ServicesSection = () => (\n        <AnimatedSection id=\"services\" className=\"py-20 bg-gray-900 text-white\">\n            <div className=\"container mx-auto px-6\">\n                <div className=\"text-center mb-16\">\n                    <h2 className=\"text-4xl md:text-5xl font-bold\">Our Core Services</h2>\n                    <p className=\"text-lg text-gray-400 mt-4 max-w-2xl mx-auto\">We offer a range of services designed to elevate your business in the digital age.</p>\n                </div>\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8\">\n                    {services.map((service, i) => (\n                        <motion.div key={service.title} className=\"bg-gray-800/50 p-8 rounded-xl shadow-lg border border-gray-700/50 transform transition-all duration-500 hover:-translate-y-2 hover:shadow-indigo-500/20\" initial={{ opacity: 0, y: 50 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true, amount: 0.5 }} transition={{ duration: 0.5, delay: i * 0.1 }}>\n                            <div className=\"mb-6 bg-gray-700/50 w-16 h-16 rounded-full flex items-center justify-center\">{service.icon}</div>\n                            <h3 className=\"text-2xl font-semibold mb-3 text-white\">{service.title}</h3>\n                            <p className=\"text-gray-400\">{service.description}</p>\n                        </motion.div>\n                    ))}\n                </div>\n            </div>\n        </AnimatedSection>\n    );\n    \n    const ClientsSection = () => (\n        <AnimatedSection id=\"clients\" className=\"py-20 bg-gray-800\">\n            <div className=\"container mx-auto px-6 text-center\">\n                <h2 className=\"text-4xl font-bold text-white mb-4\">Trusted by Industry Leaders</h2>\n                <p className=\"text-lg text-gray-400 mb-12\">We are proud to partner with innovative companies across various sectors.</p>\n                <div className=\"relative overflow-hidden [mask-image:_linear-gradient(to_right,transparent_0,_black_128px,_black_calc(100%-128px),transparent_100%)]\">\n                    <motion.div className=\"flex space-x-16\" animate={{ x: ['0%', '-100%'] }} transition={{ ease: 'linear', duration: 30, repeat: Infinity }}>\n                        {[...clients, ...clients].map((client, i) => (\n                            <div key={i} className=\"flex-shrink-0 flex items-center justify-center h-20 w-48 text-gray-400 text-2xl font-bold grayscale opacity-60 hover:grayscale-0 hover:opacity-100 transition-all duration-300\">\n                                {client.name}\n                            </div>\n                        ))}\n                    </motion.div>\n                </div>\n            </div>\n        </AnimatedSection>\n    );\n\n    const ContactForm = () => {\n        const [formData, setFormData] = useState({ name: '', email: '', message: '' });\n        const [isSubmitting, setIsSubmitting] = useState(false);\n\n        const handleSubmit = (e: FormEvent) => {\n            e.preventDefault();\n            setIsSubmitting(true);\n            setTimeout(() => {\n                setIsSubmitting(false);\n                showNotification('Your message has been sent successfully!', 'success');\n                setFormData({ name: '', email: '', message: '' });\n            }, 2000);\n        };\n\n        return (\n            <AnimatedSection id=\"contact\" className=\"py-20 bg-gray-900\">\n                <div className=\"container mx-auto px-6\">\n                    <div className=\"lg:flex lg:items-center lg:justify-between\">\n                        <div className=\"lg:w-1/2 mb-12 lg:mb-0\">\n                            <h2 className=\"text-4xl md:text-5xl font-bold text-white\">Let's Build Something Great</h2>\n                            <p className=\"mt-4 text-lg text-gray-400\">Have a project in mind or just want to say hello? Drop us a line.</p>\n                            <div className=\"mt-8 space-y-4 text-gray-300\">\n                                <p className=\"flex items-center\"><Mail className=\"w-5 h-5 mr-3 text-indigo-400\" /> contact@innovatex.com</p>\n                                <p className=\"flex items-center\"><User className=\"w-5 h-5 mr-3 text-indigo-400\" /> 123 Innovation Drive, Tech City</p>\n                            </div>\n                        </div>\n                        <div className=\"lg:w-1/2\">\n                            <motion.form onSubmit={handleSubmit} className=\"bg-gray-800/50 p-8 rounded-xl shadow-lg border border-gray-700/50\" initial={{ opacity: 0, scale: 0.9 }} whileInView={{ opacity: 1, scale: 1 }} viewport={{ once: true, amount: 0.5 }} transition={{ duration: 0.6 }}>\n                                <div className=\"mb-6\"><label htmlFor=\"name\" className=\"block text-gray-400 mb-2\">Name</label><input type=\"text\" id=\"name\" value={formData.name} onChange={(e) => setFormData({...formData, name: e.target.value})} className=\"w-full bg-gray-700 text-white p-3 rounded-md border border-gray-600 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 outline-none transition-all\" required /></div>\n                                <div className=\"mb-6\"><label htmlFor=\"email\" className=\"block text-gray-400 mb-2\">Email</label><input type=\"email\" id=\"email\" value={formData.email} onChange={(e) => setFormData({...formData, email: e.target.value})} className=\"w-full bg-gray-700 text-white p-3 rounded-md border border-gray-600 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 outline-none transition-all\" required /></div>\n                                <div className=\"mb-6\"><label htmlFor=\"message\" className=\"block text-gray-400 mb-2\">Message</label><textarea id=\"message\" rows={5} value={formData.message} onChange={(e) => setFormData({...formData, message: e.target.value})} className=\"w-full bg-gray-700 text-white p-3 rounded-md border border-gray-600 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 outline-none transition-all\" required></textarea></div>\n                                <motion.button type=\"submit\" disabled={isSubmitting} className=\"w-full bg-indigo-600 text-white py-3 px-6 rounded-full font-semibold hover:bg-indigo-700 transition-all duration-300 disabled:bg-indigo-400 disabled:cursor-not-allowed flex items-center justify-center\" whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n                                    {isSubmitting ? <motion.div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full\" animate={{ rotate: 360 }} transition={{ duration: 1, repeat: Infinity, ease: 'linear' }} /> : 'Send Message'}\n                                </motion.button>\n                            </motion.form>\n                        </div>\n                    </div>\n                </div>\n            </AnimatedSection>\n        );\n    };\n\n    const Footer = () => (\n        <footer className=\"bg-gray-900 border-t border-gray-800 text-gray-400\">\n            <div className=\"container mx-auto px-6 py-12\">\n                <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n                    <div><h3 className=\"text-xl font-bold text-white mb-4\">InnovateX</h3><p>Driving the future of technology, one solution at a time.</p></div>\n                    <div><h4 className=\"text-lg font-semibold text-white mb-4\">Quick Links</h4><ul className=\"space-y-2\">{navLinks.map(link => (<li key={link.name}><a href={link.href} className=\"hover:text-indigo-400 transition-colors\">{link.name}</a></li>))}</ul></div>\n                    <div><h4 className=\"text-lg font-semibold text-white mb-4\">Legal</h4><ul className=\"space-y-2\"><li><a href=\"#\" className=\"hover:text-indigo-400 transition-colors\">Privacy Policy</a></li><li><a href=\"#\" className=\"hover:text-indigo-400 transition-colors\">Terms of Service</a></li></ul></div>\n                    <div><h4 className=\"text-lg font-semibold text-white mb-4\">Connect</h4><div className=\"flex space-x-4\"><a href=\"#\" className=\"hover:text-indigo-400 transition-colors\"><User /></a><a href=\"#\" className=\"hover:text-indigo-400 transition-colors\"><Mail /></a><a href=\"#\" className=\"hover:text-indigo-400 transition-colors\"><Star /></a></div></div>\n                </div>\n                <div className=\"mt-12 pt-8 border-t border-gray-800 text-center\"><p>&copy; {new Date().getFullYear()} InnovateX. All Rights Reserved.</p></div>\n            </div>\n        </footer>\n    );\n    \n    const NotificationToast = () => (\n        <AnimatePresence>\n            {notification && (\n                <motion.div initial={{ opacity: 0, y: 50, scale: 0.3 }} animate={{ opacity: 1, y: 0, scale: 1 }} exit={{ opacity: 0, y: 20, scale: 0.5 }} transition={{ type: 'spring', stiffness: 200, damping: 20 }} className={`fixed bottom-5 right-5 z-50 flex items-center p-4 max-w-sm w-full rounded-lg shadow-lg text-white ${notification.type === 'success' ? 'bg-green-500' : 'bg-red-500'}`}>\n                    {notification.type === 'success' ? <Star className=\"w-6 h-6 mr-3\" /> : <AlertCircle className=\"w-6 h-6 mr-3\" />}\n                    <p className=\"flex-1\">{notification.message}</p>\n                    <button onClick={() => setNotification(null)} className=\"ml-4 p-1 rounded-full hover:bg-white/20\"><X className=\"w-5 h-5\" /></button>\n                </motion.div>\n            )}\n        </AnimatePresence>\n    );\n\n    return (\n        <div className=\"bg-gray-900 font-sans leading-normal tracking-tight\">\n            <Header />\n            <main>\n                <HeroCarousel />\n                <ServicesSection />\n                <ClientsSection />\n                <ContactForm />\n            </main>\n            <Footer />\n            <NotificationToast />\n        </div>\n    );\n};\n\nexport default CompanyHomePage;",
      "codeLang": "tsx"
    },
    {
      "description": "企业\"十五五\"数智化工作规划的交互式展示平台，采用HTML、CSS、JavaScript和Chart.js构建。包含战略总纲、工作重点、数智化转型路径、支撑体系等核心模块。具备时间轴展示、雷达图技术分析、手风琴式内容展开等丰富交互功能。界面设计专业大气，采用商务风格配色方案，支持响应式布局和移动端适配。适用于企业内部规划展示、管理层汇报、工作部门培训等场景，有效提升规划内容的可读性和理解度。",
      "category": "business",
      "tags": [
        "工作规划",
        "数智化",
        "企业管理",
        "交互式图表",
        "商务展示"
      ],
      "difficulty": "intermediate",
      "title": "工作规划交互式蓝图",
      "id": "preppt",
      "code": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>某公司“十五五”数智化工作规划交互式蓝图</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+SC:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\n    <!-- Chosen Palette: Calm Harmony Neutrals -->\n    <!-- Application Structure Plan: The application is designed as a single-page, thematic dashboard. This structure moves away from the linear format of the source report to provide a more intuitive and exploratory user experience. The key sections (Strategic Framework, Audit Priorities, Digital Transformation, Support Systems) are accessible via a sticky navigation bar, allowing users to either follow a logical flow or jump directly to their area of interest. This design was chosen to facilitate quick comprehension of the high-level strategy and deep dives into specific, interactive modules like the transformation roadmap and technology application chart, which are most relevant to a user focused on digital audit transformation. -->\n    <!-- Visualization & Content Choices: \n        - Strategic Framework: Goal is to inform. Presented as interactive cards (HTML/CSS/JS) with icons for quick recognition. Clicking reveals details, keeping the UI clean.\n        - Audit Priorities: Goal is to compare. An accordion (HTML/JS) structure is used to present traditional vs. emerging areas, preventing information overload.\n        - Digital Transformation Roadmap: Goal is to show change over time. A custom interactive timeline (HTML/CSS/JS) is more engaging than a static list. Clicking on a phase updates a content area, linking visual progress to detailed strategy.\n        - Key Technologies Application: Goal is to show relationships. A dynamic Radar Chart (Chart.js) was chosen to interactively display the applicability of key technologies across different audit domains. This is a powerful tool for a digital audit specialist to see the \"business + tech\" connection.\n        - Platform Architecture & Support Systems: Goal is to organize and inform. Styled divs and cards (HTML/Tailwind) are used to create clear, diagram-like layouts that are easy to digest. Hover interactions provide details on demand.\n    -->\n    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->\n    <style>\n        body {\n            font-family: 'Noto Sans SC', sans-serif;\n            background-color: #F8F7F4;\n            color: #333;\n        }\n        .nav-link {\n            transition: all 0.3s ease;\n            border-bottom: 2px solid transparent;\n        }\n        .nav-link:hover, .nav-link.active {\n            color: #0d9488;\n            border-bottom-color: #0d9488;\n        }\n        .section-card {\n            background-color: #ffffff;\n            border-radius: 12px;\n            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n            transition: all 0.3s ease;\n        }\n        .section-card:hover {\n             box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n        }\n        .timeline-item {\n            cursor: pointer;\n            transition: all 0.3s ease;\n        }\n        .timeline-item.active {\n            transform: translateY(-5px);\n            box-shadow: 0 0 20px rgba(13, 148, 136, 0.3);\n            border-color: #0d9488;\n        }\n        .chart-container {\n            position: relative;\n            width: 100%;\n            max-width: 500px;\n            margin-left: auto;\n            margin-right: auto;\n            height: 320px;\n            max-height: 400px;\n        }\n        @media (min-width: 768px) {\n            .chart-container {\n                height: 400px;\n            }\n        }\n        .accordion-content {\n            max-height: 0;\n            overflow: hidden;\n            transition: max-height 0.5s ease-out;\n        }\n        .accordion-button.open + .accordion-content {\n            max-height: 500px; \n        }\n    </style>\n</head>\n<body class=\"antialiased\">\n\n    <header class=\"bg-white/80 backdrop-blur-md shadow-sm sticky top-0 z-50\">\n        <nav class=\"container mx-auto px-4 py-3 flex justify-between items-center\">\n            <div class=\"text-2xl font-bold text-gray-800\">\n                <span class=\"text-teal-600\">工作</span><span class=\"text-gray-700\">数智化蓝图</span>\n            </div>\n            <div class=\"hidden md:flex space-x-6\">\n                <a href=\"#framework\" class=\"nav-link font-medium text-gray-600 pb-1\">战略总纲</a>\n                <a href=\"#priorities\" class=\"nav-link font-medium text-gray-600 pb-1\">工作重点</a>\n                <a href=\"#transformation\" class=\"nav-link font-medium text-gray-600 pb-1\">数智化转型</a>\n                <a href=\"#support\" class=\"nav-link font-medium text-gray-600 pb-1\">支撑体系</a>\n            </div>\n             <div class=\"md:hidden\">\n                <select id=\"mobile-nav\" class=\"bg-white border border-gray-300 text-gray-700 py-2 px-3 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-teal-500\">\n                    <option value=\"#framework\">战略总纲</option>\n                    <option value=\"#priorities\">工作重点</option>\n                    <option value=\"#transformation\">数智化转型</option>\n                    <option value=\"#support\">支撑体系</option>\n                </select>\n            </div>\n        </nav>\n    </header>\n\n    <main class=\"container mx-auto px-4 py-8 md:py-12\">\n        <section class=\"text-center mb-16\">\n            <h1 class=\"text-4xl md:text-5xl font-bold text-gray-800 mb-4\">某公司“十五五”工作规划</h1>\n            <p class=\"text-lg md:text-xl text-gray-600 max-w-3xl mx-auto\">一个融合国家战略、聚焦风险防范、以数智化为驱动的现代化工作监督体系</p>\n        </section>\n\n        <section id=\"framework\" class=\"mb-16 scroll-mt-20\">\n            <h2 class=\"text-3xl font-bold text-center mb-2 text-gray-800\">战略总纲</h2>\n            <p class=\"text-center text-gray-500 mb-10\">确立“十五五”工作的行为准则与核心定位。</p>\n            <div class=\"grid md:grid-cols-2 lg:grid-cols-5 gap-6\">\n                <!-- Data will be populated by JS -->\n            </div>\n        </section>\n\n        <section id=\"priorities\" class=\"mb-16 scroll-mt-20\">\n            <h2 class=\"text-3xl font-bold text-center mb-2 text-gray-800\">工作监督重点领域</h2>\n             <p class=\"text-center text-gray-500 mb-10\">从传统优势领域到新兴战略疆域的全面覆盖。</p>\n            <div class=\"max-w-4xl mx-auto bg-white p-6 rounded-xl shadow-md\">\n                 <!-- Accordions will be populated by JS -->\n            </div>\n        </section>\n\n        <section id=\"transformation\" class=\"mb-16 scroll-mt-20\">\n            <h2 class=\"text-3xl font-bold text-center mb-2 text-gray-800\">数智化转型：战略、路径与核心技术</h2>\n             <p class=\"text-center text-gray-500 mb-10\">构建从自动化到智能化的智慧工作体系。</p>\n            \n            <div class=\"section-card p-6 md:p-8 mb-12\">\n                <h3 class=\"text-2xl font-bold text-center mb-8\">三阶段实施路径图</h3>\n                <div id=\"timeline-container\" class=\"relative\">\n                    <div class=\"hidden md:block absolute top-1/2 left-0 w-full h-1 bg-gray-200\" style=\"transform: translateY(-50%);\"></div>\n                    <div class=\"grid md:grid-cols-3 gap-8 relative\">\n                        <!-- Timeline items will be populated by JS -->\n                    </div>\n                </div>\n                <div id=\"timeline-content\" class=\"mt-8 p-6 bg-teal-50/50 rounded-lg min-h-[150px]\">\n                    <!-- Timeline content will be updated by JS -->\n                </div>\n            </div>\n\n            <div class=\"grid lg:grid-cols-2 gap-8\">\n                <div class=\"section-card p-6 md:p-8\">\n                     <h3 class=\"text-2xl font-bold text-center mb-4\">关键技术应用</h3>\n                     <p class=\"text-center text-gray-500 mb-6\">选择工作领域，查看技术适用性。</p>\n                     <div class=\"mb-4 text-center\">\n                         <select id=\"tech-domain-selector\" class=\"w-full max-w-xs mx-auto bg-white border border-gray-300 text-gray-700 py-2 px-3 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-teal-500\">\n                             <!-- Options will be populated by JS -->\n                         </select>\n                     </div>\n                     <div class=\"chart-container\">\n                         <canvas id=\"techRadarChart\"></canvas>\n                     </div>\n                </div>\n                <div class=\"section-card p-6 md:p-8\">\n                     <h3 class=\"text-2xl font-bold text-center mb-8\">数智化工作平台核心模块</h3>\n                     <div id=\"platform-modules\" class=\"space-y-4\">\n                        <!-- Platform modules will be populated by JS -->\n                     </div>\n                </div>\n            </div>\n        </section>\n\n        <section id=\"support\" class=\"scroll-mt-20\">\n            <h2 class=\"text-3xl font-bold text-center mb-2 text-gray-800\">支撑体系建设</h2>\n            <p class=\"text-center text-gray-500 mb-10\">为数智化转型提供坚实的人才、组织与安全保障。</p>\n            <div id=\"support-systems\" class=\"grid md:grid-cols-3 gap-8\">\n                <!-- Support systems cards will be populated by JS -->\n            </div>\n        </section>\n\n    </main>\n\n    <footer class=\"bg-gray-800 text-white mt-16\">\n        <div class=\"container mx-auto px-4 py-6 text-center text-sm\">\n            <p>某公司“十五五”工作规划交互式蓝图</p>\n            <p class=\"text-gray-400 mt-1\">仅供内部规划与研讨使用</p>\n        </div>\n    </footer>\n\n<script>\ndocument.addEventListener('DOMContentLoaded', function () {\n    const data = {\n        framework: [\n            { icon: '🏛️', title: '坚持党的领导', description: '将党对工作的领导贯穿全过程和各环节，是根本政治原则。' },\n            { icon: '🌐', title: '坚持服务大局', description: '紧密围绕公司整体战略和国家宏观政策，确保工作监督与发展同频共振。' },\n            { icon: '⚖️', title: '坚持依法工作', description: '恪守工作权力边界，确保程序规范、取证合法、结论客观，维护工作权威。' },\n            { icon: '🎯', title: '坚持风险导向', description: '将有限工作资源优先配置于高风险领域，实现精准监督和有效预警。' },\n            { icon: '💡', title: '坚持创新发展', description: '主动拥抱数字化浪潮，应用现代信息技术，创新工作理念、技术和模式。' }\n        ],\n        priorities: {\n            traditional: [\n                { title: '重大政策与战略落实跟踪工作', content: '首要任务，聚焦公司在服务国家战略、国企改革、数字化转型等领域的执行进度与成效。' },\n                { title: '财务收支真实合法与效益工作', content: '看家本领，向“效益”维度纵深拓展，评价资金与项目使用效益。' },\n                { title: '领导干部经济责任工作', content: '强化干部管理监督，建立常态化轮审机制，结果与考核、任用、激励挂钩。' },\n                { title: '内部控制与全面风险管理工作', content: '评价公司治理、风险与合规（GRC）体系有效性，推动从“制度健全”到“风险可控”。' }\n            ],\n            emerging: [\n                { title: 'ESG工作', content: '主动介入环境、社会和治理领域，工作绿色发展战略、节能减排目标及信息披露真实性。' },\n                { title: '境外国有资产工作', content: '覆盖境外投资决策、项目运营、资金安全、合规经营和风险管控全链条。' },\n                { title: '供应链安全工作', content: '关注采购战略、供应商风险、关键物料保障及供应链整体韧性。' }\n            ]\n        },\n        transformation: {\n            timeline: [\n                { stage: '第一阶段', title: '基础建设与流程自动化', timeframe: '“十五五”初期', description: '核心任务是搭建工作数据中台，打通核心业务系统数据链路，夯实数据基础。同时规模化应用RPA，快速产生效益，建立业务部门信心。' },\n                { stage: '第二阶段', title: '分析驱动与洞察增强', timeframe: '“十五五”中期', description: '在数据中台之上，构建丰富的工作模型库，覆盖关键业务领域。开发交互式BI平台，实现“数据赋能”，让工作人员自助进行数据探索。' },\n                { stage: '第三阶段', title: '智能引领与持续监督', timeframe: '“十五五”后期', description: '全面部署基于AI/ML的智能模型，实现关键风险领域的持续监控和智能预警。工作模式从“定期体检”转变为“实时心电监护”，实现“防未病”。' }\n            ],\n            techData: {\n                labels: ['大数据分析', 'AI/ML', 'RPA'],\n                domains: {\n                    '财务与资金': [9, 8, 9],\n                    '采购与供应链': [9, 9, 7],\n                    '工程项目': [8, 7, 8],\n                    '人力资源': [8, 6, 7],\n                    'ESG与安全': [9, 8, 5]\n                }\n            },\n            platformModules: [\n                { title: '数据接入与治理', description: '提供强大的ETL工具，内置数据清洗、去重、标准化组件，确保数据质量。' },\n                { title: '工作建模与分析', description: '平台的“分析引擎”，提供低代码/无代码建模环境，内置丰富算法库。' },\n                { title: '持续监控与预警', description: '平台的“智能大脑”，7x24小时自动运行模型，实现从“人找问题”到“问题找人”。' },\n                { title: '可视化与报告', description: '集成BI工具，提供交互式仪表板，并开发报告自动化功能。' },\n                { title: '工作知识管理', description: '沉淀和管理工作模型、分析逻辑等“智慧资产”，实现知识复用与传承。' }\n            ]\n        },\n        support: [\n            { title: '人才队伍建设', icon: '👥', description: '打造“业务+技术”复合型工作团队，设立技术专家和工作管理双轨制职业发展路径。', details: '引进数据科学人才，内部培养数字化素养，激励考取CISA等证书。' },\n            { title: '组织与文化变革', icon: '🏢', description: '强化公司工作委员会的领导作用，由其亲自挂帅，统筹转型工作，协调跨部门资源。', details: '营造鼓励创新、宽容试错的文化氛围，将数字化创新成果纳入绩效考核。' },\n            { title: '安全与治理', icon: '🛡️', description: '构筑数字化工作的“安全底线”，建立贯穿数据全生命周期的安全治理体系。', details: '实行“4A”统一身份认证和权限管控，确保数据加密、访问可追溯。' }\n        ]\n    };\n\n    function populateFramework() {\n        const container = document.querySelector('#framework .grid');\n        let content = '';\n        data.framework.forEach(item => {\n            content += `\n                <div class=\"section-card p-6 text-center\">\n                    <div class=\"text-5xl mb-4\">${item.icon}</div>\n                    <h3 class=\"text-xl font-bold mb-2 text-gray-800\">${item.title}</h3>\n                    <p class=\"text-gray-600\">${item.description}</p>\n                </div>\n            `;\n        });\n        container.innerHTML = content;\n    }\n\n    function populatePriorities() {\n        const container = document.querySelector('#priorities .max-w-4xl');\n        let content = `\n            <div class=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                    <h4 class=\"text-xl font-semibold mb-4 text-center text-teal-700\">传统重点深化</h4>\n                    <div class=\"space-y-3\" id=\"traditional-priorities\"></div>\n                </div>\n                <div>\n                    <h4 class=\"text-xl font-semibold mb-4 text-center text-rose-700\">新兴战略领域</h4>\n                    <div class=\"space-y-3\" id=\"emerging-priorities\"></div>\n                </div>\n            </div>\n        `;\n        container.innerHTML = content;\n\n        const traditionalContainer = document.getElementById('traditional-priorities');\n        const emergingContainer = document.getElementById('emerging-priorities');\n        \n        data.priorities.traditional.forEach(item => {\n            traditionalContainer.innerHTML += createAccordionItem(item.title, item.content);\n        });\n        \n        data.priorities.emerging.forEach(item => {\n            emergingContainer.innerHTML += createAccordionItem(item.title, item.content, 'rose');\n        });\n\n        setupAccordions();\n    }\n    \n    function createAccordionItem(title, content, theme = 'teal') {\n        return `\n            <div class=\"border border-gray-200 rounded-lg\">\n                <button class=\"accordion-button w-full text-left p-4 font-medium text-gray-700 hover:bg-gray-50 flex justify-between items-center\">\n                    <span>${title}</span>\n                    <span class=\"transform transition-transform duration-300\">\n                        <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path></svg>\n                    </span>\n                </button>\n                <div class=\"accordion-content\">\n                    <p class=\"p-4 text-gray-600 border-t border-gray-200\">${content}</p>\n                </div>\n            </div>\n        `;\n    }\n\n    function setupAccordions() {\n        document.querySelectorAll('.accordion-button').forEach(button => {\n            button.addEventListener('click', () => {\n                const wasOpen = button.classList.contains('open');\n                document.querySelectorAll('.accordion-button').forEach(btn => {\n                    btn.classList.remove('open');\n                    btn.querySelector('span:last-child').classList.remove('rotate-180');\n                });\n                if(!wasOpen){\n                    button.classList.add('open');\n                    button.querySelector('span:last-child').classList.add('rotate-180');\n                }\n            });\n        });\n    }\n\n    function populateTransformation() {\n        const timelineContainer = document.querySelector('#timeline-container .grid');\n        data.transformation.timeline.forEach((item, index) => {\n            timelineContainer.innerHTML += `\n                <div class=\"timeline-item section-card p-4 border-2 border-transparent\" data-index=\"${index}\">\n                    <div class=\"flex items-center mb-2\">\n                        <span class=\"bg-teal-600 text-white rounded-full w-8 h-8 flex items-center justify-center font-bold mr-3\">${index + 1}</span>\n                        <div>\n                           <h4 class=\"font-bold text-lg\">${item.title}</h4>\n                           <p class=\"text-sm text-gray-500\">${item.timeframe}</p>\n                        </div>\n                    </div>\n                </div>\n            `;\n        });\n\n        const timelineContent = document.getElementById('timeline-content');\n        const timelineItems = document.querySelectorAll('.timeline-item');\n        \n        function updateTimelineContent(index) {\n            const item = data.transformation.timeline[index];\n            timelineContent.innerHTML = `\n                <h4 class=\"font-bold text-teal-700 text-lg mb-2\">${item.stage}: ${item.title}</h4>\n                <p class=\"text-gray-700\">${item.description}</p>\n            `;\n            timelineItems.forEach(el => el.classList.remove('active'));\n            timelineItems[index].classList.add('active');\n        }\n\n        timelineItems.forEach(item => {\n            item.addEventListener('click', () => {\n                updateTimelineContent(item.dataset.index);\n            });\n        });\n\n        updateTimelineContent(0);\n\n        const selector = document.getElementById('tech-domain-selector');\n        Object.keys(data.transformation.techData.domains).forEach(domain => {\n            selector.innerHTML += `<option value=\"${domain}\">${domain}</option>`;\n        });\n\n        const ctx = document.getElementById('techRadarChart').getContext('2d');\n        const radarChart = new Chart(ctx, {\n            type: 'radar',\n            data: {\n                labels: data.transformation.techData.labels,\n                datasets: [{\n                    label: '技术适用性',\n                    data: data.transformation.techData.domains[selector.value],\n                    backgroundColor: 'rgba(13, 148, 136, 0.2)',\n                    borderColor: 'rgb(13, 148, 136)',\n                    pointBackgroundColor: 'rgb(13, 148, 136)',\n                    pointBorderColor: '#fff',\n                    pointHoverBackgroundColor: '#fff',\n                    pointHoverBorderColor: 'rgb(13, 148, 136)'\n                }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                scales: {\n                    r: {\n                        angleLines: { color: 'rgba(0,0,0,0.1)' },\n                        grid: { color: 'rgba(0,0,0,0.1)' },\n                        pointLabels: { font: { size: 14 } },\n                        suggestedMin: 0,\n                        suggestedMax: 10\n                    }\n                },\n                plugins: {\n                    legend: {\n                        position: 'top',\n                    },\n                    tooltip: {\n                         callbacks: {\n                            label: function(context) {\n                                let label = context.dataset.label || '';\n                                if (label) {\n                                    label += ': ';\n                                }\n                                if (context.parsed.r !== null) {\n                                    label += context.parsed.r;\n                                }\n                                return label;\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        \n        selector.addEventListener('change', (e) => {\n            radarChart.data.datasets[0].data = data.transformation.techData.domains[e.target.value];\n            radarChart.data.datasets[0].label = `${e.target.value} 技术适用性`;\n            radarChart.update();\n        });\n        \n        const platformContainer = document.getElementById('platform-modules');\n        data.transformation.platformModules.forEach(item => {\n            platformContainer.innerHTML += `\n                <div class=\"p-4 bg-gray-50 rounded-lg hover:bg-teal-50/50 transition duration-300\">\n                    <h5 class=\"font-bold text-gray-800\">${item.title}</h5>\n                    <p class=\"text-sm text-gray-600\">${item.description}</p>\n                </div>\n            `;\n        });\n    }\n\n    function populateSupport() {\n        const container = document.getElementById('support-systems');\n        data.support.forEach(item => {\n            container.innerHTML += `\n                <div class=\"section-card p-6 text-center\">\n                    <div class=\"text-5xl mb-4\">${item.icon}</div>\n                    <h3 class=\"text-xl font-bold mb-2 text-gray-800\">${item.title}</h3>\n                    <p class=\"text-gray-600 mb-4\">${item.description}</p>\n                    <div class=\"p-3 bg-gray-100 rounded-md text-sm text-gray-500\">\n                       ${item.details}\n                    </div>\n                </div>\n            `;\n        });\n    }\n    \n    function setupSmoothScrolling() {\n        document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n            anchor.addEventListener('click', function (e) {\n                e.preventDefault();\n                document.querySelector(this.getAttribute('href')).scrollIntoView({\n                    behavior: 'smooth'\n                });\n            });\n        });\n\n        document.getElementById('mobile-nav').addEventListener('change', function(e) {\n             const targetId = e.target.value;\n             document.querySelector(targetId).scrollIntoView({ behavior: 'smooth' });\n        });\n    }\n\n    function setupActiveNav() {\n        const sections = document.querySelectorAll('section[id]');\n        const navLinks = document.querySelectorAll('.nav-link');\n        const mobileNav = document.getElementById('mobile-nav');\n\n        const observer = new IntersectionObserver((entries) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    const id = entry.target.id;\n                    navLinks.forEach(link => {\n                        link.classList.toggle('active', link.getAttribute('href') === `#${id}`);\n                    });\n                    mobileNav.value = `#${id}`;\n                }\n            });\n        }, { rootMargin: '-20% 0px -80% 0px', threshold: 0 });\n\n        sections.forEach(section => {\n            observer.observe(section);\n        });\n    }\n\n    populateFramework();\n    populatePriorities();\n    populateTransformation();\n    populateSupport();\n    setupSmoothScrolling();\n    setupActiveNav();\n});\n</script>\n\n</body>\n</html>",
      "codeLang": "html"
    },
    {
      "description": "一个现代化响应式网页模板，采用暗黑主题设计，适合技术类展示和演示文稿。",
      "category": "design",
      "tags": [
        "模板",
        "暗黑",
        "PPT",
        "现代",
        "技术",
        "演示"
      ],
      "difficulty": "intermediate",
      "title": "Slides模板-Tech暗黑",
      "id": "slides-tech-dark",
      "code": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"description\" content=\"现代化响应式网页模板\">\n    <meta name=\"keywords\" content=\"现代设计,响应式,暗黑主题\">\n    <meta name=\"author\" content=\"Your Name\">\n    <title>16:9 现代化模板</title>\n    \n    <!-- TailwindCSS -->\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <!-- Font Awesome -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css\">\n    \n    <script>\n        tailwind.config = {\n            theme: {\n                extend: {\n                    colors: {\n                        primary: '#E31937',\n                        'primary-light': 'rgba(227, 25, 55, 0.7)',\n                        'primary-lighter': 'rgba(227, 25, 55, 0.4)',\n                        dark: '#000000',\n                        'dark-secondary': '#111111',\n                        'dark-tertiary': '#1a1a1a',\n                    },\n                    animation: {\n                        'fade-in-up': 'fadeInUp 0.8s ease-out',\n                        'fade-in': 'fadeIn 0.6s ease-out',\n                        'slide-in-left': 'slideInLeft 0.8s ease-out',\n                        'slide-in-right': 'slideInRight 0.8s ease-out',\n                    },\n                    keyframes: {\n                        fadeInUp: {\n                            '0%': { opacity: '0', transform: 'translateY(30px)' },\n                            '100%': { opacity: '1', transform: 'translateY(0)' },\n                        },\n                        fadeIn: {\n                            '0%': { opacity: '0' },\n                            '100%': { opacity: '1' },\n                        },\n                        slideInLeft: {\n                            '0%': { opacity: '0', transform: 'translateX(-50px)' },\n                            '100%': { opacity: '1', transform: 'translateX(0)' },\n                        },\n                        slideInRight: {\n                            '0%': { opacity: '0', transform: 'translateX(50px)' },\n                            '100%': { opacity: '1', transform: 'translateX(0)' },\n                        }\n                    }\n                },\n                fontFamily: {\n                    sans: ['Inter', 'system-ui', 'sans-serif'],\n                }\n            }\n        }\n    </script>\n    \n    <style>\n        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');\n\n        /* 全局样式 */\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        html {\n            scroll-behavior: smooth;\n        }\n\n        body {\n            background-color: #000;\n            color: #fff;\n            overflow-x: hidden;\n        }\n\n        /* 16:9 页面容器系统 */\n        .page-container {\n            width: 100vw;\n            height: 100vh;\n            position: relative;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 2rem;\n        }\n\n        .content-area {\n            width: 100%;\n            max-width: 1400px;\n            height: 100%;\n            max-height: calc(100vh - 4rem);\n            aspect-ratio: 16/9;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            position: relative;\n        }\n\n        /* 移动端适配 */\n        @media (max-width: 768px) {\n            .page-container {\n                padding: 1rem;\n                height: auto;\n                min-height: 100vh;\n            }\n            \n            .content-area {\n                aspect-ratio: auto;\n                height: auto;\n                min-height: calc(100vh - 2rem);\n            }\n        }\n\n        @media (max-width: 480px) {\n            .page-container {\n                padding: 0.5rem;\n            }\n        }\n\n        /* 网格布局系统 */\n        .bento-grid {\n            display: grid;\n            grid-template-columns: repeat(12, 1fr);\n            gap: 1.5rem;\n            width: 100%;\n            height: 100%;\n        }\n\n        @media (max-width: 768px) {\n            .bento-grid {\n                gap: 1rem;\n                grid-template-rows: auto;\n            }\n        }\n\n        /* 动画系统 */\n        .reveal {\n            opacity: 0;\n            transform: translateY(30px);\n            transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n        }\n\n        .reveal.active {\n            opacity: 1;\n            transform: translateY(0);\n        }\n\n        .reveal-left {\n            opacity: 0;\n            transform: translateX(-50px);\n            transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n        }\n\n        .reveal-left.active {\n            opacity: 1;\n            transform: translateX(0);\n        }\n\n        .reveal-right {\n            opacity: 0;\n            transform: translateX(50px);\n            transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n        }\n\n        .reveal-right.active {\n            opacity: 1;\n            transform: translateX(0);\n        }\n\n        /* 高亮文本 */\n        .highlight-text {\n            background: linear-gradient(90deg, #E31937 0%, rgba(227, 25, 55, 0.7) 100%);\n            -webkit-background-clip: text;\n            background-clip: text;\n            color: transparent;\n            display: inline-block;\n        }\n\n        /* 分割线 */\n        .section-divider {\n            height: 1px;\n            background: linear-gradient(90deg, transparent, #E31937, transparent);\n            width: 100%;\n            position: absolute;\n            bottom: 0;\n            left: 0;\n        }\n\n        /* 卡片样式 */\n        .glass-card {\n            background: rgba(26, 26, 26, 0.7);\n            backdrop-filter: blur(10px);\n            border: 1px solid rgba(227, 25, 55, 0.2);\n            border-radius: 8px;\n            height: 100%;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n        }\n\n        .data-card {\n            border: 1px solid #E31937;\n            border-radius: 4px;\n            position: relative;\n            overflow: hidden;\n            background: linear-gradient(135deg, rgba(227, 25, 55, 0.05) 0%, transparent 50%);\n            height: 100%;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n        }\n\n        /* 导航样式 */\n        .nav-backdrop {\n            backdrop-filter: blur(20px);\n            background: rgba(0, 0, 0, 0.9);\n            border-bottom: 1px solid rgba(227, 25, 55, 0.2);\n        }\n\n        .nav-link {\n            position: relative;\n            transition: color 0.3s ease;\n            padding: 0.5rem 1rem;\n        }\n\n        .nav-link::after {\n            content: '';\n            position: absolute;\n            bottom: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            width: 0;\n            height: 2px;\n            background: #E31937;\n            transition: width 0.3s ease;\n        }\n\n        .nav-link:hover::after,\n        .nav-link.active::after {\n            width: 80%;\n        }\n\n        /* 按钮样式 */\n        .btn-primary {\n            background: transparent;\n            border: 2px solid #E31937;\n            color: #E31937;\n            padding: 0.75rem 2rem;\n            transition: all 0.3s ease;\n            text-transform: uppercase;\n            letter-spacing: 0.1em;\n            font-weight: 600;\n            cursor: pointer;\n            border-radius: 4px;\n        }\n\n        .btn-primary:hover {\n            background: #E31937;\n            color: #000;\n            transform: translateY(-2px);\n            box-shadow: 0 10px 20px rgba(227, 25, 55, 0.3);\n        }\n\n        /* 页面指示器 */\n        .page-indicator {\n            position: fixed;\n            right: 2rem;\n            top: 50%;\n            transform: translateY(-50%);\n            z-index: 30;\n            display: flex;\n            flex-direction: column;\n            gap: 0.5rem;\n        }\n\n        .page-indicator button {\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            border: 2px solid rgba(227, 25, 55, 0.5);\n            background: transparent;\n            transition: all 0.3s ease;\n            cursor: pointer;\n        }\n\n        .page-indicator button.active,\n        .page-indicator button:hover {\n            background: #E31937;\n            border-color: #E31937;\n        }\n\n        @media (max-width: 768px) {\n            .page-indicator {\n                right: 1rem;\n            }\n        }\n\n        /* 内容区域样式 */\n        .content-left {\n            grid-column: span 7;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            padding-right: 2rem;\n        }\n\n        .content-right {\n            grid-column: span 5;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n        }\n\n        @media (max-width: 768px) {\n            .content-left,\n            .content-right {\n                grid-column: span 12;\n                padding-right: 0;\n            }\n        }\n\n        /* 响应式工具类 */\n        @media (max-width: 768px) {\n            .mobile-center {\n                text-align: center;\n            }\n            \n            .mobile-full {\n                width: 100%;\n            }\n\n            .mobile-text-sm {\n                font-size: 0.875rem;\n            }\n        }\n\n        /* 无障碍访问 */\n        .sr-only {\n            position: absolute;\n            width: 1px;\n            height: 1px;\n            padding: 0;\n            margin: -1px;\n            overflow: hidden;\n            clip: rect(0, 0, 0, 0);\n            border: 0;\n        }\n\n        /* 快捷键样式 */\n        kbd {\n            font-family: monospace;\n            font-size: 0.75rem;\n            font-weight: bold;\n            color: #E31937;\n            border: 1px solid rgba(227, 25, 55, 0.3);\n        }\n\n        /* 全屏模式样式 */\n        .fullscreen-mode {\n            cursor: none;\n        }\n\n        .fullscreen-mode .nav-backdrop {\n            transform: translateY(-100%);\n            transition: transform 0.3s ease;\n        }\n\n        .fullscreen-mode .page-indicator {\n            opacity: 0.3;\n            transition: opacity 0.3s ease;\n        }\n\n        .fullscreen-mode .page-indicator:hover {\n            opacity: 1;\n        }\n\n        .fullscreen-mode .fixed {\n            opacity: 0.3;\n            transition: opacity 0.3s ease;\n        }\n\n        .fullscreen-mode .fixed:hover {\n            opacity: 1;\n        }\n\n        /* 全屏提示 */\n        .fullscreen-hint {\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background: rgba(0, 0, 0, 0.8);\n            color: white;\n            padding: 1rem 2rem;\n            border-radius: 8px;\n            font-size: 0.875rem;\n            opacity: 0;\n            pointer-events: none;\n            transition: opacity 0.3s ease;\n            z-index: 100;\n            border: 1px solid rgba(227, 25, 55, 0.3);\n        }\n\n        .fullscreen-hint.show {\n            opacity: 1;\n        }\n\n        /* 滚动条样式 */\n        ::-webkit-scrollbar {\n            width: 8px;\n        }\n\n        ::-webkit-scrollbar-track {\n            background: #111;\n        }\n\n        ::-webkit-scrollbar-thumb {\n            background: #E31937;\n            border-radius: 4px;\n        }\n\n        ::-webkit-scrollbar-thumb:hover {\n            background: rgba(227, 25, 55, 0.8);\n        }\n\n        /* 全屏模式下隐藏滚动条 */\n        .fullscreen-mode::-webkit-scrollbar {\n            width: 0;\n        }\n\n        /* 背景装饰 */\n        .bg-decoration {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            width: 600px;\n            height: 600px;\n            border: 1px solid rgba(227, 25, 55, 0.1);\n            border-radius: 50%;\n            pointer-events: none;\n        }\n\n        .bg-decoration::before {\n            content: '';\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            width: 400px;\n            height: 400px;\n            border: 1px solid rgba(227, 25, 55, 0.05);\n            border-radius: 50%;\n        }\n    </style>\n</head>\n\n<body>\n    <!-- 浮动按钮组 -->\n    <div class=\"fixed bottom-8 right-8 flex flex-col space-y-3 z-50\">\n        <!-- 全屏按钮 -->\n        <button id=\"fullscreenBtn\" class=\"w-12 h-12 bg-primary rounded-full flex items-center justify-center transition-all duration-300 hover:bg-primary-light hover:scale-110\" aria-label=\"全屏模式\">\n            <i class=\"fas fa-expand\" id=\"fullscreenIcon\"></i>\n        </button>\n        \n        <!-- 返回顶部按钮 -->\n        <button id=\"backToTop\" class=\"w-12 h-12 bg-primary rounded-full flex items-center justify-center opacity-0 transition-all duration-300 hover:bg-primary-light hover:scale-110\" aria-label=\"返回顶部\">\n            <i class=\"fas fa-arrow-up\"></i>\n        </button>\n    </div>\n\n    <!-- 全屏提示 -->\n    <div id=\"fullscreenHint\" class=\"fullscreen-hint\">\n        <div class=\"text-center\">\n            <i class=\"fas fa-info-circle text-primary mb-2\"></i>\n            <p class=\"mb-1\">已进入全屏模式</p>\n            <p class=\"text-xs text-gray-400\">按 ESC 或点击 <i class=\"fas fa-compress text-primary\"></i> 退出全屏</p>\n        </div>\n    </div>\n\n    <!-- 页面指示器 -->\n    <div class=\"page-indicator\">\n        <button data-target=\"hero\" class=\"active\" aria-label=\"首页\"></button>\n        <button data-target=\"about\" aria-label=\"关于\"></button>\n        <button data-target=\"features\" aria-label=\"特色\"></button>\n        <button data-target=\"portfolio\" aria-label=\"作品\"></button>\n        <button data-target=\"contact\" aria-label=\"联系\"></button>\n    </div>\n\n    <!-- 导航栏 -->\n    <nav class=\"fixed top-0 left-0 right-0 z-40 nav-backdrop\" id=\"navbar\">\n        <div class=\"container mx-auto px-4\">\n            <div class=\"flex justify-between items-center h-16\">\n                <!-- Logo -->\n                <div class=\"text-2xl font-bold\">\n                    <a href=\"#hero\" class=\"highlight-text\">LOGO</a>\n                </div>\n                \n                <!-- 桌面导航 -->\n                <div class=\"hidden md:flex space-x-2\">\n                    <a href=\"#hero\" class=\"nav-link active\">首页</a>\n                    <a href=\"#about\" class=\"nav-link\">关于</a>\n                    <a href=\"#features\" class=\"nav-link\">特色</a>\n                    <a href=\"#portfolio\" class=\"nav-link\">作品</a>\n                    <a href=\"#contact\" class=\"nav-link\">联系</a>\n                </div>\n                \n                <!-- 移动端菜单按钮 -->\n                <button class=\"md:hidden text-2xl\" id=\"mobileMenuBtn\" aria-label=\"打开菜单\">\n                    <i class=\"fas fa-bars\"></i>\n                </button>\n            </div>\n        </div>\n        \n        <!-- 移动端导航菜单 -->\n        <div class=\"md:hidden bg-dark-secondary border-t border-primary-lighter hidden\" id=\"mobileMenu\">\n            <div class=\"container mx-auto px-4 py-4 space-y-4\">\n                <a href=\"#hero\" class=\"block nav-link\">首页</a>\n                <a href=\"#about\" class=\"block nav-link\">关于</a>\n                <a href=\"#features\" class=\"block nav-link\">特色</a>\n                <a href=\"#portfolio\" class=\"block nav-link\">作品</a>\n                <a href=\"#contact\" class=\"block nav-link\">联系</a>\n            </div>\n        </div>\n    </nav>\n\n    <!-- Hero Section -->\n    <section id=\"hero\" class=\"page-container\">\n        <div class=\"content-area\">\n            <div class=\"bg-decoration\"></div>\n            <div class=\"text-center z-10 relative\">\n                <h1 class=\"text-4xl md:text-8xl font-black mb-6 reveal active\">\n                    <span class=\"highlight-text\">现代化</span><br>\n                    <span class=\"text-xl md:text-4xl font-light uppercase tracking-widest\">16:9 TEMPLATE</span>\n                </h1>\n                <p class=\"text-lg md:text-xl font-light max-w-3xl mx-auto mb-8 reveal active\" style=\"transition-delay: 0.2s\">\n                    完美的16:9比例设计，每个页面都精心布局，支持全屏模式，提供沉浸式的浏览体验\n                </p>\n                <div class=\"space-x-4 reveal active\" style=\"transition-delay: 0.4s\">\n                    <button class=\"btn-primary\" onclick=\"document.querySelector('a[href=\\'#about\\']').click()\">\n                        开始探索\n                        <i class=\"fas fa-arrow-down ml-2\"></i>\n                    </button>\n                    <button class=\"btn-primary\" onclick=\"document.getElementById('fullscreenBtn').click()\">\n                        全屏体验\n                        <i class=\"fas fa-expand ml-2\"></i>\n                    </button>\n                </div>\n                <div class=\"mt-8 text-sm text-gray-400 reveal active hidden md:block\" style=\"transition-delay: 0.6s\">\n                    <p>💡 快捷键: <kbd class=\"px-2 py-1 bg-dark-secondary rounded\">F11</kbd> 或 <kbd class=\"px-2 py-1 bg-dark-secondary rounded\">Ctrl+F</kbd> 进入全屏 | <kbd class=\"px-2 py-1 bg-dark-secondary rounded\">↑↓</kbd> 页面导航</p>\n                </div>\n                \n                <!-- 当前页面指示器（调试用） -->\n                <div id=\"currentPageDebug\" class=\"fixed top-20 left-4 bg-black/80 text-primary text-xs px-3 py-2 rounded border border-primary/30 z-30 opacity-0 transition-opacity duration-300\">\n                    当前页面: <span id=\"currentPageName\">Hero</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"section-divider\"></div>\n    </section>\n\n    <!-- About Section -->\n    <section id=\"about\" class=\"page-container\">\n        <div class=\"content-area\">\n            <div class=\"bento-grid\">\n                <div class=\"content-left reveal-left\">\n                    <span class=\"text-sm uppercase text-primary-light tracking-widest mb-4 block\">关于模板</span>\n                    <h2 class=\"text-3xl md:text-6xl font-bold mb-6\">\n                        <span class=\"highlight-text text-4xl md:text-7xl\">设计理念</span><br>\n                        <span class=\"text-lg md:text-xl uppercase tracking-widest\">DESIGN PHILOSOPHY</span>\n                    </h2>\n                    <p class=\"text-base md:text-lg leading-relaxed mb-6\">\n                        这是一个现代化的HTML模板框架，采用16:9的黄金比例设计，每个页面都经过精心布局，确保内容在有限空间内达到最佳的视觉平衡。\n                    </p>\n                    <div class=\"space-y-4\">\n                        <div class=\"flex items-start\">\n                            <div class=\"w-8 h-8 flex-shrink-0 rounded-full bg-primary-lighter flex items-center justify-center mr-4 mt-1\">\n                                <i class=\"fas fa-tv text-white text-sm\"></i>\n                            </div>\n                            <div>\n                                <h4 class=\"text-lg md:text-xl font-semibold\">16:9 黄金比例</h4>\n                                <p class=\"text-gray-300 text-sm md:text-base\">每个页面都采用16:9的比例设计，符合现代显示设备标准</p>\n                            </div>\n                        </div>\n                        <div class=\"flex items-start\">\n                            <div class=\"w-8 h-8 flex-shrink-0 rounded-full bg-primary-lighter flex items-center justify-center mr-4 mt-1\">\n                                <i class=\"fas fa-mobile-alt text-white text-sm\"></i>\n                            </div>\n                            <div>\n                                <h4 class=\"text-lg md:text-xl font-semibold\">完美适配</h4>\n                                <p class=\"text-gray-300 text-sm md:text-base\">从手机到4K显示器，都能完美展示内容</p>\n                            </div>\n                        </div>\n                        <div class=\"flex items-start\">\n                            <div class=\"w-8 h-8 flex-shrink-0 rounded-full bg-primary-lighter flex items-center justify-center mr-4 mt-1\">\n                                <i class=\"fas fa-eye text-white text-sm\"></i>\n                            </div>\n                            <div>\n                                <h4 class=\"text-lg md:text-xl font-semibold\">视觉节奏</h4>\n                                <p class=\"text-gray-300 text-sm md:text-base\">统一的页面尺寸创造舒适的浏览节奏</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"content-right reveal-right data-card\" style=\"transition-delay: 0.3s\">\n                    <div class=\"p-6 md:p-8 text-center\">\n                        <div class=\"mb-8\">\n                            <span class=\"text-6xl md:text-8xl font-black highlight-text\">16:9</span>\n                            <p class=\"text-lg md:text-xl uppercase tracking-widest mt-4\">黄金比例</p>\n                        </div>\n                        <div class=\"grid grid-cols-3 gap-4\">\n                            <div class=\"text-center\">\n                                <i class=\"fas fa-mobile-alt text-primary text-xl md:text-2xl\"></i>\n                                <p class=\"mt-2 text-xs md:text-sm uppercase\">移动端</p>\n                            </div>\n                            <div class=\"text-center\">\n                                <i class=\"fas fa-tablet-alt text-primary text-xl md:text-2xl\"></i>\n                                <p class=\"mt-2 text-xs md:text-sm uppercase\">平板</p>\n                            </div>\n                            <div class=\"text-center\">\n                                <i class=\"fas fa-desktop text-primary text-xl md:text-2xl\"></i>\n                                <p class=\"mt-2 text-xs md:text-sm uppercase\">桌面</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"section-divider\"></div>\n    </section>\n\n    <!-- Features Section -->\n    <section id=\"features\" class=\"page-container\">\n        <div class=\"content-area\">\n            <div class=\"text-center mb-8 reveal\">\n                <span class=\"text-sm uppercase text-primary-light tracking-widest\">核心特性</span>\n                <h2 class=\"text-3xl md:text-6xl font-bold mt-2 mb-4\">\n                    <span class=\"highlight-text\">功能特色</span>\n                </h2>\n                <p class=\"text-base md:text-lg max-w-2xl mx-auto\">探索这个模板提供的丰富功能和设计特色</p>\n            </div>\n            \n            <div class=\"bento-grid flex-1\">\n                <div class=\"col-span-12 md:col-span-4 reveal glass-card p-4 md:p-6\" style=\"transition-delay: 0.1s\">\n                    <div class=\"text-center\">\n                        <div class=\"text-primary text-3xl md:text-4xl mb-4\">\n                            <i class=\"fas fa-paint-brush\"></i>\n                        </div>\n                        <h3 class=\"text-lg md:text-xl font-bold mb-3\">视觉设计</h3>\n                        <p class=\"text-gray-300 text-sm md:text-base\">暗黑主题配合精心选择的红色主题色，营造现代科技感</p>\n                    </div>\n                </div>\n                \n                <div class=\"col-span-12 md:col-span-4 reveal glass-card p-4 md:p-6\" style=\"transition-delay: 0.2s\">\n                    <div class=\"text-center\">\n                        <div class=\"text-primary text-3xl md:text-4xl mb-4\">\n                            <i class=\"fas fa-cogs\"></i>\n                        </div>\n                        <h3 class=\"text-lg md:text-xl font-bold mb-3\">技术栈</h3>\n                        <p class=\"text-gray-300 text-sm md:text-base\">基于TailwindCSS构建，集成Font Awesome图标库和自定义动画</p>\n                    </div>\n                </div>\n                \n                <div class=\"col-span-12 md:col-span-4 reveal glass-card p-4 md:p-6\" style=\"transition-delay: 0.3s\">\n                    <div class=\"text-center\">\n                        <div class=\"text-primary text-3xl md:text-4xl mb-4\">\n                            <i class=\"fas fa-anchor\"></i>\n                        </div>\n                        <h3 class=\"text-lg md:text-xl font-bold mb-3\">导航系统</h3>\n                        <p class=\"text-gray-300 text-sm md:text-base\">完整的锚点导航系统，支持平滑滚动和页面指示器</p>\n                    </div>\n                </div>\n                \n                <div class=\"col-span-12 md:col-span-6 reveal glass-card p-4 md:p-6\" style=\"transition-delay: 0.4s\">\n                    <div class=\"text-center\">\n                        <div class=\"text-primary text-3xl md:text-4xl mb-4\">\n                            <i class=\"fas fa-magic\"></i>\n                        </div>\n                        <h3 class=\"text-lg md:text-xl font-bold mb-3\">动画系统</h3>\n                        <p class=\"text-gray-300 text-sm md:text-base mb-4\">流畅的滚动动画和交互效果，提升用户体验</p>\n                        <div class=\"flex flex-wrap gap-2 justify-center\">\n                            <span class=\"px-2 md:px-3 py-1 bg-primary-lighter rounded text-xs md:text-sm\">滚动显示</span>\n                            <span class=\"px-2 md:px-3 py-1 bg-primary-lighter rounded text-xs md:text-sm\">悬停效果</span>\n                            <span class=\"px-2 md:px-3 py-1 bg-primary-lighter rounded text-xs md:text-sm\">平滑过渡</span>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"col-span-12 md:col-span-6 reveal glass-card p-4 md:p-6\" style=\"transition-delay: 0.5s\">\n                    <div class=\"text-center\">\n                        <div class=\"text-primary text-3xl md:text-4xl mb-4\">\n                            <i class=\"fas fa-expand-arrows-alt\"></i>\n                        </div>\n                        <h3 class=\"text-lg md:text-xl font-bold mb-3\">16:9 布局</h3>\n                        <p class=\"text-gray-300 text-sm md:text-base mb-4\">每个页面都采用16:9的标准比例，确保视觉一致性</p>\n                        <div class=\"flex flex-wrap gap-2 justify-center\">\n                            <span class=\"px-2 md:px-3 py-1 bg-primary-lighter rounded text-xs md:text-sm\">黄金比例</span>\n                            <span class=\"px-2 md:px-3 py-1 bg-primary-lighter rounded text-xs md:text-sm\">完美适配</span>\n                            <span class=\"px-2 md:px-3 py-1 bg-primary-lighter rounded text-xs md:text-sm\">视觉节奏</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"section-divider\"></div>\n    </section>\n\n    <!-- Portfolio Section -->\n    <section id=\"portfolio\" class=\"page-container\">\n        <div class=\"content-area\">\n            <div class=\"bento-grid\">\n                <div class=\"content-left reveal-left\">\n                    <span class=\"text-sm uppercase text-primary-light tracking-widest mb-4 block\">应用展示</span>\n                    <h2 class=\"text-3xl md:text-6xl font-bold mb-6\">\n                        <span class=\"highlight-text text-4xl md:text-7xl\">使用场景</span><br>\n                        <span class=\"text-lg md:text-xl uppercase tracking-widest\">USE CASES</span>\n                    </h2>\n                    <p class=\"text-base md:text-lg leading-relaxed mb-6\">\n                        16:9的页面设计非常适合现代化的展示需求，无论是企业官网还是个人作品集，都能提供电影级的视觉体验。\n                    </p>\n                    <div class=\"grid grid-cols-2 gap-4\">\n                        <div class=\"text-center p-3 md:p-4 bg-dark-secondary rounded\">\n                            <i class=\"fas fa-building text-primary text-xl md:text-2xl mb-2\"></i>\n                            <p class=\"text-xs md:text-sm\">企业官网</p>\n                        </div>\n                        <div class=\"text-center p-3 md:p-4 bg-dark-secondary rounded\">\n                            <i class=\"fas fa-user text-primary text-xl md:text-2xl mb-2\"></i>\n                            <p class=\"text-xs md:text-sm\">个人作品集</p>\n                        </div>\n                        <div class=\"text-center p-3 md:p-4 bg-dark-secondary rounded\">\n                            <i class=\"fas fa-chart-bar text-primary text-xl md:text-2xl mb-2\"></i>\n                            <p class=\"text-xs md:text-sm\">数据展示</p>\n                        </div>\n                        <div class=\"text-center p-3 md:p-4 bg-dark-secondary rounded\">\n                            <i class=\"fas fa-camera text-primary text-xl md:text-2xl mb-2\"></i>\n                            <p class=\"text-xs md:text-sm\">摄影作品</p>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"content-right reveal-right data-card\" style=\"transition-delay: 0.2s\">\n                    <div class=\"p-6 md:p-8 text-center\">\n                        <div class=\"mb-6\">\n                            <div class=\"text-primary text-4xl md:text-6xl mb-4\">\n                                <i class=\"fas fa-film\"></i>\n                            </div>\n                            <h3 class=\"text-xl md:text-2xl font-bold mb-4\">电影级体验</h3>\n                            <p class=\"text-gray-300 text-sm md:text-base mb-6\">16:9比例让每个页面都像电影画面一样精致</p>\n                        </div>\n                        <div class=\"space-y-3\">\n                            <div class=\"flex items-center justify-between p-2 bg-dark-secondary rounded\">\n                                <span class=\"text-xs md:text-sm\">1920×1080</span>\n                                <span class=\"text-primary text-xs md:text-sm\">Full HD</span>\n                            </div>\n                            <div class=\"flex items-center justify-between p-2 bg-dark-secondary rounded\">\n                                <span class=\"text-xs md:text-sm\">2560×1440</span>\n                                <span class=\"text-primary text-xs md:text-sm\">2K</span>\n                            </div>\n                            <div class=\"flex items-center justify-between p-2 bg-dark-secondary rounded\">\n                                <span class=\"text-xs md:text-sm\">3840×2160</span>\n                                <span class=\"text-primary text-xs md:text-sm\">4K</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"section-divider\"></div>\n    </section>\n\n    <!-- Contact Section -->\n    <section id=\"contact\" class=\"page-container\">\n        <div class=\"content-area\">\n            <div class=\"text-center reveal\">\n                <span class=\"text-sm uppercase text-primary-light tracking-widest mb-4 block\">联系我们</span>\n                <h2 class=\"text-3xl md:text-5xl font-bold mb-6\">\n                    <span class=\"highlight-text\">开始合作</span>\n                </h2>\n                <p class=\"text-base md:text-xl leading-relaxed mb-8 max-w-2xl mx-auto\">\n                    如果你对这个16:9模板感兴趣，或者需要定制化的解决方案，欢迎与我们联系\n                </p>\n                <div class=\"flex flex-col md:flex-row gap-4 justify-center items-center\">\n                    <button class=\"btn-primary w-full md:w-auto\">\n                        <i class=\"fas fa-envelope mr-2\"></i>\n                        发送邮件\n                    </button>\n                    <button class=\"btn-primary w-full md:w-auto\">\n                        <i class=\"fab fa-github mr-2\"></i>\n                        查看源码\n                    </button>\n                    <button class=\"btn-primary w-full md:w-auto\">\n                        <i class=\"fas fa-download mr-2\"></i>\n                        下载模板\n                    </button>\n                </div>\n                \n                <div class=\"mt-12 grid grid-cols-1 md:grid-cols-3 gap-6 max-w-4xl mx-auto\">\n                    <div class=\"glass-card p-6\">\n                        <i class=\"fas fa-rocket text-primary text-3xl mb-4\"></i>\n                        <h4 class=\"text-lg font-bold mb-2\">快速部署</h4>\n                        <p class=\"text-gray-300 text-sm\">只需几分钟即可完成部署</p>\n                    </div>\n                    <div class=\"glass-card p-6\">\n                        <i class=\"fas fa-palette text-primary text-3xl mb-4\"></i>\n                        <h4 class=\"text-lg font-bold mb-2\">自定义主题</h4>\n                        <p class=\"text-gray-300 text-sm\">轻松修改颜色和布局</p>\n                    </div>\n                    <div class=\"glass-card p-6\">\n                        <i class=\"fas fa-headset text-primary text-3xl mb-4\"></i>\n                        <h4 class=\"text-lg font-bold mb-2\">技术支持</h4>\n                        <p class=\"text-gray-300 text-sm\">提供完整的技术文档</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <script>\n        document.addEventListener('DOMContentLoaded', function() {\n            // 导航系统\n            const navbar = document.getElementById('navbar');\n            const navLinks = document.querySelectorAll('.nav-link');\n            const mobileMenuBtn = document.getElementById('mobileMenuBtn');\n            const mobileMenu = document.getElementById('mobileMenu');\n            const backToTop = document.getElementById('backToTop');\n            const pageIndicators = document.querySelectorAll('.page-indicator button');\n            \n            // 调试元素\n            const currentPageDebug = document.getElementById('currentPageDebug');\n            const currentPageName = document.getElementById('currentPageName');\n            let debugTimeout;\n            \n            // 页面名称映射\n            const pageNames = {\n                'hero': '首页',\n                'about': '关于',\n                'features': '特色',\n                'portfolio': '作品',\n                'contact': '联系'\n            };\n            \n            // 显示当前页面调试信息\n            function showCurrentPageDebug(sectionId) {\n                currentPageName.textContent = pageNames[sectionId] || sectionId;\n                currentPageDebug.classList.add('opacity-100');\n                currentPageDebug.classList.remove('opacity-0');\n                \n                clearTimeout(debugTimeout);\n                debugTimeout = setTimeout(() => {\n                    currentPageDebug.classList.add('opacity-0');\n                    currentPageDebug.classList.remove('opacity-100');\n                }, 2000);\n            }\n            \n            // 全屏功能\n            const fullscreenBtn = document.getElementById('fullscreenBtn');\n            const fullscreenIcon = document.getElementById('fullscreenIcon');\n            const fullscreenHint = document.getElementById('fullscreenHint');\n            let isFullscreen = false;\n            let hintTimeout;\n\n            // 获取所有section\n            const sections = document.querySelectorAll('section[id]');\n\n            // 全屏API兼容性处理\n            function getFullscreenElement() {\n                return document.fullscreenElement || \n                       document.webkitFullscreenElement || \n                       document.mozFullScreenElement || \n                       document.msFullscreenElement;\n            }\n\n            function requestFullscreen(element) {\n                if (element.requestFullscreen) {\n                    return element.requestFullscreen();\n                } else if (element.webkitRequestFullscreen) {\n                    return element.webkitRequestFullscreen();\n                } else if (element.mozRequestFullScreen) {\n                    return element.mozRequestFullScreen();\n                } else if (element.msRequestFullscreen) {\n                    return element.msRequestFullscreen();\n                }\n            }\n\n            function exitFullscreen() {\n                if (document.exitFullscreen) {\n                    return document.exitFullscreen();\n                } else if (document.webkitExitFullscreen) {\n                    return document.webkitExitFullscreen();\n                } else if (document.mozCancelFullScreen) {\n                    return document.mozCancelFullScreen();\n                } else if (document.msExitFullscreen) {\n                    return document.msExitFullscreen();\n                }\n            }\n\n            // 显示全屏提示\n            function showFullscreenHint() {\n                fullscreenHint.classList.add('show');\n                clearTimeout(hintTimeout);\n                hintTimeout = setTimeout(() => {\n                    fullscreenHint.classList.remove('show');\n                }, 3000);\n            }\n\n            // 隐藏全屏提示\n            function hideFullscreenHint() {\n                clearTimeout(hintTimeout);\n                fullscreenHint.classList.remove('show');\n            }\n\n            // 更新全屏状态\n            function updateFullscreenState() {\n                const fullscreenElement = getFullscreenElement();\n                isFullscreen = !!fullscreenElement;\n                \n                if (isFullscreen) {\n                    fullscreenIcon.className = 'fas fa-compress';\n                    document.body.classList.add('fullscreen-mode');\n                    showFullscreenHint();\n                } else {\n                    fullscreenIcon.className = 'fas fa-expand';\n                    document.body.classList.remove('fullscreen-mode');\n                    hideFullscreenHint();\n                }\n            }\n\n            // 全屏切换功能\n            function toggleFullscreen() {\n                if (!isFullscreen) {\n                    requestFullscreen(document.documentElement)\n                        .catch(err => {\n                            console.log('无法进入全屏模式:', err);\n                        });\n                } else {\n                    exitFullscreen()\n                        .catch(err => {\n                            console.log('无法退出全屏模式:', err);\n                        });\n                }\n            }\n\n            // 全屏按钮点击事件\n            fullscreenBtn.addEventListener('click', toggleFullscreen);\n\n            // 监听全屏状态变化\n            ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange']\n                .forEach(event => {\n                    document.addEventListener(event, updateFullscreenState);\n                });\n\n            // 滚动时显示/隐藏返回顶部按钮\n            window.addEventListener('scroll', function() {\n                if (window.scrollY > window.innerHeight / 2) {\n                    backToTop.classList.add('opacity-100');\n                    backToTop.classList.remove('opacity-0');\n                } else {\n                    backToTop.classList.add('opacity-0');\n                    backToTop.classList.remove('opacity-100');\n                }\n            });\n\n            // 返回顶部功能\n            backToTop.addEventListener('click', function() {\n                window.scrollTo({ top: 0, behavior: 'smooth' });\n            });\n\n            // 移动端菜单切换\n            mobileMenuBtn.addEventListener('click', function() {\n                mobileMenu.classList.toggle('hidden');\n                const icon = this.querySelector('i');\n                icon.classList.toggle('fa-bars');\n                icon.classList.toggle('fa-times');\n            });\n\n            // 导航功能函数\n            function navigateToSection(targetId) {\n                const targetElement = document.querySelector(`#${targetId}`);\n                if (targetElement) {\n                    // 移除所有活跃状态\n                    navLinks.forEach(l => l.classList.remove('active'));\n                    pageIndicators.forEach(p => p.classList.remove('active'));\n                    \n                    // 添加当前活跃状态\n                    navLinks.forEach(link => {\n                        if (link.getAttribute('href') === `#${targetId}`) {\n                            link.classList.add('active');\n                        }\n                    });\n                    pageIndicators.forEach(indicator => {\n                        if (indicator.getAttribute('data-target') === targetId) {\n                            indicator.classList.add('active');\n                        }\n                    });\n                    \n                    // 滚动到目标位置\n                    const offsetTop = targetElement.offsetTop;\n                    window.scrollTo({\n                        top: offsetTop,\n                        behavior: 'smooth'\n                    });\n                    \n                    // 关闭移动端菜单\n                    mobileMenu.classList.add('hidden');\n                    const menuIcon = mobileMenuBtn.querySelector('i');\n                    menuIcon.classList.add('fa-bars');\n                    menuIcon.classList.remove('fa-times');\n                }\n            }\n\n            // 导航链接点击处理\n            navLinks.forEach(link => {\n                link.addEventListener('click', function(e) {\n                    e.preventDefault();\n                    const targetId = this.getAttribute('href').substring(1);\n                    navigateToSection(targetId);\n                });\n            });\n\n            // 页面指示器点击处理\n            pageIndicators.forEach(indicator => {\n                indicator.addEventListener('click', function() {\n                    const targetId = this.getAttribute('data-target');\n                    navigateToSection(targetId);\n                });\n            });\n\n            // 获取当前激活的section（改进版本）\n            function getCurrentSection() {\n                const scrollPos = window.scrollY;\n                const viewportHeight = window.innerHeight;\n                const scrollCenter = scrollPos + viewportHeight / 2;\n                \n                // 如果在页面顶部，返回第一个section\n                if (scrollPos < viewportHeight / 4) {\n                    return sections[0];\n                }\n                \n                // 如果在页面底部，返回最后一个section\n                if (scrollPos + viewportHeight >= document.documentElement.scrollHeight - 10) {\n                    return sections[sections.length - 1];\n                }\n                \n                // 查找当前在视口中心的section\n                let currentSection = sections[0];\n                let minDistance = Infinity;\n                \n                sections.forEach(section => {\n                    const sectionTop = section.offsetTop;\n                    const sectionHeight = section.offsetHeight;\n                    const sectionCenter = sectionTop + sectionHeight / 2;\n                    const distance = Math.abs(scrollCenter - sectionCenter);\n                    \n                    if (distance < minDistance) {\n                        minDistance = distance;\n                        currentSection = section;\n                    }\n                });\n                \n                return currentSection;\n            }\n\n            // 滚动时更新活跃导航项\n            function updateActiveNavOnScroll() {\n                const scrollPos = window.scrollY + window.innerHeight / 2;\n\n                sections.forEach(section => {\n                    const sectionTop = section.offsetTop;\n                    const sectionHeight = section.offsetHeight;\n                    const sectionId = section.getAttribute('id');\n\n                    if (scrollPos >= sectionTop && scrollPos < sectionTop + sectionHeight) {\n                        navLinks.forEach(link => {\n                            link.classList.remove('active');\n                            if (link.getAttribute('href') === `#${sectionId}`) {\n                                link.classList.add('active');\n                            }\n                        });\n                        pageIndicators.forEach(indicator => {\n                            indicator.classList.remove('active');\n                            if (indicator.getAttribute('data-target') === sectionId) {\n                                indicator.classList.add('active');\n                            }\n                        });\n                        \n                        // 更新调试信息（仅在页面名称变化时）\n                        if (currentPageName.textContent !== (pageNames[sectionId] || sectionId)) {\n                            currentPageName.textContent = pageNames[sectionId] || sectionId;\n                        }\n                    }\n                });\n            }\n\n            window.addEventListener('scroll', updateActiveNavOnScroll);\n\n            // 滚动显示动画\n            function revealOnScroll() {\n                const reveals = document.querySelectorAll('.reveal:not(.active), .reveal-left:not(.active), .reveal-right:not(.active)');\n                \n                reveals.forEach(function(reveal) {\n                    const revealTop = reveal.getBoundingClientRect().top;\n                    const windowHeight = window.innerHeight;\n                    const revealPoint = windowHeight * 0.7; // 当元素进入视口70%时显示\n                    \n                    if (revealTop < revealPoint) {\n                        reveal.classList.add('active');\n                    }\n                });\n            }\n            \n            // 初始化显示第一屏元素\n            document.querySelectorAll('#hero .reveal').forEach(el => {\n                el.classList.add('active');\n            });\n            \n            window.addEventListener('scroll', revealOnScroll);\n            \n            // 页面加载完成后立即检查一次\n            setTimeout(revealOnScroll, 100);\n\n            // 键盘导航支持\n            document.addEventListener('keydown', function(e) {\n                // ESC键处理\n                if (e.key === 'Escape') {\n                    // 优先处理全屏退出\n                    if (isFullscreen) {\n                        exitFullscreen();\n                        return;\n                    }\n                    \n                    // 然后处理菜单关闭\n                    if (!mobileMenu.classList.contains('hidden')) {\n                        mobileMenu.classList.add('hidden');\n                        const menuIcon = mobileMenuBtn.querySelector('i');\n                        menuIcon.classList.add('fa-bars');\n                        menuIcon.classList.remove('fa-times');\n                    }\n                }\n                \n                // F11键全屏切换\n                if (e.key === 'F11') {\n                    e.preventDefault();\n                    toggleFullscreen();\n                }\n                \n                // F键快捷键全屏切换\n                if (e.key === 'f' || e.key === 'F') {\n                    if (e.ctrlKey || e.metaKey) {\n                        e.preventDefault();\n                        toggleFullscreen();\n                    }\n                }\n                \n                // 上下方向键导航\n                if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n                    e.preventDefault();\n                    \n                    // 获取当前section\n                    const currentSection = getCurrentSection();\n                    const currentIndex = Array.from(sections).indexOf(currentSection);\n                    \n                    let targetIndex;\n                    if (e.key === 'ArrowDown') {\n                        targetIndex = Math.min(currentIndex + 1, sections.length - 1);\n                    } else {\n                        targetIndex = Math.max(currentIndex - 1, 0);\n                    }\n                    \n                    // 如果目标索引不同于当前索引，则导航到目标section\n                    if (targetIndex !== currentIndex) {\n                        const targetSection = sections[targetIndex];\n                        if (targetSection) {\n                            const targetId = targetSection.getAttribute('id');\n                            navigateToSection(targetId);\n                            \n                            // 显示导航调试信息\n                            showCurrentPageDebug(targetId);\n                        }\n                    } else {\n                        // 即使没有移动，也显示当前位置\n                        const currentId = currentSection.getAttribute('id');\n                        showCurrentPageDebug(currentId);\n                    }\n                }\n            });\n\n            // 鼠标移动时在全屏模式下显示控件\n            let mouseMoveTimeout;\n            document.addEventListener('mousemove', function() {\n                if (isFullscreen) {\n                    document.body.style.cursor = 'default';\n                    clearTimeout(mouseMoveTimeout);\n                    mouseMoveTimeout = setTimeout(() => {\n                        if (isFullscreen) {\n                            document.body.style.cursor = 'none';\n                        }\n                    }, 3000);\n                }\n            });\n\n            // 鼠标滚轮导航（可选）\n            let wheelTimeout;\n            window.addEventListener('wheel', function(e) {\n                clearTimeout(wheelTimeout);\n                wheelTimeout = setTimeout(() => {\n                    // 这里可以添加基于滚轮的页面切换逻辑\n                    // 如果需要的话\n                }, 150);\n            });\n\n            // 初始化全屏状态\n            updateFullscreenState();\n        });\n    </script>\n\n</body>\n</html>",
      "codeLang": "html"
    },
    {
      "description": "一个现代化的卡片式设计模板，适用于展示知识点或产品信息。使用了CSS Grid布局和Framer Motion动画库，提供了流畅的用户体验。",
      "category": "design",
      "tags": [
        "设计",
        "演示",
        "模板",
        "HTML",
        "Card"
      ],
      "difficulty": "beginner",
      "id": "card-template",
      "title": "卡片式设计模板",
      "code": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>知识卡片通用模板</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/framer-motion/10.16.4/framer-motion.min.js\"></script>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            font-family: Arial, sans-serif;\n            background: #f5f5f5;\n            padding: 20px;\n            min-height: 100vh;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            overflow-x: hidden;\n        }\n\n        .main-container {\n            width: 100%;\n            max-width: 1280px;\n            position: relative;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 20px;\n            opacity: 0;\n            transform: translateY(30px);\n            transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);\n        }\n\n        .main-container.loaded {\n            opacity: 1;\n            transform: translateY(0);\n        }\n\n        .card-navigation {\n            position: relative;\n            width: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        .knowledge-card {\n            width: 100%;\n            max-width: 1200px;\n            height: 600px;\n            background: linear-gradient(135deg, var(--primary-color, #20BF7A) 0%, var(--secondary-color, #1A9B6B) 100%);\n            border-radius: 20px;\n            padding: 40px;\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 40px;\n            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n            position: relative;\n            overflow: hidden;\n        }\n\n        .knowledge-card::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background: radial-gradient(circle at 20% 80%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);\n            pointer-events: none;\n        }\n\n        .left-section {\n            color: white;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-between;\n            opacity: 0;\n            animation: fadeIn 0.8s ease-out 0.3s forwards;\n        }\n\n        .main-title {\n            font-size: 48px;\n            font-weight: bold;\n            margin-bottom: 16px;\n            line-height: 1.2;\n            opacity: 0;\n            animation: fadeIn 0.6s ease-out 0.5s forwards;\n        }\n\n        .subtitle {\n            font-size: 20px;\n            opacity: 0;\n            margin-bottom: 32px;\n            animation: fadeInSubtitle 0.6s ease-out 0.7s forwards;\n        }\n\n        .core-concept {\n            background: rgba(255, 255, 255, 0.15);\n            border: 2px solid rgba(255, 255, 255, 0.2);\n            border-radius: 16px;\n            padding: 24px;\n            margin-bottom: 32px;\n            backdrop-filter: blur(10px);\n            opacity: 0;\n            animation: fadeIn 0.6s ease-out 0.9s forwards;\n            transition: transform 0.3s ease;\n        }\n\n        .core-concept:hover {\n            transform: scale(1.02);\n        }\n\n        .core-concept h3 {\n            font-size: 18px;\n            margin-bottom: 12px;\n            font-weight: bold;\n        }\n\n        .core-concept p {\n            font-size: 16px;\n            line-height: 1.4;\n        }\n\n        .quote-section {\n            border-left: 4px solid rgba(255, 255, 255, 0.4);\n            padding-left: 20px;\n            font-style: italic;\n            font-size: 16px;\n            line-height: 1.4;\n            opacity: 0;\n            animation: fadeIn 0.6s ease-out 1.1s forwards;\n        }\n\n        .right-section {\n            background: white;\n            border-radius: 20px;\n            padding: 32px;\n            display: flex;\n            flex-direction: column;\n            gap: 24px;\n            opacity: 0;\n            animation: fadeIn 0.8s ease-out 0.4s forwards;\n        }\n\n        .dimension-item {\n            display: flex;\n            align-items: flex-start;\n            gap: 16px;\n            position: relative;\n            opacity: 0;\n            transition: transform 0.3s ease;\n        }\n\n        .dimension-item:hover {\n            transform: translateY(-2px);\n        }\n\n        .dimension-item:nth-child(1) { animation: fadeIn 0.4s ease-out 0.8s forwards; }\n        .dimension-item:nth-child(2) { animation: fadeIn 0.4s ease-out 1.0s forwards; }\n        .dimension-item:nth-child(3) { animation: fadeIn 0.4s ease-out 1.2s forwards; }\n        .dimension-item:nth-child(4) { animation: fadeIn 0.4s ease-out 1.4s forwards; }\n        .dimension-item:nth-child(5) { animation: fadeIn 0.4s ease-out 1.6s forwards; }\n\n        .dimension-item.featured {\n            background: rgba(var(--primary-rgb, 32, 191, 122), 0.05);\n            border: 2px dashed var(--primary-color, #20BF7A);\n            border-radius: 12px;\n            padding: 16px;\n            margin: -16px;\n            position: relative;\n            overflow: hidden;\n        }\n\n        .dimension-item.featured::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n            animation: shimmer 2s infinite;\n        }\n\n        .number-circle {\n            width: 32px;\n            height: 32px;\n            background: linear-gradient(135deg, var(--primary-color, #20BF7A) 0%, var(--secondary-color, #1A9B6B) 100%);\n            color: white;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 14px;\n            font-weight: bold;\n            flex-shrink: 0;\n            transform: scale(0);\n            animation: bounceIn 0.5s ease-out 1.8s forwards;\n            transition: transform 0.3s ease;\n        }\n\n        .number-circle:hover {\n            transform: scale(1.1);\n        }\n\n        .dimension-content h4 {\n            font-size: 16px;\n            font-weight: bold;\n            color: #333;\n            margin-bottom: 4px;\n        }\n\n        .dimension-content p {\n            font-size: 14px;\n            color: #666;\n            line-height: 1.4;\n        }\n\n        .copy-button {\n            background: var(--primary-color, #20BF7A);\n            color: white;\n            border: none;\n            border-radius: 10px;\n            padding: 10px 20px;\n            cursor: pointer;\n            font-size: 14px;\n            transition: all 0.3s ease;\n            display: flex;\n            align-items: center;\n            gap: 8px;\n        }\n\n        .copy-button:hover {\n            background: var(--secondary-color, #1A9B6B);\n            transform: translateY(-2px);\n            box-shadow: 0 4px 15px rgba(var(--primary-rgb, 32, 191, 122), 0.3);\n        }\n\n        .copy-button.success {\n            background: #10B981;\n        }\n\n        .copy-button.error {\n            background: #EF4444;\n        }\n\n        .copy-icon {\n            width: 16px;\n            height: 16px;\n            fill: currentColor;\n        }\n\n        /* 页码指示器 */\n        .pagination {\n            display: flex;\n            align-items: center;\n            gap: 20px;\n            opacity: 0;\n            animation: fadeIn 0.5s ease-out 2.2s forwards;\n        }\n\n        .page-indicators {\n            display: flex;\n            gap: 8px;\n        }\n\n        .page-dot {\n            width: 10px;\n            height: 10px;\n            border-radius: 50%;\n            background: #ddd;\n            cursor: pointer;\n            transition: all 0.3s ease;\n        }\n\n        .page-dot.active {\n            background: var(--primary-color, #20BF7A);\n            transform: scale(1.2);\n        }\n\n        .page-dot:hover {\n            background: var(--primary-color, #20BF7A);\n            opacity: 0.7;\n        }\n\n        .page-info {\n            font-size: 14px;\n            color: #666;\n            margin: 0 10px;\n        }\n\n        /* 状态消息 */\n        .status-message {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            background: rgba(0, 0, 0, 0.8);\n            color: white;\n            padding: 10px 16px;\n            border-radius: 8px;\n            font-size: 14px;\n            opacity: 0;\n            transform: translateX(20px);\n            transition: all 0.3s ease;\n            z-index: 1000;\n        }\n\n        .status-message.show {\n            opacity: 1;\n            transform: translateX(0);\n        }\n\n        /* 动画关键帧 */\n        @keyframes fadeIn {\n            to {\n                opacity: 1;\n            }\n        }\n\n        @keyframes fadeInSubtitle {\n            to {\n                opacity: 0.9;\n            }\n        }\n\n        @keyframes bounceIn {\n            0% {\n                transform: scale(0);\n            }\n            50% {\n                transform: scale(1.2);\n            }\n            100% {\n                transform: scale(1);\n            }\n        }\n\n        @keyframes shimmer {\n            0% {\n                left: -100%;\n            }\n            100% {\n                left: 100%;\n            }\n        }\n\n        /* 响应式设计 */\n        @media (max-width: 1280px) {\n            .knowledge-card {\n                max-width: 1000px;\n                height: 500px;\n            }\n            .main-title {\n                font-size: 40px;\n            }\n        }\n\n        @media (max-width: 1024px) {\n            body {\n                padding: 15px;\n            }\n            .knowledge-card {\n                max-width: 800px;\n                height: 400px;\n                padding: 30px;\n                gap: 30px;\n            }\n            .main-title {\n                font-size: 32px;\n            }\n            .core-concept {\n                padding: 20px;\n                margin-bottom: 24px;\n            }\n            .right-section {\n                padding: 24px;\n                gap: 20px;\n            }\n        }\n\n        @media (max-width: 768px) {\n            body {\n                padding: 10px;\n            }\n            .knowledge-card {\n                grid-template-columns: 1fr;\n                grid-template-rows: auto auto;\n                height: auto;\n                min-height: 600px;\n                padding: 24px;\n                gap: 24px;\n            }\n            .main-title {\n                font-size: 28px;\n                margin-bottom: 12px;\n            }\n            .subtitle {\n                font-size: 16px;\n                margin-bottom: 24px;\n            }\n            .core-concept {\n                padding: 16px;\n                margin-bottom: 20px;\n            }\n            .core-concept h3 {\n                font-size: 16px;\n                margin-bottom: 8px;\n            }\n            .core-concept p {\n                font-size: 14px;\n            }\n            .quote-section {\n                font-size: 14px;\n                padding-left: 16px;\n            }\n            .right-section {\n                padding: 20px;\n                gap: 16px;\n            }\n            .dimension-item {\n                gap: 12px;\n            }\n            .number-circle {\n                width: 28px;\n                height: 28px;\n                font-size: 12px;\n            }\n            .dimension-content h4 {\n                font-size: 14px;\n            }\n            .dimension-content p {\n                font-size: 12px;\n            }\n            .pagination {\n                gap: 15px;\n            }\n            .copy-button {\n                padding: 8px 16px;\n                font-size: 12px;\n            }\n        }\n\n        @media (max-width: 480px) {\n            .knowledge-card {\n                padding: 20px;\n                border-radius: 16px;\n            }\n            .main-title {\n                font-size: 24px;\n            }\n            .subtitle {\n                font-size: 14px;\n            }\n            .core-concept {\n                padding: 12px;\n                border-radius: 12px;\n            }\n            .right-section {\n                padding: 16px;\n                border-radius: 16px;\n            }\n            .dimension-item.featured {\n                padding: 12px;\n                margin: -12px;\n            }\n            .page-dot {\n                width: 8px;\n                height: 8px;\n            }\n            .page-info {\n                font-size: 12px;\n            }\n            .copy-button {\n                padding: 6px 12px;\n                font-size: 11px;\n                gap: 4px;\n            }\n        }\n\n        /* 触摸设备优化 */\n        @media (hover: none) and (pointer: coarse) {\n            .copy-button:hover {\n                background: var(--primary-color, #20BF7A);\n                transform: none;\n                box-shadow: none;\n            }\n            \n            .copy-button:active {\n                background: var(--secondary-color, #1A9B6B);\n                transform: scale(0.95);\n            }\n            \n            .page-dot:hover {\n                background: #ddd;\n                opacity: 1;\n            }\n            \n            .page-dot:active {\n                background: var(--primary-color, #20BF7A);\n                transform: scale(1.1);\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"main-container\" id=\"mainContainer\">\n        <div class=\"card-navigation\">\n            <div class=\"knowledge-card\" id=\"knowledgeCard\">\n                <div class=\"left-section\">\n                    <div>\n                        <h1 class=\"main-title\" id=\"mainTitle\">知识卡片标题</h1>\n                        <p class=\"subtitle\" id=\"subtitle\">Knowledge Card Subtitle</p>\n                        <div class=\"core-concept\">\n                            <h3 id=\"coreTitle\">核心理念</h3>\n                            <p id=\"coreContent\">这里是核心理念的内容描述，简明扼要地概括主要思想和价值观点。</p>\n                        </div>\n                    </div>\n                    <div class=\"quote-section\" id=\"quoteSection\">\n                        \"这里是引用语句或重要表述，用于强调关键观点或经典名言。\"<br>\n                        —— 引用来源\n                    </div>\n                </div>\n                <div class=\"right-section\" id=\"rightSection\">\n                    <!-- 维度项将通过JavaScript动态生成 -->\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"pagination\">\n            <div class=\"page-indicators\" id=\"pageIndicators\">\n                <!-- 页码点将通过JavaScript动态生成 -->\n            </div>\n            <span class=\"page-info\" id=\"pageInfo\">1 / 4</span>\n            <button class=\"copy-button\" id=\"copyButton\" onclick=\"copyCardAsImage()\">\n                <svg class=\"copy-icon\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"/>\n                </svg>\n                <span>PNG</span>\n            </button>\n        </div>\n    </div>\n\n    <div class=\"status-message\" id=\"statusMessage\"></div>\n\n    <script>\n        // 卡片数据配置\n        const cardTemplates = {\n            project: {\n                mainTitle: \"理想汽车飞书项目\",\n                subtitle: \"LiXiang Auto Feishu Integration Project\", \n                coreTitle: \"核心成果\",\n                coreContent: \"系统集成顺利推进，功能交付超出预期，项目风险管控良好，团队协作高效，即将高质量完成交付目标\",\n                quote: '\"整体进度超出预期5%，团队士气良好，有信心高质量完成交付目标\"<br>—— 项目进展总结',\n                dimensions: [\n                    { title: \"系统集成\", desc: \"3个核心系统对接完成，15个接口数据同步，12万条用户记录迁移\", featured: true },\n                    { title: \"功能交付\", desc: \"组织架构同步、消息推送、移动端优化全面完成，响应速度提升40%\" },\n                    { title: \"用户反馈\", desc: \"200名测试用户满意度达95%，IT总监和产品负责人高度认可\" },\n                    { title: \"风险管控\", desc: \"数据迁移提前完成，8个技术难点逐一解决，24小时响应机制\" },\n                    { title: \"项目进度\", desc: \"整体进度超预期5%，下周全员培训，800名员工覆盖，按时交付\" }\n                ],\n                colors: {\n                    primary: \"#20BF7A\",\n                    secondary: \"#1A9B6B\",\n                    primaryRgb: \"32, 191, 122\"\n                }\n            },\n            knowledge: {\n                mainTitle: \"敏捷开发方法论\",\n                subtitle: \"Agile Development Methodology\",\n                coreTitle: \"核心智慧\", \n                coreContent: \"拥抱变化，快速迭代，以客户价值为导向，通过持续交付和团队协作实现高质量软件开发\",\n                quote: '\"个体和互动高于流程和工具，工作的软件高于详尽的文档\"<br>—— 敏捷宣言',\n                dimensions: [\n                    { title: \"价值观念\", desc: \"以人为本，响应变化，客户合作，持续改进的核心理念\", featured: true },\n                    { title: \"工作方式\", desc: \"短周期迭代，频繁交付，及时反馈，适应性调整\" },\n                    { title: \"团队协作\", desc: \"跨职能团队，自组织管理，面对面沟通，共同承担责任\" },\n                    { title: \"质量保障\", desc: \"测试驱动开发，持续集成，代码审查，自动化部署\" },\n                    { title: \"持续改进\", desc: \"回顾总结，流程优化，技能提升，文化建设\" }\n                ],\n                colors: {\n                    primary: \"#3B82F6\",\n                    secondary: \"#2563EB\", \n                    primaryRgb: \"59, 130, 246\"\n                }\n            },\n            business: {\n                mainTitle: \"用户增长策略\",\n                subtitle: \"User Growth Strategy Framework\",\n                coreTitle: \"核心要点\",\n                coreContent: \"构建用户增长飞轮，通过数据驱动的获客、激活、留存、推荐全链路优化，实现可持续的业务增长\",\n                quote: '\"增长不是偶然，而是系统性思考和持续优化的结果\"<br>—— 增长黑客理论',\n                dimensions: [\n                    { title: \"获客渠道\", desc: \"多元化流量来源，精准投放，成本控制，渠道效果评估\", featured: true },\n                    { title: \"用户激活\", desc: \"优化首次体验，降低使用门槛，提升转化率，缩短激活路径\" },\n                    { title: \"留存策略\", desc: \"产品价值体现，用户习惯培养，生命周期管理，流失预警\" },\n                    { title: \"推荐机制\", desc: \"口碑传播，激励分享，病毒式增长，社交裂变\" },\n                    { title: \"数据分析\", desc: \"关键指标监控，用户行为分析，增长实验，决策支持\" }\n                ],\n                colors: {\n                    primary: \"#F59E0B\",\n                    secondary: \"#D97706\",\n                    primaryRgb: \"245, 158, 11\"\n                }\n            },\n            custom: {\n                mainTitle: \"自定义标题\",\n                subtitle: \"Custom Subtitle\",\n                coreTitle: \"核心理念\",\n                coreContent: \"请在这里填写您的核心内容和理念描述。\",\n                quote: '\"请在这里填写您的引用语句或重要表述\"<br>—— 引用来源',\n                dimensions: [\n                    { title: \"维度一\", desc: \"请填写第一个维度的描述内容\", featured: true },\n                    { title: \"维度二\", desc: \"请填写第二个维度的描述内容\" },\n                    { title: \"维度三\", desc: \"请填写第三个维度的描述内容\" },\n                    { title: \"维度四\", desc: \"请填写第四个维度的描述内容\" },\n                    { title: \"维度五\", desc: \"请填写第五个维度的描述内容\" }\n                ],\n                colors: {\n                    primary: \"#8B5CF6\",\n                    secondary: \"#7C3AED\",\n                    primaryRgb: \"139, 92, 246\"\n                }\n            }\n        };\n\n        // 当前配置\n        let currentTemplate = 'project';\n        let currentThemeIndex = 0;\n        const templateKeys = Object.keys(cardTemplates);\n\n        // 初始化页面\n        function initPage() {\n            setTimeout(() => {\n                document.getElementById('mainContainer').classList.add('loaded');\n            }, 100);\n            \n            loadTemplate('project');\n            initializePagination();\n            \n            // 键盘事件监听\n            document.addEventListener('keydown', handleKeyPress);\n            \n            // 触摸事件监听（移动端滑动切换）\n            initializeTouchEvents();\n        }\n\n        // 初始化分页指示器\n        function initializePagination() {\n            const pageIndicators = document.getElementById('pageIndicators');\n            pageIndicators.innerHTML = '';\n            \n            templateKeys.forEach((key, index) => {\n                const dot = document.createElement('div');\n                dot.className = `page-dot ${index === currentThemeIndex ? 'active' : ''}`;\n                dot.onclick = () => {\n                    currentThemeIndex = index;\n                    loadTemplate(templateKeys[index]);\n                    updatePagination();\n                };\n                pageIndicators.appendChild(dot);\n            });\n            \n            updatePagination();\n        }\n\n        // 更新分页状态\n        function updatePagination() {\n            const dots = document.querySelectorAll('.page-dot');\n            dots.forEach((dot, index) => {\n                dot.classList.toggle('active', index === currentThemeIndex);\n            });\n            \n            document.getElementById('pageInfo').textContent = `${currentThemeIndex + 1} / ${templateKeys.length}`;\n        }\n\n        // 键盘导航\n        function handleKeyPress(e) {\n            if (e.key === 'ArrowLeft') {\n                e.preventDefault();\n                switchToPrevTemplate();\n            } else if (e.key === 'ArrowRight') {\n                e.preventDefault();\n                switchToNextTemplate();\n            }\n        }\n\n        // 触摸事件初始化（移动端滑动）\n        function initializeTouchEvents() {\n            let startX = 0;\n            let endX = 0;\n            \n            const card = document.getElementById('knowledgeCard');\n            \n            card.addEventListener('touchstart', (e) => {\n                startX = e.touches[0].clientX;\n            });\n            \n            card.addEventListener('touchend', (e) => {\n                endX = e.changedTouches[0].clientX;\n                handleSwipe();\n            });\n            \n            function handleSwipe() {\n                const threshold = 50;\n                const diff = startX - endX;\n                \n                if (Math.abs(diff) > threshold) {\n                    if (diff > 0) {\n                        // 向左滑动，显示下一个\n                        switchToNextTemplate();\n                    } else {\n                        // 向右滑动，显示上一个\n                        switchToPrevTemplate();\n                    }\n                }\n            }\n        }\n\n        // 切换到上一个模板\n        function switchToPrevTemplate() {\n            if (currentThemeIndex > 0) {\n                currentThemeIndex--;\n                loadTemplate(templateKeys[currentThemeIndex]);\n                updatePagination();\n            }\n        }\n\n        // 切换到下一个模板\n        function switchToNextTemplate() {\n            if (currentThemeIndex < templateKeys.length - 1) {\n                currentThemeIndex++;\n                loadTemplate(templateKeys[currentThemeIndex]);\n                updatePagination();\n            }\n        }\n\n        // 加载模板\n        function loadTemplate(templateName) {\n            currentTemplate = templateName;\n            const template = cardTemplates[templateName];\n            \n            // 设置CSS变量\n            document.documentElement.style.setProperty('--primary-color', template.colors.primary);\n            document.documentElement.style.setProperty('--secondary-color', template.colors.secondary);\n            document.documentElement.style.setProperty('--primary-rgb', template.colors.primaryRgb);\n            \n            // 更新内容\n            document.getElementById('mainTitle').textContent = template.mainTitle;\n            document.getElementById('subtitle').textContent = template.subtitle;\n            document.getElementById('coreTitle').textContent = template.coreTitle;\n            document.getElementById('coreContent').textContent = template.coreContent;\n            document.getElementById('quoteSection').innerHTML = template.quote;\n            \n            // 更新维度\n            const rightSection = document.getElementById('rightSection');\n            rightSection.innerHTML = '';\n            \n            template.dimensions.forEach((dim, index) => {\n                const dimensionItem = document.createElement('div');\n                dimensionItem.className = `dimension-item ${dim.featured ? 'featured' : ''}`;\n                dimensionItem.innerHTML = `\n                    <div class=\"number-circle\">${index + 1}</div>\n                    <div class=\"dimension-content\">\n                        <h4>${dim.title}</h4>\n                        <p>${dim.desc}</p>\n                    </div>\n                `;\n                rightSection.appendChild(dimensionItem);\n            });\n            \n            // 重新触发动画\n            restartAnimations();\n        }\n\n        // 重启动画\n        function restartAnimations() {\n            const elements = document.querySelectorAll('.dimension-item, .number-circle');\n            elements.forEach(el => {\n                el.style.animation = 'none';\n                el.offsetHeight; // 触发重流\n                el.style.animation = '';\n            });\n        }\n\n        // 显示状态消息\n        function showStatusMessage(message, type = 'info') {\n            const statusMessage = document.getElementById('statusMessage');\n            statusMessage.textContent = message;\n            statusMessage.className = 'status-message show';\n            \n            setTimeout(() => {\n                statusMessage.className = 'status-message';\n            }, 3000);\n        }\n\n        // 兼容性圆角矩形绘制函数\n        function drawRoundRect(ctx, x, y, width, height, radius) {\n            ctx.beginPath();\n            ctx.moveTo(x + radius, y);\n            ctx.lineTo(x + width - radius, y);\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n            ctx.lineTo(x + width, y + height - radius);\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n            ctx.lineTo(x + radius, y + height);\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n            ctx.lineTo(x, y + radius);\n            ctx.quadraticCurveTo(x, y, x + radius, y);\n            ctx.closePath();\n        }\n\n        // 文本换行函数\n        function wrapText(ctx, text, maxWidth) {\n            const words = text.split('');\n            const lines = [];\n            let currentLine = '';\n\n            for (let i = 0; i < words.length; i++) {\n                const testLine = currentLine + words[i];\n                const metrics = ctx.measureText(testLine);\n                \n                if (metrics.width > maxWidth && currentLine !== '') {\n                    lines.push(currentLine);\n                    currentLine = words[i];\n                } else {\n                    currentLine = testLine;\n                }\n            }\n            lines.push(currentLine);\n            return lines;\n        }\n\n        // 复制卡片为图片\n        async function copyCardAsImage() {\n            const button = document.getElementById('copyButton');\n            const template = cardTemplates[currentTemplate];\n            \n            try {\n                button.classList.add('success');\n                button.innerHTML = `\n                    <svg class=\"copy-icon\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/>\n                    </svg>\n                    <span>……</span>\n                `;\n                \n                // 创建高清Canvas - 使用3倍分辨率\n                const scale = 3; // 3倍分辨率，提供超高清输出\n                const baseWidth = 1200;\n                const baseHeight = 600;\n                \n                const canvas = document.createElement('canvas');\n                const ctx = canvas.getContext('2d');\n                canvas.width = baseWidth * scale;\n                canvas.height = baseHeight * scale;\n                \n                // 缩放上下文以匹配高分辨率\n                ctx.scale(scale, scale);\n                \n                // 启用高质量渲染\n                ctx.imageSmoothingEnabled = true;\n                ctx.imageSmoothingQuality = 'high';\n                ctx.textRenderingOptimization = 'optimizeQuality';\n\n                // 绘制背景渐变\n                const gradient = ctx.createLinearGradient(0, 0, baseWidth, baseHeight);\n                gradient.addColorStop(0, template.colors.primary);\n                gradient.addColorStop(1, template.colors.secondary);\n                ctx.fillStyle = gradient;\n                drawRoundRect(ctx, 0, 0, baseWidth, baseHeight, 20);\n                ctx.fill();\n\n                // 绘制左侧内容 - 使用更大的字体以适配高分辨率\n                ctx.fillStyle = 'white';\n                ctx.font = 'bold 48px Arial, sans-serif';\n                ctx.textAlign = 'left';\n                ctx.textBaseline = 'top';\n                ctx.fillText(template.mainTitle, 40, 40);\n\n                ctx.save();\n                ctx.globalAlpha = 0.9;\n                ctx.font = '20px Arial, sans-serif';\n                ctx.fillText(template.subtitle, 40, 100);\n                ctx.restore();\n\n                // 核心理念框\n                ctx.save();\n                ctx.globalAlpha = 0.15;\n                ctx.fillStyle = 'white';\n                drawRoundRect(ctx, 40, 140, 520, 120, 16);\n                ctx.fill();\n                ctx.restore();\n\n                ctx.save();\n                ctx.globalAlpha = 0.2;\n                ctx.strokeStyle = 'white';\n                ctx.lineWidth = 2;\n                drawRoundRect(ctx, 40, 140, 520, 120, 16);\n                ctx.stroke();\n                ctx.restore();\n\n                ctx.fillStyle = 'white';\n                ctx.font = 'bold 18px Arial, sans-serif';\n                ctx.fillText(template.coreTitle, 64, 164);\n\n                ctx.font = '16px Arial, sans-serif';\n                const wrappedCore = wrapText(ctx, template.coreContent, 480);\n                wrappedCore.forEach((line, index) => {\n                    ctx.fillText(line, 64, 194 + index * 22);\n                });\n\n                // 引用区域\n                ctx.save();\n                ctx.globalAlpha = 0.4;\n                ctx.fillStyle = 'white';\n                ctx.fillRect(40, 400, 4, 140);\n                ctx.restore();\n\n                ctx.fillStyle = 'white';\n                ctx.font = 'italic 16px Arial, sans-serif';\n                const quoteText = template.quote.replace(/<br>/g, '\\n').replace(/—— /g, '\\n—— ');\n                const quoteLines = quoteText.split('\\n');\n                quoteLines.forEach((line, index) => {\n                    ctx.fillText(line, 64, 410 + index * 24);\n                });\n\n                // 绘制右侧白色背景\n                ctx.fillStyle = 'white';\n                drawRoundRect(ctx, 600, 0, 560, 600, 20);\n                ctx.fill();\n\n                // 绘制右侧内容\n                template.dimensions.forEach((dim, index) => {\n                    const y = 32 + index * 108;\n                    \n                    // 第一个维度的装饰框\n                    if (dim.featured) {\n                        ctx.save();\n                        ctx.globalAlpha = 0.05;\n                        ctx.fillStyle = template.colors.primary;\n                        drawRoundRect(ctx, 616, y - 16, 528, 88, 12);\n                        ctx.fill();\n                        ctx.restore();\n\n                        ctx.strokeStyle = template.colors.primary;\n                        ctx.lineWidth = 2;\n                        ctx.setLineDash([8, 4]);\n                        drawRoundRect(ctx, 616, y - 16, 528, 88, 12);\n                        ctx.stroke();\n                        ctx.setLineDash([]);\n                    }\n\n                    // 绘制数字圆圈\n                    const circleX = 648;\n                    const circleY = y + 16;\n                    const circleGradient = ctx.createRadialGradient(circleX, circleY, 0, circleX, circleY, 16);\n                    circleGradient.addColorStop(0, template.colors.primary);\n                    circleGradient.addColorStop(1, template.colors.secondary);\n                    \n                    ctx.fillStyle = circleGradient;\n                    ctx.beginPath();\n                    ctx.arc(circleX, circleY, 16, 0, Math.PI * 2);\n                    ctx.fill();\n\n                    ctx.fillStyle = 'white';\n                    ctx.font = 'bold 14px Arial, sans-serif';\n                    ctx.textAlign = 'center';\n                    ctx.textBaseline = 'middle';\n                    ctx.fillText((index + 1).toString(), circleX, circleY);\n\n                    // 绘制标题和描述\n                    ctx.fillStyle = '#333';\n                    ctx.font = 'bold 16px Arial, sans-serif';\n                    ctx.textAlign = 'left';\n                    ctx.textBaseline = 'top';\n                    ctx.fillText(dim.title, 680, y);\n\n                    ctx.fillStyle = '#666';\n                    ctx.font = '14px Arial, sans-serif';\n                    const wrappedDesc = wrapText(ctx, dim.desc, 460);\n                    wrappedDesc.forEach((line, lineIndex) => {\n                        ctx.fillText(line, 680, y + 24 + lineIndex * 18);\n                    });\n                });\n\n                // 复制到剪贴板 - 使用最高质量设置\n                canvas.toBlob(async (blob) => {\n                    try {\n                        const item = new ClipboardItem({ 'image/png': blob });\n                        await navigator.clipboard.write([item]);\n                        \n                        // 成功反馈\n                        button.innerHTML = `\n                            <svg class=\"copy-icon\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/>\n                            </svg>\n                            <span>已复制</span>\n                        `;\n                        showStatusMessage('高清卡片已复制到剪贴板！');\n                        \n                        setTimeout(() => {\n                            button.classList.remove('success');\n                            button.innerHTML = `\n                                <svg class=\"copy-icon\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"/>\n                                </svg>\n                                <span>PNG</span>\n                            `;\n                        }, 2000);\n                        \n                    } catch (err) {\n                        throw err;\n                    }\n                }, 'image/png', 1.0); // 最高质量输出\n\n            } catch (error) {\n                console.error('复制失败:', error);\n                \n                // 失败反馈\n                button.classList.remove('success');\n                button.classList.add('error');\n                button.innerHTML = `\n                    <svg class=\"copy-icon\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                    </svg>\n                    <span>复制失败</span>\n                `;\n                showStatusMessage('复制失败，请重试或检查浏览器权限');\n                \n                setTimeout(() => {\n                    button.classList.remove('error');\n                    button.innerHTML = `\n                        <svg class=\"copy-icon\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"/>\n                        </svg>\n                        <span>PNG</span>\n                    `;\n                }, 2000);\n            }\n        }\n\n        // 页面加载完成后初始化\n        window.addEventListener('load', initPage);\n    </script>\n</body>\n</html>",
      "codeLang": "html"
    },
    {
      "description": "“写作助手”是一款先进的AI驱动的文本编辑器，旨在显著提升写作质量和效率。它提供全面的智能分析，检查**语法**、**拼写**、**标点符号**、**写作风格**和**表达清晰度**等方面的问题。用户可以将文本粘贴或直接输入到富文本编辑器中，该编辑器支持粗体、斜体、下划线、文字颜色、字号和对齐方式等基本格式设置。其核心功能是AI驱动的建议：它会高亮显示文本中的问题区域，并为每个推荐的修改提供详细解释，同时展示原文和建议修改后的对比。用户可以单独**接受**或**拒绝**建议，也可以通过单击**一键应用所有建议**。该工具还支持编辑器缩放、浅色/深色模式，并为移动用户提供了可移动、可最小化的建议面板，使其成为一个灵活而强大的写作辅助工具。",
      "category": "creative",
      "tags": [
        "效率",
        "创意"
      ],
      "difficulty": "intermediate",
      "id": "writerhelper",
      "title": "写作助手",
      "code": "import React, { useState, useEffect, useRef } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { \n  Sparkles, Check, X, Loader2, Sun, Moon, Copy, FileText, Bold, Italic, \n  Underline, Link, AlignLeft, AlignCenter, AlignRight, List, ListOrdered, \n  IndentDecrease, IndentIncrease, Palette, MoveVertical,\n  Eye, EyeOff, RotateCcw, RotateCw, ZoomIn, ZoomOut, ChevronUp, ChevronDown,\n  Move, Minimize2, Maximize2, GripVertical\n} from 'lucide-react';\nimport * as Diff from 'diff';\n\n// 建议提示框组件\nconst SuggestionTooltip = ({ \n  suggestion, \n  position, \n  isDarkMode, \n  isMobile, \n  onApply, \n  onDismiss, \n  onClose,\n  onPrevious,\n  onNext,\n  hasPrevious,\n  hasNext,\n  currentIndex,\n  totalCount\n}) => {\n  // 计算响应式尺寸\n  const getResponsiveSize = () => {\n    const vw = window.innerWidth;\n    const vh = window.innerHeight;\n    \n    if (vw < 480) { // 小屏手机\n      return {\n        width: Math.min(vw - 20, 340),\n        maxHeight: Math.min(vh * 0.8, 400)\n      };\n    } else if (vw < 768) { // 大屏手机/小平板\n      return {\n        width: Math.min(vw - 40, 380),\n        maxHeight: Math.min(vh * 0.7, 450)\n      };\n    } else { // 桌面端\n      return {\n        width: 420,\n        maxHeight: 500\n      };\n    }\n  };\n\n  const { width, maxHeight } = getResponsiveSize();\n\n  // 渲染详细的Diff视图\n  const renderDetailedDiff = (originalText, suggestedText) => {\n    const diff = Diff.diffWordsWithSpace(originalText, suggestedText);\n    \n    return (\n      <div className=\"space-y-2\">\n        <div className=\"text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide\">\n          详细对比分析\n        </div>\n        <div className={`p-3 rounded-md border ${\n          isDarkMode ? 'bg-gray-800 border-gray-600' : 'bg-gray-50 border-gray-300'\n        }`}>\n          <div className=\"text-sm leading-relaxed\" style={{ textAlign: 'justify' }}>\n            {diff.map((part, index) => {\n              if (part.added) {\n                return (\n                  <span\n                    key={index}\n                    className={`px-1 rounded font-medium ${\n                      isDarkMode \n                        ? 'bg-gray-700 text-gray-200 underline' \n                        : 'bg-gray-200 text-gray-800 underline'\n                    }`}\n                    title=\"新增内容\"\n                  >\n                    {part.value}\n                  </span>\n                );\n              } else if (part.removed) {\n                return (\n                  <span\n                    key={index}\n                    className={`px-1 rounded line-through ${\n                      isDarkMode \n                        ? 'bg-gray-700 text-gray-400' \n                        : 'bg-gray-200 text-gray-600'\n                    }`}\n                    title=\"删除内容\"\n                  >\n                    {part.value}\n                  </span>\n                );\n              } else {\n                return (\n                  <span\n                    key={index}\n                    className=\"text-gray-700 dark:text-gray-300\"\n                  >\n                    {part.value}\n                  </span>\n                );\n              }\n            })}\n          </div>\n        </div>\n        \n        {/* 统计信息 */}\n        <div className=\"flex gap-4 text-xs text-gray-500 dark:text-gray-400\">\n          <span>原文: {originalText.length} 字符</span>\n          <span>建议: {suggestedText.length} 字符</span>\n          <span>差异: {Math.abs(suggestedText.length - originalText.length)} 字符</span>\n        </div>\n      </div>\n    );\n  };\n\n  const getCategoryLabel = (category) => {\n    const categoryLabels = {\n      grammar: '语法',\n      spelling: '拼写',\n      punctuation: '标点',\n      style: '文风',\n      clarity: '表达'\n    };\n    return categoryLabels[category] || category;\n  };\n\n  return (\n    <div\n      data-tooltip\n      className={`absolute z-30 rounded-lg shadow-xl border ${\n        isDarkMode \n          ? 'bg-gray-900 border-gray-700' \n          : 'bg-white border-gray-300'\n      }`}\n      style={{\n        top: `${position.top}px`,\n        left: `${position.left}px`,\n        transform: position.isBelow ? 'translateX(-50%)' : 'translate(-50%, -100%)',\n        width: `${width}px`,\n        maxHeight: `${maxHeight}px`\n      }}\n    >\n      {/* 头部区域 */}\n      <div className={`p-3 border-b ${isDarkMode ? 'border-gray-700' : 'border-gray-300'}`}>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <span className={`inline-block px-2 py-1 rounded text-xs font-medium ${\n              isDarkMode \n                ? 'bg-gray-700 text-gray-300' \n                : 'bg-gray-200 text-gray-700'\n            }`}>\n              {getCategoryLabel(suggestion.category)}\n            </span>\n            <span className=\"text-xs text-gray-500 dark:text-gray-400 font-medium\">\n              AI智能建议\n            </span>\n          </div>\n          \n          {/* 导航箭头 */}\n          <div className=\"flex items-center gap-1\">\n            <button\n              onClick={onPrevious}\n              disabled={!hasPrevious}\n              className={`p-1 rounded transition-all text-xs ${\n                hasPrevious\n                  ? 'hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-600 dark:text-gray-300'\n                  : 'text-gray-400 dark:text-gray-600 cursor-not-allowed'\n              }`}\n              title=\"上一个建议\"\n            >\n              <ChevronUp className=\"w-3 h-3\" />\n            </button>\n            <span className=\"text-xs text-gray-500 dark:text-gray-400 px-1 min-w-[32px] text-center\">\n              {currentIndex + 1}/{totalCount}\n            </span>\n            <button\n              onClick={onNext}\n              disabled={!hasNext}\n              className={`p-1 rounded transition-all text-xs ${\n                hasNext\n                  ? 'hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-600 dark:text-gray-300'\n                  : 'text-gray-400 dark:text-gray-600 cursor-not-allowed'\n              }`}\n              title=\"下一个建议\"\n            >\n              <ChevronDown className=\"w-3 h-3\" />\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* 内容区域 - 隐藏滚动条 */}\n      <div \n        className=\"relative p-3 overflow-y-auto\"\n        style={{ \n          maxHeight: `${maxHeight - 120}px`,\n          scrollbarWidth: 'none', /* Firefox */\n          msOverflowStyle: 'none', /* IE and Edge */\n        }}\n      >\n        <style jsx>{`\n          div::-webkit-scrollbar {\n            display: none; /* Chrome, Safari, Opera */\n          }\n        `}</style>\n        \n        {/* 详细的Diff视图 */}\n        {renderDetailedDiff(suggestion.issue, suggestion.suggestion)}\n        \n        {/* 改进说明 */}\n        <div className={`mt-3 p-3 rounded-md border-l-2 ${\n          isDarkMode \n            ? 'bg-gray-800 border-gray-600' \n            : 'bg-gray-50 border-gray-400'\n        }`}>\n          <p className={`text-xs ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n            <strong className=\"flex items-center gap-1 mb-1 text-xs\">\n              <Sparkles className=\"w-3 h-3\" />\n              改进原因：\n            </strong>\n            {suggestion.explanation}\n          </p>\n        </div>\n      </div>\n      \n      {/* 操作按钮 */}\n      <div className={`p-3 border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-300'}`}>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => onApply(suggestion)}\n            className={`flex-1 px-3 py-2 rounded text-xs font-medium transition-all whitespace-nowrap flex items-center justify-center gap-1 ${\n              isDarkMode \n                ? 'bg-gray-700 text-white hover:bg-gray-600' \n                : 'bg-gray-900 text-white hover:bg-gray-800'\n            }`}\n          >\n            <Check className=\"w-3 h-3\" />\n            接受\n          </button>\n          <button\n            onClick={() => onDismiss(suggestion)}\n            className={`flex-1 px-3 py-2 rounded text-xs font-medium transition-all whitespace-nowrap flex items-center justify-center gap-1 ${\n              isDarkMode \n                ? 'bg-gray-600 text-gray-300 hover:bg-gray-500' \n                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n            }`}\n          >\n            <X className=\"w-3 h-3\" />\n            拒绝\n          </button>\n          <button\n            onClick={onClose}\n            className={`px-3 py-2 rounded text-xs font-medium transition-all whitespace-nowrap ${\n              isDarkMode \n                ? 'bg-gray-800 text-gray-400 hover:bg-gray-700' \n                : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n            }`}\n          >\n            关闭\n          </button>\n        </div>\n      </div>\n      \n      {/* 提示框箭头 */}\n      <div \n        className={`absolute w-2 h-2 transform rotate-45 ${\n          isDarkMode ? 'bg-gray-900' : 'bg-white'\n        }`}\n        style={{\n          ...(position.isBelow ? {\n            top: '-4px',\n            left: '50%',\n            transform: 'translateX(-50%) rotate(45deg)',\n            borderLeft: `1px solid ${isDarkMode ? '#374151' : '#d1d5db'}`,\n            borderTop: `1px solid ${isDarkMode ? '#374151' : '#d1d5db'}`\n          } : {\n            bottom: '-4px',\n            left: '50%',\n            transform: 'translateX(-50%) rotate(45deg)',\n            borderRight: `1px solid ${isDarkMode ? '#374151' : '#d1d5db'}`,\n            borderBottom: `1px solid ${isDarkMode ? '#374151' : '#d1d5db'}`\n          })\n        }}\n      />\n    </div>\n  );\n};\n\nconst TextEditor = () => {\n  const [text, setText] = useState('');\n  const [htmlContent, setHtmlContent] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [error, setError] = useState('');\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [activeCategory, setActiveCategory] = useState('all');\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const [showLinkDialog, setShowLinkDialog] = useState(false);\n  const [linkUrl, setLinkUrl] = useState('');\n  const [showLineSpacing, setShowLineSpacing] = useState(false);\n  const [activeTooltip, setActiveTooltip] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({ top: 0, left: 0, isBelow: false });\n  const [showPreview, setShowPreview] = useState(false);\n  const [editorZoom, setEditorZoom] = useState(100);\n  const [analysisType, setAnalysisType] = useState('comprehensive');\n  \n  // 移动端拖拽相关状态\n  const [panelPosition, setPanelPosition] = useState({ x: 20, y: 100 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [isPanelMinimized, setIsPanelMinimized] = useState(false);\n  const [showMobileSuggestions, setShowMobileSuggestions] = useState(false);\n  \n  const editorRef = useRef(null);\n  const panelRef = useRef(null);\n\n  // 响应式断点\n  const isDesktop = useMediaQuery({ minWidth: 1024 });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1023 });\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  const categories = [\n    { id: 'all', label: '全部', color: 'bg-purple-500' },\n    { id: 'grammar', label: '语法', color: 'bg-blue-500' },\n    { id: 'spelling', label: '拼写', color: 'bg-red-500' },\n    { id: 'punctuation', label: '标点', color: 'bg-yellow-500' },\n    { id: 'style', label: '文风', color: 'bg-green-500' },\n    { id: 'clarity', label: '表达', color: 'bg-indigo-500' }\n  ];\n\n  const analysisTypes = [\n    { value: 'comprehensive', label: '全面分析', description: '检查语法、拼写、标点、文风和表达' },\n    { value: 'grammar', label: '语法检查', description: '重点检查语法错误和句式问题' },\n    { value: 'style', label: '文风优化', description: '改进文章风格和表达方式' },\n    { value: 'clarity', label: '表达改进', description: '提升文本清晰度和可读性' },\n    { value: 'academic', label: '学术规范', description: '针对学术写作的专业建议' },\n    { value: 'business', label: '商务文档', description: '适合商务场景的写作建议' }\n  ];\n\n  const sampleTexts = [\n    '内部工作作为企业内部监督控制的重要抓手，必须不断提升履职能力，以适应数字化变革中出现的新需求。在网络强国、数字中国、大数据战略等国家政策的指导下，中央企业正在加快数字化转型，消除\"数据孤岛\"和\"数据烟囱\"，开展大数据与人工智能、物联网等技术融合应用。这一变革使信息载体从纸质变为电子文件，数据量剧增，数据关系复杂且标准不一，同时信息安全风险加大，这对内部工作方法和效率提出了新要求和新挑战。',\n  ];\n\n  const colors = [\n    '#000000', '#FF0000', '#00FF00', '#0000FF', '#FFFF00', \n    '#FF00FF', '#00FFFF', '#FFA500', '#800080', '#008000'\n  ];\n\n  const fonts = [\n    { value: 'Arial', label: 'Arial' },\n    { value: 'Times New Roman', label: 'Times New Roman' },\n    { value: 'Georgia', label: 'Georgia' },\n    { value: 'Verdana', label: 'Verdana' },\n    { value: 'Helvetica', label: 'Helvetica' },\n    { value: 'Courier New', label: 'Courier New' },\n    { value: 'Trebuchet MS', label: 'Trebuchet MS' },\n    { value: 'Microsoft YaHei', label: '微软雅黑' },\n    { value: 'SimSun', label: '宋体' },\n    { value: 'SimHei', label: '黑体' }\n  ];\n\n  const textSizes = [\n    { value: '12px', label: '12' },\n    { value: '14px', label: '14' },\n    { value: '16px', label: '16' },\n    { value: '18px', label: '18' },\n    { value: '20px', label: '20' },\n    { value: '24px', label: '24' },\n    { value: '28px', label: '28' },\n    { value: '32px', label: '32' }\n  ];\n\n  const lineSpacings = [\n    { value: '1', label: '1.0' },\n    { value: '1.15', label: '1.15' },\n    { value: '1.5', label: '1.5' },\n    { value: '2', label: '2.0' },\n    { value: '2.5', label: '2.5' }\n  ];\n\n  // 拖拽处理函数\n  const handleMouseDown = (e) => {\n    if (!isMobile) return;\n    \n    setIsDragging(true);\n    const rect = panelRef.current.getBoundingClientRect();\n    setDragOffset({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n  };\n\n  const handleTouchStart = (e) => {\n    if (!isMobile) return;\n    \n    setIsDragging(true);\n    const touch = e.touches[0];\n    const rect = panelRef.current.getBoundingClientRect();\n    setDragOffset({\n      x: touch.clientX - rect.left,\n      y: touch.clientY - rect.top\n    });\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isDragging || !isMobile) return;\n    \n    const newX = e.clientX - dragOffset.x;\n    const newY = e.clientY - dragOffset.y;\n    \n    // 边界检查\n    const maxX = window.innerWidth - 320; // 面板宽度\n    const maxY = window.innerHeight - 200; // 面板最小高度\n    \n    setPanelPosition({\n      x: Math.max(0, Math.min(newX, maxX)),\n      y: Math.max(0, Math.min(newY, maxY))\n    });\n  };\n\n  const handleTouchMove = (e) => {\n    if (!isDragging || !isMobile) return;\n    \n    const touch = e.touches[0];\n    const newX = touch.clientX - dragOffset.x;\n    const newY = touch.clientY - dragOffset.y;\n    \n    // 边界检查\n    const maxX = window.innerWidth - 320;\n    const maxY = window.innerHeight - 200;\n    \n    setPanelPosition({\n      x: Math.max(0, Math.min(newX, maxX)),\n      y: Math.max(0, Math.min(newY, maxY))\n    });\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  // 生成唯一ID\n  const generateSuggestionId = (suggestion, index) => {\n    // 清理文本，只保留字母、数字和连字符，移除所有特殊字符\n    const cleanText = suggestion.issue\n      .slice(0, 10)\n      .replace(/[^a-zA-Z0-9\\u4e00-\\u9fa5]/g, '') // 移除除字母、数字、中文以外的所有字符\n      .slice(0, 8); // 进一步限制长度\n    \n    return `suggestion-${index}-${cleanText}-${suggestion.category}`;\n  };\n\n  // 执行格式化命令\n  const formatText = (command, value = null) => {\n    if (command === 'fontSize') {\n      const selection = window.getSelection();\n      \n      if (!selection.rangeCount) return;\n      \n      const range = selection.getRangeAt(0);\n      \n      if (range.collapsed) {\n        const allContent = editorRef.current.childNodes;\n        allContent.forEach(node => {\n          if (node.nodeType === Node.TEXT_NODE && node.textContent.trim()) {\n            const span = document.createElement('span');\n            span.style.fontSize = value;\n            span.style.fontFamily = 'Microsoft YaHei, Arial';\n            span.textContent = node.textContent;\n            node.parentNode.replaceChild(span, node);\n          } else if (node.nodeType === Node.ELEMENT_NODE) {\n            node.style.fontSize = value;\n          }\n        });\n      } else {\n        try {\n          const contents = range.extractContents();\n          const span = document.createElement('span');\n          span.style.fontSize = value;\n          \n          while (contents.firstChild) {\n            span.appendChild(contents.firstChild);\n          }\n          \n          range.insertNode(span);\n          range.selectNodeContents(span);\n          selection.removeAllRanges();\n          selection.addRange(range);\n        } catch (e) {\n          document.execCommand('fontSize', false, '7');\n          const tempFonts = editorRef.current.querySelectorAll('font[size=\"7\"]');\n          tempFonts.forEach(font => {\n            const span = document.createElement('span');\n            span.style.fontSize = value;\n            span.innerHTML = font.innerHTML;\n            font.parentNode.replaceChild(span, font);\n          });\n        }\n      }\n    } else {\n      document.execCommand(command, false, value);\n    }\n    \n    editorRef.current.focus();\n    updateContent();\n  };\n\n  // 更新内容\n  const updateContent = () => {\n    if (editorRef.current) {\n      const html = editorRef.current.innerHTML;\n      setHtmlContent(html);\n      \n      setActiveTooltip(null);\n      \n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = html;\n      \n      const marks = tempDiv.querySelectorAll('mark');\n      marks.forEach(mark => {\n        const textNode = document.createTextNode(mark.textContent);\n        mark.parentNode.replaceChild(textNode, mark);\n      });\n      \n      tempDiv.innerHTML = tempDiv.innerHTML.replace(/<br\\s*\\/?>/gi, '\\n');\n      \n      const plainText = tempDiv.textContent || '';\n      setText(plainText);\n    }\n  };\n\n  // 处理高亮点击\n  const handleHighlightClick = (e, suggestionId) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    const matchingSuggestionIndex = suggestions.findIndex((s, index) => \n      generateSuggestionId(s, index) === suggestionId\n    );\n    \n    if (matchingSuggestionIndex === -1) return;\n    \n    const matchingSuggestion = suggestions[matchingSuggestionIndex];\n    \n    const rect = e.target.getBoundingClientRect();\n    const editorRect = editorRef.current.getBoundingClientRect();\n    \n    let top = rect.top - editorRect.top - 10;\n    let left = rect.left - editorRect.left + (rect.width / 2);\n    let isBelow = false;\n    \n    if (top < 150) {\n      top = rect.bottom - editorRect.top + 10;\n      isBelow = true;\n    }\n    \n    const tooltipWidth = isMobile ? 340 : 420;\n    if (left - tooltipWidth/2 < 10) {\n      left = tooltipWidth/2 + 10;\n    } else if (left + tooltipWidth/2 > editorRect.width - 10) {\n      left = editorRect.width - tooltipWidth/2 - 10;\n    }\n    \n    setTooltipPosition({ top, left, isBelow });\n    setActiveTooltip({ ...matchingSuggestion, index: matchingSuggestionIndex });\n  };\n\n  // 切换到上一个建议\n  const handlePreviousSuggestion = () => {\n    if (!activeTooltip || activeTooltip.index <= 0) return;\n    \n    const prevIndex = activeTooltip.index - 1;\n    const prevSuggestion = suggestions[prevIndex];\n    \n    // 找到对应的高亮元素并触发点击\n    const highlightElement = editorRef.current.querySelector(`mark[data-suggestion-id=\"${generateSuggestionId(prevSuggestion, prevIndex)}\"]`);\n    if (highlightElement) {\n      const rect = highlightElement.getBoundingClientRect();\n      const editorRect = editorRef.current.getBoundingClientRect();\n      \n      let top = rect.top - editorRect.top - 10;\n      let left = rect.left - editorRect.left + (rect.width / 2);\n      let isBelow = false;\n      \n      if (top < 150) {\n        top = rect.bottom - editorRect.top + 10;\n        isBelow = true;\n      }\n      \n      const tooltipWidth = isMobile ? 340 : 420;\n      if (left - tooltipWidth/2 < 10) {\n        left = tooltipWidth/2 + 10;\n      } else if (left + tooltipWidth/2 > editorRect.width - 10) {\n        left = editorRect.width - tooltipWidth/2 - 10;\n      }\n      \n      setTooltipPosition({ top, left, isBelow });\n      setActiveTooltip({ ...prevSuggestion, index: prevIndex });\n    }\n  };\n\n  // 切换到下一个建议\n  const handleNextSuggestion = () => {\n    if (!activeTooltip || activeTooltip.index >= suggestions.length - 1) return;\n    \n    const nextIndex = activeTooltip.index + 1;\n    const nextSuggestion = suggestions[nextIndex];\n    \n    // 找到对应的高亮元素并触发点击\n    const highlightElement = editorRef.current.querySelector(`mark[data-suggestion-id=\"${generateSuggestionId(nextSuggestion, nextIndex)}\"]`);\n    if (highlightElement) {\n      const rect = highlightElement.getBoundingClientRect();\n      const editorRect = editorRef.current.getBoundingClientRect();\n      \n      let top = rect.top - editorRect.top - 10;\n      let left = rect.left - editorRect.left + (rect.width / 2);\n      let isBelow = false;\n      \n      if (top < 150) {\n        top = rect.bottom - editorRect.top + 10;\n        isBelow = true;\n      }\n      \n      const tooltipWidth = isMobile ? 340 : 420;\n      if (left - tooltipWidth/2 < 10) {\n        left = tooltipWidth/2 + 10;\n      } else if (left + tooltipWidth/2 > editorRect.width - 10) {\n        left = editorRect.width - tooltipWidth/2 - 10;\n      }\n      \n      setTooltipPosition({ top, left, isBelow });\n      setActiveTooltip({ ...nextSuggestion, index: nextIndex });\n    }\n  };\n\n  // 应用高亮\n  const applyHighlights = () => {\n    if (!editorRef.current || suggestions.length === 0) return;\n    \n    let currentPlainText = text;\n    let highlightedHTML = '';\n    let lastIndex = 0;\n    \n    const processedSuggestions = suggestions.map((suggestion, index) => {\n      const { issue, suggestion: replacementText, category } = suggestion;\n      \n      const issueIndex = currentPlainText.indexOf(issue, lastIndex);\n      if (issueIndex === -1) {\n        console.warn(`无法找到文本片段: \"${issue}\"`);\n        return null;\n      }\n      \n      const diff = Diff.diffWordsWithSpace(issue, replacementText);\n      \n      return {\n        ...suggestion,\n        id: generateSuggestionId(suggestion, index),\n        startIndex: issueIndex,\n        endIndex: issueIndex + issue.length,\n        diff: diff,\n        category\n      };\n    }).filter(Boolean).sort((a, b) => a.startIndex - b.startIndex);\n    \n    processedSuggestions.forEach((processedSuggestion, index) => {\n      const { startIndex, endIndex, id, category } = processedSuggestion;\n      \n      if (startIndex > lastIndex) {\n        highlightedHTML += escapeHtml(currentPlainText.slice(lastIndex, startIndex));\n      }\n      \n      const categoryColors = {\n        grammar: 'rgba(59, 130, 246, 0.3)',\n        spelling: 'rgba(239, 68, 68, 0.3)',\n        punctuation: 'rgba(245, 158, 11, 0.3)',\n        style: 'rgba(34, 197, 94, 0.3)',\n        clarity: 'rgba(99, 102, 241, 0.3)'\n      };\n      \n      const color = categoryColors[category] || 'rgba(147, 51, 234, 0.3)';\n      const issueText = currentPlainText.slice(startIndex, endIndex);\n      \n      highlightedHTML += `<mark data-suggestion-id=\"${id}\" style=\"background-color: ${color}; padding: 2px 4px; border-radius: 3px; cursor: pointer; transition: all 0.2s; border-left: 3px solid ${categoryColors[category]?.replace('0.3', '0.8') || 'rgba(147, 51, 234, 0.8)'};\" onmouseover=\"this.style.filter='brightness(0.85)'; this.style.transform='scale(1.02)'\" onmouseout=\"this.style.filter='brightness(1)'; this.style.transform='scale(1)'\" title=\"点击查看详细改进建议\">${escapeHtml(issueText)}</mark>`;\n      \n      lastIndex = endIndex;\n    });\n    \n    if (lastIndex < currentPlainText.length) {\n      highlightedHTML += escapeHtml(currentPlainText.slice(lastIndex));\n    }\n    \n    highlightedHTML = highlightedHTML.replace(/\\n/g, '<br>');\n    \n    if (highlightedHTML) {\n      highlightedHTML = `<div style=\"font-family: Microsoft YaHei, Arial; font-size: 16px; line-height: 1.6;\">${highlightedHTML}</div>`;\n    }\n    \n    editorRef.current.innerHTML = highlightedHTML;\n  };\n\n  // 转义HTML字符\n  const escapeHtml = (text) => {\n    return text\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#039;');\n  };\n\n  // 更新高亮\n  useEffect(() => {\n    if (suggestions.length > 0) {\n      applyHighlights();\n      // 移动端自动显示建议面板\n      if (isMobile && suggestions.length > 0) {\n        setShowMobileSuggestions(true);\n      }\n    }\n  }, [suggestions, text]);\n\n  // 添加点击处理器\n  useEffect(() => {\n    if (!editorRef.current) return;\n    \n    const handleEditorClick = (e) => {\n      if (e.target.tagName === 'MARK') {\n        const suggestionId = e.target.getAttribute('data-suggestion-id');\n        if (suggestionId) {\n          handleHighlightClick(e, suggestionId);\n        }\n      }\n    };\n    \n    editorRef.current.addEventListener('click', handleEditorClick);\n    return () => {\n      if (editorRef.current) {\n        editorRef.current.removeEventListener('click', handleEditorClick);\n      }\n    };\n  }, [suggestions]);\n\n  // 处理拖拽事件\n  useEffect(() => {\n    if (!isMobile) return;\n    \n    const handleGlobalMouseMove = (e) => handleMouseMove(e);\n    const handleGlobalMouseUp = () => handleMouseUp();\n    const handleGlobalTouchMove = (e) => handleTouchMove(e);\n    const handleGlobalTouchEnd = () => handleMouseUp();\n    \n    if (isDragging) {\n      document.addEventListener('mousemove', handleGlobalMouseMove);\n      document.addEventListener('mouseup', handleGlobalMouseUp);\n      document.addEventListener('touchmove', handleGlobalTouchMove);\n      document.addEventListener('touchend', handleGlobalTouchEnd);\n    }\n    \n    return () => {\n      document.removeEventListener('mousemove', handleGlobalMouseMove);\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\n      document.removeEventListener('touchmove', handleGlobalTouchMove);\n      document.removeEventListener('touchend', handleGlobalTouchEnd);\n    };\n  }, [isDragging, dragOffset, isMobile]);\n\n  // 处理外部点击和窗口大小变化\n  useEffect(() => {\n    const handleClickOutside = (e) => {\n      const isColorPicker = e.target.closest('[data-dropdown=\"color\"]');\n      const isLineSpacing = e.target.closest('[data-dropdown=\"line-spacing\"]');\n      const isTooltip = e.target.closest('[data-tooltip]');\n      const isHighlight = e.target.tagName === 'MARK';\n      const isPanel = e.target.closest('[data-mobile-panel]');\n      \n      if (!isColorPicker) {\n        setShowColorPicker(false);\n      }\n      if (!isLineSpacing) {\n        setShowLineSpacing(false);\n      }\n      if (!isTooltip && !isHighlight) {\n        setActiveTooltip(null);\n      }\n      // 移动端点击面板外部关闭面板\n      if (isMobile && !isPanel && showMobileSuggestions) {\n        setShowMobileSuggestions(false);\n      }\n    };\n\n    const handleResize = () => {\n      // 移动端调整面板位置\n      if (isMobile && showMobileSuggestions) {\n        const maxX = window.innerWidth - 320;\n        const maxY = window.innerHeight - 200;\n        setPanelPosition(prev => ({\n          x: Math.max(0, Math.min(prev.x, maxX)),\n          y: Math.max(0, Math.min(prev.y, maxY))\n        }));\n      }\n      \n      // 如果有活动的提示框，重新计算位置\n      if (activeTooltip && editorRef.current) {\n        const highlightElement = editorRef.current.querySelector(`mark[data-suggestion-id=\"${generateSuggestionId(suggestions[activeTooltip.index], activeTooltip.index)}\"]`);\n        if (highlightElement) {\n          const rect = highlightElement.getBoundingClientRect();\n          const editorRect = editorRef.current.getBoundingClientRect();\n          \n          let top = rect.top - editorRect.top - 10;\n          let left = rect.left - editorRect.left + (rect.width / 2);\n          let isBelow = false;\n          \n          if (top < 150) {\n            top = rect.bottom - editorRect.top + 10;\n            isBelow = true;\n          }\n          \n          // 响应式宽度计算\n          const vw = window.innerWidth;\n          const tooltipWidth = vw < 480 ? Math.min(vw - 20, 340) : vw < 768 ? Math.min(vw - 40, 380) : 420;\n          \n          if (left - tooltipWidth/2 < 10) {\n            left = tooltipWidth/2 + 10;\n          } else if (left + tooltipWidth/2 > editorRect.width - 10) {\n            left = editorRect.width - tooltipWidth/2 - 10;\n          }\n          \n          setTooltipPosition({ top, left, isBelow });\n        }\n      }\n    };\n    \n    document.addEventListener('mousedown', handleClickOutside);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [activeTooltip, suggestions, isMobile, showMobileSuggestions]);\n\n  // 处理粘贴\n  const handlePaste = (e) => {\n    e.preventDefault();\n    \n    const text = e.clipboardData.getData('text/plain');\n    \n    const paragraphs = text.split('\\n\\n').map(p => p.trim()).filter(p => p);\n    const cleanHTML = paragraphs\n      .map(p => {\n        const withBreaks = p.replace(/\\n/g, '<br>');\n        return `<span style=\"font-family: Microsoft YaHei, Arial; font-size: 16px;\">${withBreaks}</span>`;\n      })\n      .join('<br><br>');\n    \n    const selection = window.getSelection();\n    if (!selection.rangeCount) return;\n    \n    selection.deleteFromDocument();\n    const range = selection.getRangeAt(0);\n    const fragment = range.createContextualFragment(cleanHTML);\n    range.insertNode(fragment);\n    \n    range.collapse(false);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    \n    updateContent();\n  };\n\n  // 处理复制\n  const handleCopy = (e) => {\n    const selection = window.getSelection();\n    if (selection.rangeCount === 0) return;\n    \n    const range = selection.getRangeAt(0);\n    const clonedSelection = range.cloneContents();\n    \n    const tempDiv = document.createElement('div');\n    tempDiv.appendChild(clonedSelection);\n    \n    const marks = tempDiv.querySelectorAll('mark');\n    marks.forEach(mark => {\n      const span = document.createElement('span');\n      span.innerHTML = mark.innerHTML;\n      const parent = mark.parentElement;\n      if (parent && parent.style.fontSize) {\n        span.style.fontSize = parent.style.fontSize;\n      }\n      if (parent && parent.style.fontFamily) {\n        span.style.fontFamily = parent.style.fontFamily;\n      }\n      mark.parentNode.replaceChild(span, mark);\n    });\n    \n    const allElements = tempDiv.querySelectorAll('*');\n    allElements.forEach(el => {\n      if (el.style) {\n        el.style.backgroundColor = '';\n        el.style.background = '';\n        el.style.backgroundImage = '';\n        el.style.backgroundClip = '';\n        el.style.webkitBackgroundClip = '';\n        el.style.webkitTextFillColor = '';\n      }\n    });\n    \n    e.clipboardData.setData('text/plain', tempDiv.textContent);\n    e.clipboardData.setData('text/html', tempDiv.innerHTML);\n    e.preventDefault();\n  };\n\n  // 插入链接\n  const insertLink = () => {\n    if (linkUrl) {\n      formatText('createLink', linkUrl);\n      setShowLinkDialog(false);\n      setLinkUrl('');\n    }\n  };\n\n  const loadSampleText = () => {\n    const randomSample = sampleTexts[Math.floor(Math.random() * sampleTexts.length)];\n    if (editorRef.current) {\n      const paragraphs = randomSample.split('\\n\\n').map(p => p.trim()).filter(p => p);\n      const htmlContent = paragraphs\n        .map(p => `<div style=\"font-family: Microsoft YaHei, Arial; font-size: 16px; line-height: 1.6; margin-bottom: 1em;\">${p}</div>`)\n        .join('');\n      \n      editorRef.current.innerHTML = htmlContent;\n      updateContent();\n    }\n  };\n\n  const getAnalysisPrompt = (textToAnalyze, type) => {\n    const basePrompt = `请分析以下文本并提供具体的改进建议。要分析的文本：\\n\"${textToAnalyze}\"\\n\\n重要提示：在识别问题时，请保留准确的文本，包括所有引号、撇号和特殊字符。\\n\\n`;\n    \n    const typeSpecificPrompts = {\n      comprehensive: `重点关注语法、拼写、标点符号、文风和表达清晰度。`,\n      grammar: `重点检查语法错误、句式问题、时态一致性和语言规范性。`,\n      style: `重点关注文章风格、表达方式、词汇选择和语言感染力的改进。`,\n      clarity: `重点提升文本的清晰度、逻辑性和可读性，确保表达准确易懂。`,\n      academic: `按照学术写作规范，检查术语使用、引用格式、论证逻辑和表达严谨性。`,\n      business: `针对商务场景，改进专业表达、正式语调和商务沟通效果。`\n    };\n    \n    const responseFormat = `\\n\\n请回复一个JSON数组，包含建议对象。每个对象应该有：\n- category: \"grammar\", \"spelling\", \"punctuation\", \"style\", 或 \"clarity\" 中的一个\n- issue: 需要改进的准确文本（包括任何引号或特殊字符）\n- suggestion: 更正或改进的版本\n- explanation: 为什么这个更改可以改进文本的简要说明\n- position: 文本中的大致起始位置（字符索引）\n\n只包括实际需要更正的问题。如果文本完美，返回空数组。\n\n你的整个回复必须是有效的JSON数组。不要在JSON结构之外包含任何文本。`;\n\n    return basePrompt + typeSpecificPrompts[type] + responseFormat;\n  };\n\n  const analyzeText = async () => {\n    if (editorRef.current) {\n      const cleanHTML = text.split('\\n\\n').map(p => p.trim()).filter(p => p)\n        .map(p => `<div style=\"font-family: Microsoft YaHei, Arial; font-size: 16px; line-height: 1.6; margin-bottom: 1em;\">${escapeHtml(p).replace(/\\n/g, '<br>')}</div>`)\n        .join('');\n      \n      editorRef.current.innerHTML = cleanHTML;\n      updateContent();\n    }\n    \n    if (!text.trim()) {\n      setError('请输入一些文本进行分析');\n      return;\n    }\n\n    setIsAnalyzing(true);\n    setError('');\n    setSuggestions([]);\n\n    try {\n      const textToAnalyze = text;\n      const prompt = getAnalysisPrompt(textToAnalyze, analysisType);\n\n      const response = await window.claude.complete(prompt);\n      let cleanedResponse = response.trim();\n      \n      if (cleanedResponse.startsWith('```json')) {\n        cleanedResponse = cleanedResponse.substring(7);\n      } else if (cleanedResponse.startsWith('```')) {\n        cleanedResponse = cleanedResponse.substring(3);\n      }\n      \n      if (cleanedResponse.endsWith('```')) {\n        cleanedResponse = cleanedResponse.substring(0, cleanedResponse.length - 3);\n      }\n      \n      cleanedResponse = cleanedResponse.trim();\n      \n      try {\n        const parsedSuggestions = JSON.parse(cleanedResponse);\n        if (Array.isArray(parsedSuggestions)) {\n          setSuggestions(parsedSuggestions);\n        } else {\n          throw new Error('无效的响应格式');\n        }\n      } catch (parseError) {\n        console.error('解析错误:', parseError);\n        setError('无法解析建议。请重试。');\n      }\n    } catch (err) {\n      console.error('分析错误:', err);\n      setError('无法分析文本。请重试。');\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  // 应用建议\n  const applySuggestion = (suggestion) => {\n    if (!editorRef.current) return;\n    \n    const currentText = text;\n    const { issue, suggestion: replacementText } = suggestion;\n    \n    const issueIndex = currentText.indexOf(issue);\n    if (issueIndex === -1) {\n      console.warn(`无法在文本中找到: \"${issue}\"`);\n      return;\n    }\n    \n    const beforeText = currentText.slice(0, issueIndex);\n    const afterText = currentText.slice(issueIndex + issue.length);\n    const newText = beforeText + replacementText + afterText;\n    \n    const paragraphs = newText.split('\\n\\n').map(p => p.trim()).filter(p => p);\n    const newHtmlContent = paragraphs\n      .map(p => `<div style=\"font-family: Microsoft YaHei, Arial; font-size: 16px; line-height: 1.6; margin-bottom: 1em;\">${escapeHtml(p).replace(/\\n/g, '<br>')}</div>`)\n      .join('');\n    \n    editorRef.current.innerHTML = newHtmlContent;\n    updateContent();\n    \n    setSuggestions(prevSuggestions => prevSuggestions.filter(s => s !== suggestion));\n    \n    if (activeTooltip && activeTooltip.issue === suggestion.issue) {\n      setActiveTooltip(null);\n    }\n  };\n\n  const filteredSuggestions = activeCategory === 'all' \n    ? suggestions \n    : suggestions.filter(s => s.category === activeCategory);\n\n  const getCategoryColor = (category) => {\n    const cat = categories.find(c => c.id === category);\n    return cat ? cat.color : 'bg-gray-500';\n  };\n\n  const copyText = () => {\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = editorRef.current.innerHTML;\n    tempDiv.style.position = 'absolute';\n    tempDiv.style.left = '-9999px';\n    tempDiv.style.whiteSpace = 'pre-wrap';\n    document.body.appendChild(tempDiv);\n    \n    const marks = tempDiv.querySelectorAll('mark');\n    marks.forEach(mark => {\n      const span = document.createElement('span');\n      span.innerHTML = mark.innerHTML;\n      const parent = mark.parentElement;\n      if (parent && parent.style.fontSize) {\n        span.style.fontSize = parent.style.fontSize;\n      }\n      if (parent && parent.style.fontFamily) {\n        span.style.fontFamily = parent.style.fontFamily;\n      }\n      mark.parentNode.replaceChild(span, mark);\n    });\n    \n    const allElements = tempDiv.querySelectorAll('*');\n    allElements.forEach(el => {\n      if (el.style) {\n        el.style.backgroundColor = '';\n        el.style.background = '';\n        el.style.backgroundImage = '';\n        el.style.backgroundClip = '';\n        el.style.webkitBackgroundClip = '';\n        el.style.webkitTextFillColor = '';\n      }\n    });\n    \n    const selection = window.getSelection();\n    const range = document.createRange();\n    range.selectNodeContents(tempDiv);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    \n    try {\n      document.execCommand('copy');\n      selection.removeAllRanges();\n      document.body.removeChild(tempDiv);\n    } catch (err) {\n      document.body.removeChild(tempDiv);\n      navigator.clipboard.writeText(text);\n    }\n  };\n\n  // 忽略建议\n  const dismissSuggestion = (suggestion) => {\n    setSuggestions(suggestions.filter(s => s !== suggestion));\n    if (activeTooltip && activeTooltip.issue === suggestion.issue) {\n      setActiveTooltip(null);\n    }\n  };\n\n  // 工具栏按钮组件\n  const ToolbarButton = ({ icon: Icon, onClick, title, active = false, size = \"sm\" }) => (\n    <button\n      onClick={(e) => onClick && onClick(e)}\n      title={title}\n      className={`${size === \"sm\" ? \"p-2\" : \"p-3\"} rounded-lg transition-all duration-200 ${\n        active \n          ? isDarkMode ? 'bg-purple-600 text-white shadow-lg' : 'bg-purple-500 text-white shadow-lg'\n          : isDarkMode \n            ? 'hover:bg-gray-700 text-gray-400 hover:text-white hover:shadow-md' \n            : 'hover:bg-gray-200 text-gray-600 hover:text-gray-900 hover:shadow-md'\n      }`}\n    >\n      <Icon className={size === \"sm\" ? \"w-4 h-4\" : \"w-5 h-5\"} />\n    </button>\n  );\n\n  const ToolbarSeparator = () => (\n    <div className={`w-px h-6 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-300'}`} />\n  );\n\n  // 响应式布局类名\n  const getLayoutClasses = () => {\n    if (isMobile) {\n      return 'flex flex-col flex-1 overflow-hidden min-h-0';\n    } else if (isTablet) {\n      return 'grid grid-cols-1 lg:grid-cols-2 gap-4 flex-1 p-4 overflow-hidden';\n    } else {\n      return 'grid grid-cols-2 gap-6 flex-1 p-6 overflow-hidden';\n    }\n  };\n\n  return (\n    <div className={`min-h-screen flex flex-col transition-colors duration-300 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}>\n      {/* 头部 */}\n      <div className={`flex justify-between items-center ${isMobile ? 'p-4' : 'p-6'} border-b ${isDarkMode ? 'border-gray-800' : 'border-gray-200'} flex-shrink-0`}>\n        <div className=\"flex items-center gap-3\">\n          <Sparkles className={`${isMobile ? 'w-6 h-6' : 'w-8 h-8'} ${isDarkMode ? 'text-purple-400' : 'text-purple-600'}`} />\n          <h1 className={`${isMobile ? 'text-lg' : 'text-2xl lg:text-3xl'} font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n            智能写作助手\n          </h1>\n          <span className=\"text-xs bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200 px-2 py-1 rounded-full\">\n            专业版\n          </span>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          {isDesktop && (\n            <ToolbarButton\n              icon={showPreview ? EyeOff : Eye}\n              onClick={() => setShowPreview(!showPreview)}\n              title={showPreview ? \"隐藏预览\" : \"显示预览\"}\n            />\n          )}\n          <ToolbarButton\n            icon={isDarkMode ? Sun : Moon}\n            onClick={() => setIsDarkMode(!isDarkMode)}\n            title={isDarkMode ? \"浅色模式\" : \"深色模式\"}\n          />\n        </div>\n      </div>\n\n      <div className={`${getLayoutClasses()} ${isMobile ? 'gap-4 p-4' : ''}`}>\n        {/* 编辑器面板 */}\n        <div className={`flex flex-col relative ${\n          isMobile \n            ? `flex-1 ${isDarkMode ? 'bg-gray-800' : 'bg-white'}` \n            : `h-full ${isDarkMode ? 'bg-gray-800' : 'bg-white'} ${isDesktop ? 'rounded-lg shadow-lg' : ''}`\n        } overflow-hidden`}>\n          <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700 flex-shrink-0\">\n            <h2 className={`text-lg font-semibold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n              文本编辑器\n            </h2>\n            <div className=\"flex gap-2\">\n              <button\n                onClick={loadSampleText}\n                className={`px-3 py-1 text-sm rounded-lg transition-colors flex items-center gap-1 ${\n                  isDarkMode \n                    ? 'bg-gray-700 hover:bg-gray-600 text-gray-300' \n                    : 'bg-gray-100 hover:bg-gray-200 text-gray-700'\n                }`}\n              >\n                <FileText className=\"w-4 h-4\" />\n                {!isMobile && '示例'}\n              </button>\n              <button\n                onClick={copyText}\n                className={`px-3 py-1 text-sm rounded-lg transition-colors flex items-center gap-1 ${\n                  isDarkMode \n                    ? 'bg-gray-700 hover:bg-gray-600 text-gray-300' \n                    : 'bg-gray-100 hover:bg-gray-200 text-gray-700'\n                }`}\n              >\n                <Copy className=\"w-4 h-4\" />\n                {!isMobile && '复制'}\n              </button>\n              {/* 移动端建议面板开关 */}\n              {isMobile && suggestions.length > 0 && (\n                <button\n                  onClick={() => setShowMobileSuggestions(!showMobileSuggestions)}\n                  className={`px-3 py-1 text-sm rounded-lg transition-colors flex items-center gap-1 ${\n                    showMobileSuggestions\n                      ? 'bg-purple-500 text-white'\n                      : isDarkMode \n                        ? 'bg-gray-700 hover:bg-gray-600 text-gray-300' \n                        : 'bg-gray-100 hover:bg-gray-200 text-gray-700'\n                  }`}\n                >\n                  <Sparkles className=\"w-4 h-4\" />\n                  建议({suggestions.length})\n                </button>\n              )}\n            </div>\n          </div>\n\n          {/* 格式化工具栏 */}\n          <div className={`flex flex-wrap items-center gap-1 p-2 border-b flex-shrink-0 ${\n            isDarkMode ? 'bg-gray-900 border-gray-700' : 'bg-gray-50 border-gray-300'\n          } ${isMobile ? 'overflow-x-auto' : ''}`}>\n            \n            {/* 字体和大小选择 */}\n            {!isMobile && (\n              <>\n                <select\n                  onChange={(e) => formatText('fontName', e.target.value)}\n                  defaultValue=\"Microsoft YaHei\"\n                  className={`px-2 py-1 rounded text-sm ${\n                    isDarkMode \n                      ? 'bg-gray-700 text-gray-300 border-gray-600' \n                      : 'bg-white text-gray-700 border-gray-300'\n                  }`}\n                  title=\"字体\"\n                >\n                  {fonts.map(font => (\n                    <option key={font.value} value={font.value} style={{ fontFamily: font.value }}>\n                      {font.label}\n                    </option>\n                  ))}\n                </select>\n\n                <select\n                  onChange={(e) => formatText('fontSize', e.target.value)}\n                  defaultValue=\"16px\"\n                  className={`px-2 py-1 rounded text-sm ${\n                    isDarkMode \n                      ? 'bg-gray-700 text-gray-300 border-gray-600' \n                      : 'bg-white text-gray-700 border-gray-300'\n                  }`}\n                  title=\"字号\"\n                >\n                  {textSizes.map(size => (\n                    <option key={size.value} value={size.value}>\n                      {size.label}\n                    </option>\n                  ))}\n                </select>\n\n                <ToolbarSeparator />\n              </>\n            )}\n\n            <ToolbarButton icon={Bold} onClick={() => formatText('bold')} title=\"粗体\" />\n            <ToolbarButton icon={Italic} onClick={() => formatText('italic')} title=\"斜体\" />\n            <ToolbarButton icon={Underline} onClick={() => formatText('underline')} title=\"下划线\" />\n            \n            <ToolbarSeparator />\n            \n            <div className=\"relative\" data-dropdown=\"color\">\n              <ToolbarButton \n                icon={Palette} \n                onClick={(e) => {\n                  e.stopPropagation();\n                  setShowColorPicker(!showColorPicker);\n                }} \n                title=\"文字颜色\" \n              />\n              {showColorPicker && (\n                <div className={`absolute top-10 left-0 p-2 rounded-lg shadow-lg z-10 ${\n                  isDarkMode ? 'bg-gray-800 border border-gray-700' : 'bg-white border border-gray-200'\n                }`}>\n                  <div className=\"grid grid-cols-5 gap-1\">\n                    {colors.map(color => (\n                      <button\n                        key={color}\n                        onClick={() => {\n                          formatText('foreColor', color);\n                          setShowColorPicker(false);\n                        }}\n                        className=\"w-6 h-6 rounded border border-gray-400 hover:scale-110 transition-transform\"\n                        style={{ backgroundColor: color }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            {!isMobile && (\n              <>\n                <ToolbarButton icon={Link} onClick={() => setShowLinkDialog(true)} title=\"添加链接\" />\n                \n                <ToolbarSeparator />\n                \n                <ToolbarButton icon={AlignLeft} onClick={() => formatText('justifyLeft')} title=\"左对齐\" />\n                <ToolbarButton icon={AlignCenter} onClick={() => formatText('justifyCenter')} title=\"居中对齐\" />\n                <ToolbarButton icon={AlignRight} onClick={() => formatText('justifyRight')} title=\"右对齐\" />\n                \n                <ToolbarSeparator />\n                \n                <div className=\"relative\" data-dropdown=\"line-spacing\">\n                  <ToolbarButton \n                    icon={MoveVertical} \n                    onClick={(e) => {\n                      e.stopPropagation();\n                      setShowLineSpacing(!showLineSpacing);\n                    }} \n                    title=\"行间距\" \n                  />\n                  {showLineSpacing && (\n                    <div className={`absolute top-10 left-0 p-2 rounded-lg shadow-lg z-10 ${\n                      isDarkMode ? 'bg-gray-800 border border-gray-700' : 'bg-white border border-gray-200'\n                    }`}>\n                      <div className=\"flex flex-col gap-1\">\n                        {lineSpacings.map(spacing => (\n                          <button\n                            key={spacing.value}\n                            onClick={() => {\n                              editorRef.current.style.lineHeight = spacing.value;\n                              setShowLineSpacing(false);\n                            }}\n                            className={`px-3 py-1 text-sm text-left rounded hover:bg-opacity-10 ${\n                              isDarkMode ? 'hover:bg-white text-gray-300' : 'hover:bg-black text-gray-700'\n                            }`}\n                          >\n                            {spacing.label}\n                          </button>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n                \n                <ToolbarSeparator />\n                \n                <ToolbarButton icon={List} onClick={() => formatText('insertUnorderedList')} title=\"项目符号列表\" />\n                <ToolbarButton icon={ListOrdered} onClick={() => formatText('insertOrderedList')} title=\"编号列表\" />\n              </>\n            )}\n          </div>\n\n          {/* 链接对话框 */}\n          {showLinkDialog && (\n            <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n              <div className={`p-4 rounded-lg mx-4 ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`}>\n                <h3 className={`text-lg font-semibold mb-2 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                  添加链接\n                </h3>\n                <input\n                  type=\"text\"\n                  value={linkUrl}\n                  onChange={(e) => setLinkUrl(e.target.value)}\n                  placeholder=\"输入网址\"\n                  className={`w-64 px-3 py-2 rounded border ${\n                    isDarkMode \n                      ? 'bg-gray-900 border-gray-700 text-white' \n                      : 'bg-gray-50 border-gray-300 text-gray-900'\n                  }`}\n                />\n                <div className=\"flex gap-2 mt-3\">\n                  <button\n                    onClick={insertLink}\n                    className=\"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors\"\n                  >\n                    添加\n                  </button>\n                  <button\n                    onClick={() => {\n                      setShowLinkDialog(false);\n                      setLinkUrl('');\n                    }}\n                    className={`px-4 py-2 rounded transition-colors ${\n                      isDarkMode \n                        ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \n                        : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                    }`}\n                  >\n                    取消\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          {/* 富文本编辑器 */}\n          <div className=\"flex-1 min-h-0 overflow-hidden\">\n            <div\n              ref={editorRef}\n              contentEditable\n              onInput={updateContent}\n              onPaste={handlePaste}\n              onCopy={handleCopy}\n              className={`w-full h-full p-4 overflow-y-auto focus:outline-none transition-colors ${\n                isDarkMode \n                  ? 'bg-gray-900 text-white' \n                  : 'bg-gray-50 text-gray-900'\n              }`}\n              style={{ \n                fontFamily: 'Microsoft YaHei, Arial, sans-serif',\n                fontSize: `${16 * (editorZoom / 100)}px`,\n                lineHeight: '1.6',\n                WebkitFontSmoothing: 'antialiased',\n                MozOsxFontSmoothing: 'grayscale'\n              }}\n              placeholder=\"在此输入您的文本...\"\n            />\n          </div>\n          \n          <div className=\"p-4 border-t border-gray-200 dark:border-gray-700 flex justify-between items-center flex-shrink-0\">\n            <div className=\"flex items-center gap-4\">\n              <span className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                {text.length} 个字符\n              </span>\n              {isDesktop && (\n                <div className=\"flex items-center gap-2\">\n                  <ToolbarButton\n                    icon={ZoomOut}\n                    onClick={() => setEditorZoom(Math.max(50, editorZoom - 10))}\n                    title=\"缩小\"\n                    size=\"sm\"\n                  />\n                  <span className=\"text-sm text-gray-500 min-w-[40px] text-center\">\n                    {editorZoom}%\n                  </span>\n                  <ToolbarButton\n                    icon={ZoomIn}\n                    onClick={() => setEditorZoom(Math.min(200, editorZoom + 10))}\n                    title=\"放大\"\n                    size=\"sm\"\n                  />\n                </div>\n              )}\n            </div>\n            \n            <div className=\"flex items-center gap-3\">\n              {/* 分析类型选择器 */}\n              <select\n                value={analysisType}\n                onChange={(e) => setAnalysisType(e.target.value)}\n                className={`px-3 py-2 rounded-lg text-sm border ${\n                  isDarkMode \n                    ? 'bg-gray-800 border-gray-600 text-gray-300' \n                    : 'bg-white border-gray-300 text-gray-700'\n                }`}\n                title=\"选择分析类型\"\n              >\n                {analysisTypes.map(type => (\n                  <option key={type.value} value={type.value}>\n                    {type.label}\n                  </option>\n                ))}\n              </select>\n              \n              <button\n                onClick={analyzeText}\n                disabled={isAnalyzing || !text.trim()}\n                className={`px-6 py-2 rounded-lg font-medium transition-all transform hover:scale-105 flex items-center gap-2 ${\n                  isAnalyzing || !text.trim()\n                    ? 'bg-gray-600 text-gray-400 cursor-not-allowed'\n                    : 'bg-gradient-to-r from-purple-500 to-indigo-600 text-white hover:from-purple-600 hover:to-indigo-700 shadow-lg'\n                }`}\n              >\n                {isAnalyzing ? (\n                  <>\n                    <Loader2 className=\"w-4 h-4 animate-spin\" />\n                    {!isMobile && '分析中...'}\n                  </>\n                ) : (\n                  <>\n                    <Sparkles className=\"w-4 h-4\" />\n                    {isMobile ? '分析' : '智能分析'}\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"absolute bottom-20 left-4 right-4 p-3 rounded-lg bg-red-500/10 border border-red-500/20 z-10\">\n              <p className=\"text-red-500 text-sm\">{error}</p>\n            </div>\n          )}\n\n          {/* 建议提示框 */}\n          {activeTooltip && (\n            <SuggestionTooltip\n              suggestion={activeTooltip}\n              position={tooltipPosition}\n              isDarkMode={isDarkMode}\n              isMobile={isMobile}\n              onApply={applySuggestion}\n              onDismiss={dismissSuggestion}\n              onClose={() => setActiveTooltip(null)}\n              onPrevious={handlePreviousSuggestion}\n              onNext={handleNextSuggestion}\n              hasPrevious={activeTooltip.index > 0}\n              hasNext={activeTooltip.index < suggestions.length - 1}\n              currentIndex={activeTooltip.index}\n              totalCount={suggestions.length}\n            />\n          )}\n        </div>\n\n        {/* 桌面端/平板端建议面板 */}\n        {!isMobile && (\n          <div className={`flex flex-col h-full ${isDarkMode ? 'bg-gray-800' : 'bg-white'} ${isDesktop ? 'rounded-lg shadow-lg' : ''} overflow-hidden`}>\n            <div className=\"p-4 border-b border-gray-200 dark:border-gray-700 flex-shrink-0\">\n              <h2 className={`text-lg font-semibold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                智能改进建议\n                {suggestions.length > 0 && (\n                  <span className=\"ml-2 text-sm text-purple-500 font-normal\">\n                    ({suggestions.length} 条建议)\n                  </span>\n                )}\n              </h2>\n              {analysisType !== 'comprehensive' && (\n                <p className={`text-sm mt-1 ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                  当前分析模式：{analysisTypes.find(t => t.value === analysisType)?.label}\n                </p>\n              )}\n            </div>\n\n            {/* 类别筛选器 */}\n            <div className=\"p-4 border-b border-gray-200 dark:border-gray-700 flex-shrink-0\">\n              <div className=\"flex flex-wrap gap-2\">\n                {categories.map(category => (\n                  <button\n                    key={category.id}\n                    onClick={() => setActiveCategory(category.id)}\n                    className={`px-3 py-1 rounded-full text-sm font-medium transition-all ${\n                      activeCategory === category.id\n                        ? `${category.color} text-white shadow-lg`\n                        : isDarkMode \n                          ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \n                          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                    }`}\n                  >\n                    {category.label}\n                    {suggestions.filter(s => category.id === 'all' || s.category === category.id).length > 0 && (\n                      <span className=\"ml-1\">\n                        ({suggestions.filter(s => category.id === 'all' || s.category === category.id).length})\n                      </span>\n                    )}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"flex-1 min-h-0 overflow-y-auto p-4\">\n              <div className=\"space-y-3\">\n                {filteredSuggestions.length === 0 ? (\n                  <div className={`text-center py-12 ${isDarkMode ? 'text-gray-500' : 'text-gray-400'}`}>\n                    <Sparkles className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n                    <p className=\"text-lg font-medium mb-2\">\n                      {suggestions.length === 0 \n                        ? \"AI 正在待命\"\n                        : \"此类别暂无建议\"}\n                    </p>\n                    <p className=\"text-sm\">\n                      {suggestions.length === 0 \n                        ? \"点击「智能分析」获取改进建议\"\n                        : \"尝试其他类别或重新分析\"}\n                    </p>\n                  </div>\n                ) : (\n                  filteredSuggestions.map((suggestion, index) => (\n                    <div\n                      key={index}\n                      className={`p-4 rounded-lg border transition-all hover:shadow-md ${\n                        isDarkMode \n                          ? 'bg-gray-900 border-gray-700 hover:border-gray-600' \n                          : 'bg-gray-50 border-gray-200 hover:border-gray-300'\n                      }`}\n                    >\n                      <div className=\"flex justify-between items-start mb-3\">\n                        <div className=\"flex items-center gap-2\">\n                          <span className={`inline-block px-2 py-1 rounded-full text-xs font-medium text-white ${getCategoryColor(suggestion.category)}`}>\n                            {categories.find(cat => cat.id === suggestion.category)?.label || suggestion.category}\n                          </span>\n                          <div \n                            className=\"w-3 h-3 rounded-full\"\n                            style={{ \n                              backgroundColor: {\n                                grammar: 'rgba(59, 130, 246, 0.5)',\n                                spelling: 'rgba(239, 68, 68, 0.5)',\n                                punctuation: 'rgba(245, 158, 11, 0.5)',\n                                style: 'rgba(34, 197, 94, 0.5)',\n                                clarity: 'rgba(99, 102, 241, 0.5)'\n                              }[suggestion.category] || 'rgba(147, 51, 234, 0.5)'\n                            }}\n                            title=\"文本高亮颜色\"\n                          />\n                          <span className=\"text-xs text-purple-500 font-medium\">AI</span>\n                        </div>\n                        <div className=\"flex gap-1\">\n                          <button\n                            onClick={() => applySuggestion(suggestion)}\n                            className=\"p-1 rounded hover:bg-green-500/20 text-green-500 transition-colors\"\n                            title=\"应用建议\"\n                          >\n                            <Check className=\"w-4 h-4\" />\n                          </button>\n                          <button\n                            onClick={() => dismissSuggestion(suggestion)}\n                            className=\"p-1 rounded hover:bg-red-500/20 text-red-500 transition-colors\"\n                            title=\"忽略建议\"\n                          >\n                            <X className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      </div>\n                      \n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-center gap-2 text-sm\">\n                          <span className={`px-2 py-1 rounded bg-red-100 dark:bg-red-900/30 text-red-700 dark:text-red-300 line-through`}>\n                            {suggestion.issue}\n                          </span>\n                          <span className={isDarkMode ? 'text-gray-500' : 'text-gray-400'}>→</span>\n                          <span className={`px-2 py-1 rounded bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-300 font-medium`}>\n                            {suggestion.suggestion}\n                          </span>\n                        </div>\n                        \n                        <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                          {suggestion.explanation}\n                        </p>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n\n              {suggestions.length > 0 && (\n                <div className={`mt-6 pt-4 border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-200'}`}>\n                  <button\n                    onClick={() => {\n                      let currentText = text;\n                      \n                      const sortedSuggestions = [...suggestions].sort((a, b) => {\n                        const indexA = currentText.indexOf(a.issue);\n                        const indexB = currentText.indexOf(b.issue);\n                        return indexB - indexA;\n                      });\n                      \n                      sortedSuggestions.forEach(suggestion => {\n                        const issueIndex = currentText.indexOf(suggestion.issue);\n                        if (issueIndex !== -1) {\n                          const beforeText = currentText.slice(0, issueIndex);\n                          const afterText = currentText.slice(issueIndex + suggestion.issue.length);\n                          currentText = beforeText + suggestion.suggestion + afterText;\n                        }\n                      });\n                      \n                      const paragraphs = currentText.split('\\n\\n').map(p => p.trim()).filter(p => p);\n                      const newHtmlContent = paragraphs\n                        .map(p => `<div style=\"font-family: Microsoft YaHei, Arial; font-size: 16px; line-height: 1.6; margin-bottom: 1em;\">${escapeHtml(p).replace(/\\n/g, '<br>')}</div>`)\n                        .join('');\n                      \n                      editorRef.current.innerHTML = newHtmlContent;\n                      updateContent();\n                      \n                      setSuggestions([]);\n                    }}\n                    className=\"w-full py-3 rounded-lg bg-gradient-to-r from-green-500 to-emerald-600 text-white font-medium hover:from-green-600 hover:to-emerald-700 transition-all shadow-lg hover:shadow-xl transform hover:scale-105\"\n                  >\n                    🚀 一键应用全部建议\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* 移动端浮动建议面板 */}\n      {isMobile && showMobileSuggestions && (\n        <div\n          ref={panelRef}\n          data-mobile-panel\n          className={`fixed z-40 w-80 ${\n            isPanelMinimized ? 'h-auto' : 'max-h-[70vh]'\n          } ${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-2xl border ${\n            isDarkMode ? 'border-gray-700' : 'border-gray-300'\n          } overflow-hidden ${isDragging ? 'shadow-3xl scale-105' : ''} transition-all duration-200`}\n          style={{\n            left: `${panelPosition.x}px`,\n            top: `${panelPosition.y}px`,\n            transform: isDragging ? 'rotate(2deg)' : 'rotate(0deg)'\n          }}\n        >\n          {/* 拖拽头部 */}\n          <div \n            className={`flex items-center justify-between p-3 border-b cursor-move ${\n              isDarkMode ? 'border-gray-700 bg-gray-900' : 'border-gray-300 bg-gray-100'\n            }`}\n            onMouseDown={handleMouseDown}\n            onTouchStart={handleTouchStart}\n          >\n            <div className=\"flex items-center gap-2\">\n              <GripVertical className={`w-4 h-4 ${isDarkMode ? 'text-gray-500' : 'text-gray-400'}`} />\n              <h3 className={`text-sm font-semibold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                智能建议 ({suggestions.length})\n              </h3>\n            </div>\n            <div className=\"flex gap-1\">\n              <button\n                onClick={() => setIsPanelMinimized(!isPanelMinimized)}\n                className={`p-1 rounded transition-colors ${\n                  isDarkMode \n                    ? 'hover:bg-gray-700 text-gray-400' \n                    : 'hover:bg-gray-200 text-gray-600'\n                }`}\n                title={isPanelMinimized ? \"展开\" : \"最小化\"}\n              >\n                {isPanelMinimized ? <Maximize2 className=\"w-4 h-4\" /> : <Minimize2 className=\"w-4 h-4\" />}\n              </button>\n              <button\n                onClick={() => setShowMobileSuggestions(false)}\n                className={`p-1 rounded transition-colors ${\n                  isDarkMode \n                    ? 'hover:bg-gray-700 text-gray-400' \n                    : 'hover:bg-gray-200 text-gray-600'\n                }`}\n                title=\"关闭\"\n              >\n                <X className=\"w-4 h-4\" />\n              </button>\n            </div>\n          </div>\n\n          {/* 面板内容 */}\n          {!isPanelMinimized && (\n            <>\n              {/* 类别筛选器 */}\n              <div className=\"p-3 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"flex flex-wrap gap-1\">\n                  {categories.map(category => (\n                    <button\n                      key={category.id}\n                      onClick={() => setActiveCategory(category.id)}\n                      className={`px-2 py-1 rounded-full text-xs font-medium transition-all ${\n                        activeCategory === category.id\n                          ? `${category.color} text-white shadow-md`\n                          : isDarkMode \n                            ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \n                            : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                      }`}\n                    >\n                      {category.label}\n                      {suggestions.filter(s => category.id === 'all' || s.category === category.id).length > 0 && (\n                        <span className=\"ml-1\">\n                          ({suggestions.filter(s => category.id === 'all' || s.category === category.id).length})\n                        </span>\n                      )}\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              {/* 建议列表 */}\n              <div className=\"max-h-96 overflow-y-auto p-3\">\n                <div className=\"space-y-2\">\n                  {filteredSuggestions.length === 0 ? (\n                    <div className={`text-center py-8 ${isDarkMode ? 'text-gray-500' : 'text-gray-400'}`}>\n                      <Sparkles className=\"w-8 h-8 mx-auto mb-2 opacity-50\" />\n                      <p className=\"text-sm font-medium mb-1\">\n                        {suggestions.length === 0 \n                          ? \"AI 正在待命\"\n                          : \"此类别暂无建议\"}\n                      </p>\n                      <p className=\"text-xs\">\n                        {suggestions.length === 0 \n                          ? \"点击「智能分析」获取改进建议\"\n                          : \"尝试其他类别\"}\n                      </p>\n                    </div>\n                  ) : (\n                    filteredSuggestions.map((suggestion, index) => (\n                      <div\n                        key={index}\n                        className={`p-3 rounded-lg border transition-all ${\n                          isDarkMode \n                            ? 'bg-gray-900 border-gray-700' \n                            : 'bg-gray-50 border-gray-200'\n                        }`}\n                      >\n                        <div className=\"flex justify-between items-start mb-2\">\n                          <span className={`inline-block px-2 py-1 rounded-full text-xs font-medium text-white ${getCategoryColor(suggestion.category)}`}>\n                            {categories.find(cat => cat.id === suggestion.category)?.label || suggestion.category}\n                          </span>\n                          <div className=\"flex gap-1\">\n                            <button\n                              onClick={() => applySuggestion(suggestion)}\n                              className=\"p-1 rounded hover:bg-green-500/20 text-green-500 transition-colors\"\n                              title=\"应用建议\"\n                            >\n                              <Check className=\"w-3 h-3\" />\n                            </button>\n                            <button\n                              onClick={() => dismissSuggestion(suggestion)}\n                              className=\"p-1 rounded hover:bg-red-500/20 text-red-500 transition-colors\"\n                              title=\"忽略建议\"\n                            >\n                              <X className=\"w-3 h-3\" />\n                            </button>\n                          </div>\n                        </div>\n                        \n                        <div className=\"space-y-2\">\n                          <div className=\"text-xs\">\n                            <div className={`inline-block px-2 py-1 rounded bg-red-100 dark:bg-red-900/30 text-red-700 dark:text-red-300 line-through mb-1`}>\n                              {suggestion.issue}\n                            </div>\n                            <div className=\"text-gray-400 inline mx-1\">→</div>\n                            <div className={`inline-block px-2 py-1 rounded bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-300 font-medium`}>\n                              {suggestion.suggestion}\n                            </div>\n                          </div>\n                          \n                          <p className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                            {suggestion.explanation}\n                          </p>\n                        </div>\n                      </div>\n                    ))\n                  )}\n                </div>\n\n                {suggestions.length > 0 && (\n                  <div className=\"mt-4 pt-3 border-t border-gray-200 dark:border-gray-700\">\n                    <button\n                      onClick={() => {\n                        let currentText = text;\n                        \n                        const sortedSuggestions = [...suggestions].sort((a, b) => {\n                          const indexA = currentText.indexOf(a.issue);\n                          const indexB = currentText.indexOf(b.issue);\n                          return indexB - indexA;\n                        });\n                        \n                        sortedSuggestions.forEach(suggestion => {\n                          const issueIndex = currentText.indexOf(suggestion.issue);\n                          if (issueIndex !== -1) {\n                            const beforeText = currentText.slice(0, issueIndex);\n                            const afterText = currentText.slice(issueIndex + suggestion.issue.length);\n                            currentText = beforeText + suggestion.suggestion + afterText;\n                          }\n                        });\n                        \n                        const paragraphs = currentText.split('\\n\\n').map(p => p.trim()).filter(p => p);\n                        const newHtmlContent = paragraphs\n                          .map(p => `<div style=\"font-family: Microsoft YaHei, Arial; font-size: 16px; line-height: 1.6; margin-bottom: 1em;\">${escapeHtml(p).replace(/\\n/g, '<br>')}</div>`)\n                          .join('');\n                        \n                        editorRef.current.innerHTML = newHtmlContent;\n                        updateContent();\n                        \n                        setSuggestions([]);\n                        setShowMobileSuggestions(false);\n                      }}\n                      className=\"w-full py-2 rounded-lg bg-gradient-to-r from-green-500 to-emerald-600 text-white text-sm font-medium hover:from-green-600 hover:to-emerald-700 transition-all\"\n                    >\n                      🚀 一键应用全部建议\n                    </button>\n                  </div>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextEditor;",
      "codeLang": "tsx"
    }
  ]
}